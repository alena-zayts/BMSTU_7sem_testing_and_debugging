{"uid":"33c25fdb6e31d612","name":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 31, initialSlopes: [Slope { SlopeID = 172, SlopeName = slopeNameba089e6b-e8ed-4631-b589-39ea941fc7d0, IsOpen = True, DifficultyLevel = 17, ConnectedLifts =  }, Slope { SlopeID = 140, SlopeName = slopeName5f94ad60-59d9-4cce-bca2-38094db01714, IsOpen = False, DifficultyLevel = 141, ConnectedLifts =  }, Slope { SlopeID = 156, SlopeName = slopeNamef32db57c-3ce2-4145-a778-b8a23e8da832, IsOpen = True, DifficultyLevel = 116, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","fullName":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 31, initialSlopes: [Slope { SlopeID = 172, SlopeName = slopeNameba089e6b-e8ed-4631-b589-39ea941fc7d0, IsOpen = True, DifficultyLevel = 17, ConnectedLifts =  }, Slope { SlopeID = 140, SlopeName = slopeName5f94ad60-59d9-4cce-bca2-38094db01714, IsOpen = False, DifficultyLevel = 141, ConnectedLifts =  }, Slope { SlopeID = 156, SlopeName = slopeNamef32db57c-3ce2-4145-a778-b8a23e8da832, IsOpen = True, DifficultyLevel = 116, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","historyId":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 31, initialSlopes: [Slope { SlopeID = 172, SlopeName = slopeNameba089e6b-e8ed-4631-b589-39ea941fc7d0, IsOpen = True, DifficultyLevel = 17, ConnectedLifts =  }, Slope { SlopeID = 140, SlopeName = slopeName5f94ad60-59d9-4cce-bca2-38094db01714, IsOpen = False, DifficultyLevel = 141, ConnectedLifts =  }, Slope { SlopeID = 156, SlopeName = slopeNamef32db57c-3ce2-4145-a778-b8a23e8da832, IsOpen = True, DifficultyLevel = 116, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","time":{"start":1667459051972,"stop":1667459051985,"duration":13},"status":"passed","statusMessage":"","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"thread","value":".NET Long Running Task"},{"name":"host","value":"DESKTOP-TJ9D65N"},{"name":"testClass","value":"BL.Tests.SlopesServiceTest"},{"name":"testMethod","value":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 31, initialSlopes: [Slope { SlopeID = 172, SlopeName = slopeNameba089e6b-e8ed-4631-b589-39ea941fc7d0, IsOpen = True, DifficultyLevel = 17, ConnectedLifts =  }, Slope { SlopeID = 140, SlopeName = slopeName5f94ad60-59d9-4cce-bca2-38094db01714, IsOpen = False, DifficultyLevel = 141, ConnectedLifts =  }, Slope { SlopeID = 156, SlopeName = slopeNamef32db57c-3ce2-4145-a778-b8a23e8da832, IsOpen = True, DifficultyLevel = 116, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })"},{"name":"package","value":"BL.Tests.SlopesServiceTest"},{"name":"suite","value":"SlopesServiceSuite"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"33c25fdb6e31d612.json","parameterValues":[]}