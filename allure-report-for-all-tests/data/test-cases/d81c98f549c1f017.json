{"uid":"d81c98f549c1f017","name":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 18, initialSlopes: [Slope { SlopeID = 22, SlopeName = slopeNamede78c429-ce31-455b-9701-1102cf89c687, IsOpen = True, DifficultyLevel = 63, ConnectedLifts =  }, Slope { SlopeID = 231, SlopeName = slopeNamef8c016c3-51ec-426a-b478-eaa3b868a187, IsOpen = False, DifficultyLevel = 122, ConnectedLifts =  }, Slope { SlopeID = 211, SlopeName = slopeName78298411-ad43-4ba1-93f2-55b2944b51dd, IsOpen = True, DifficultyLevel = 183, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","fullName":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 18, initialSlopes: [Slope { SlopeID = 22, SlopeName = slopeNamede78c429-ce31-455b-9701-1102cf89c687, IsOpen = True, DifficultyLevel = 63, ConnectedLifts =  }, Slope { SlopeID = 231, SlopeName = slopeNamef8c016c3-51ec-426a-b478-eaa3b868a187, IsOpen = False, DifficultyLevel = 122, ConnectedLifts =  }, Slope { SlopeID = 211, SlopeName = slopeName78298411-ad43-4ba1-93f2-55b2944b51dd, IsOpen = True, DifficultyLevel = 183, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","historyId":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 18, initialSlopes: [Slope { SlopeID = 22, SlopeName = slopeNamede78c429-ce31-455b-9701-1102cf89c687, IsOpen = True, DifficultyLevel = 63, ConnectedLifts =  }, Slope { SlopeID = 231, SlopeName = slopeNamef8c016c3-51ec-426a-b478-eaa3b868a187, IsOpen = False, DifficultyLevel = 122, ConnectedLifts =  }, Slope { SlopeID = 211, SlopeName = slopeName78298411-ad43-4ba1-93f2-55b2944b51dd, IsOpen = True, DifficultyLevel = 183, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","time":{"start":1667497762005,"stop":1667497762048,"duration":43},"status":"passed","statusMessage":"","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"thread","value":".NET Long Running Task"},{"name":"host","value":"DESKTOP-TJ9D65N"},{"name":"testClass","value":"BL.Tests.SlopesServiceTest"},{"name":"testMethod","value":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 18, initialSlopes: [Slope { SlopeID = 22, SlopeName = slopeNamede78c429-ce31-455b-9701-1102cf89c687, IsOpen = True, DifficultyLevel = 63, ConnectedLifts =  }, Slope { SlopeID = 231, SlopeName = slopeNamef8c016c3-51ec-426a-b478-eaa3b868a187, IsOpen = False, DifficultyLevel = 122, ConnectedLifts =  }, Slope { SlopeID = 211, SlopeName = slopeName78298411-ad43-4ba1-93f2-55b2944b51dd, IsOpen = True, DifficultyLevel = 183, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })"},{"name":"package","value":"BL.Tests.SlopesServiceTest"},{"name":"suite","value":"SlopesServiceSuite"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"d81c98f549c1f017.json","parameterValues":[]}