"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","7","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestUpdateSlopeInfoAsync(userID: 217, slope: Slope { SlopeID = 106, SlopeName = slopeName61696e7d-6c5e-48b5-8b7d-2a72427a2dfe, IsOpen = True, DifficultyLevel = 134, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:8>, slopesRepositoryStub: Mock<ISlopesRepository:6>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestUpdateSlopeInfoAsync(userID: 217, slope: Slope { SlopeID = 106, SlopeName = slopeName61696e7d-6c5e-48b5-8b7d-2a72427a2dfe, IsOpen = True, DifficultyLevel = 134, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:8>, slopesRepositoryStub: Mock<ISlopesRepository:6>, sut: SlopesService { })",""
"passed","Thu Nov 03 20:49:21 MSK 2022","Thu Nov 03 20:49:21 MSK 2022","80","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestAdminGetUsers","BL.Tests.UsersServiceTests.TestAdminGetUsers",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","4","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAuthorizedFunctions(functionName: ""SendMessageAsync"")","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAuthorizedFunctions(functionName: ""SendMessageAsync"")",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","3","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestAdminDeleteUser","BL.Tests.UsersServiceTests.TestAdminDeleteUser",""
"passed","Thu Nov 03 20:49:21 MSK 2022","Thu Nov 03 20:49:21 MSK 2022","6","","LiftsSlopesServiceSuite","","BL.Tests.LiftsSlopesServiceTests","BL.Tests.LiftsSlopesServiceTests.TestGetLiftsSlopesInfoAsync(liftsSlopes: [LiftSlope { RecordID = 86, LiftID = 147, SlopeID = 185 }, LiftSlope { RecordID = 2, LiftID = 99, SlopeID = 142 }, LiftSlope { RecordID = 221, LiftID = 74, SlopeID = 45 }], slopesRepositoryStub: Mock<ISlopesRepository:1>, liftsRepositoryStub: Mock<ILiftsRepository:6>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:6>)","BL.Tests.LiftsSlopesServiceTests.TestGetLiftsSlopesInfoAsync(liftsSlopes: [LiftSlope { RecordID = 86, LiftID = 147, SlopeID = 185 }, LiftSlope { RecordID = 2, LiftID = 99, SlopeID = 142 }, LiftSlope { RecordID = 221, LiftID = 74, SlopeID = 45 }], slopesRepositoryStub: Mock<ISlopesRepository:1>, liftsRepositoryStub: Mock<ILiftsRepository:6>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:6>)",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AdminHasAccessToAllFunctions","BL.Tests.CheckPermissionsServiceTests.AdminHasAccessToAllFunctions",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","9","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestAdminAddAutoIncrementUser","BL.Tests.UsersServiceTests.TestAdminAddAutoIncrementUser",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","10","","TurnstilesServiceSuite","","BL.Tests.TurnstilesServiceTest","BL.Tests.TurnstilesServiceTest.TestAdminGetTurnstileAsync(userID: 93, turnstile: Turnstile { TurnstileID = 89, LiftID = 172, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:12>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:6>, sut: TurnstilesService { })","BL.Tests.TurnstilesServiceTest.TestAdminGetTurnstileAsync(userID: 93, turnstile: Turnstile { TurnstileID = 89, LiftID = 172, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:12>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:6>, sut: TurnstilesService { })",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","1","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","10","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestAdminUpdateUser","BL.Tests.UsersServiceTests.TestAdminUpdateUser",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","4","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestRegisterUserWithRepeatedEmail","BL.Tests.UsersServiceTests.TestRegisterUserWithRepeatedEmail",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","43","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 18, initialSlopes: [Slope { SlopeID = 22, SlopeName = slopeNamede78c429-ce31-455b-9701-1102cf89c687, IsOpen = True, DifficultyLevel = 63, ConnectedLifts =  }, Slope { SlopeID = 231, SlopeName = slopeNamef8c016c3-51ec-426a-b478-eaa3b868a187, IsOpen = False, DifficultyLevel = 122, ConnectedLifts =  }, Slope { SlopeID = 211, SlopeName = slopeName78298411-ad43-4ba1-93f2-55b2944b51dd, IsOpen = True, DifficultyLevel = 183, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 18, initialSlopes: [Slope { SlopeID = 22, SlopeName = slopeNamede78c429-ce31-455b-9701-1102cf89c687, IsOpen = True, DifficultyLevel = 63, ConnectedLifts =  }, Slope { SlopeID = 231, SlopeName = slopeNamef8c016c3-51ec-426a-b478-eaa3b868a187, IsOpen = False, DifficultyLevel = 122, ConnectedLifts =  }, Slope { SlopeID = 211, SlopeName = slopeName78298411-ad43-4ba1-93f2-55b2944b51dd, IsOpen = True, DifficultyLevel = 183, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })",""
"passed","Thu Nov 03 20:49:21 MSK 2022","Thu Nov 03 20:49:21 MSK 2022","78","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestAdminAddAutoIncrementSlopeAsync(userID: 153, slope: Slope { SlopeID = 65, SlopeName = slopeNameabb759d8-68fd-489a-815e-feee47ab90ff, IsOpen = True, DifficultyLevel = 178, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:10>, slopesRepositoryStub: Mock<ISlopesRepository:8>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestAdminAddAutoIncrementSlopeAsync(userID: 153, slope: Slope { SlopeID = 65, SlopeName = slopeNameabb759d8-68fd-489a-815e-feee47ab90ff, IsOpen = True, DifficultyLevel = 178, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:10>, slopesRepositoryStub: Mock<ISlopesRepository:8>, sut: SlopesService { })",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","4","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestLogInOk","BL.Tests.UsersServiceTests.TestLogInOk",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","1","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")",""
"passed","Thu Nov 03 20:49:21 MSK 2022","Thu Nov 03 20:49:21 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","1","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")",""
"passed","Thu Nov 03 20:49:21 MSK 2022","Thu Nov 03 20:49:21 MSK 2022","78","","TurnstilesServiceSuite","","BL.Tests.TurnstilesServiceTest","BL.Tests.TurnstilesServiceTest.TestAdminGetTurnstilesAsync(userID: 245, initialTurnstiles: [Turnstile { TurnstileID = 100, LiftID = 82, IsOpen = True }, Turnstile { TurnstileID = 234, LiftID = 228, IsOpen = False }, Turnstile { TurnstileID = 167, LiftID = 68, IsOpen = True }], checkPermissionServiceMock: Mock<ICheckPermissionService:13>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:7>, sut: TurnstilesService { })","BL.Tests.TurnstilesServiceTest.TestAdminGetTurnstilesAsync(userID: 245, initialTurnstiles: [Turnstile { TurnstileID = 100, LiftID = 82, IsOpen = True }, Turnstile { TurnstileID = 234, LiftID = 228, IsOpen = False }, Turnstile { TurnstileID = 167, LiftID = 68, IsOpen = True }], checkPermissionServiceMock: Mock<ICheckPermissionService:13>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:7>, sut: TurnstilesService { })",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","11","","LiftsServiceSuite","","BL.Tests.LiftsServiceTest","BL.Tests.LiftsServiceTest.TestAdminAddAutoIncrementLiftAsync(userID: 26, lift: Lift { LiftID = 69, LiftName = liftNamee04e3d05-7cd2-4ac5-b5c7-a5dd73d2e0ec, IsOpen = True, SeatsAmount = 71, LiftingTime = 204, QueueTime = 21, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:5>, liftsRepositoryStub: Mock<ILiftsRepository:5>, sut: LiftsService { })","BL.Tests.LiftsServiceTest.TestAdminAddAutoIncrementLiftAsync(userID: 26, lift: Lift { LiftID = 69, LiftName = liftNamee04e3d05-7cd2-4ac5-b5c7-a5dd73d2e0ec, IsOpen = True, SeatsAmount = 71, LiftingTime = 204, QueueTime = 21, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:5>, liftsRepositoryStub: Mock<ILiftsRepository:5>, sut: LiftsService { })",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","4","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestAdminGetUserByIDAsync","BL.Tests.UsersServiceTests.TestAdminGetUserByIDAsync",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","6","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestAdminAddSlopeAsync(userID: 154, slope: Slope { SlopeID = 88, SlopeName = slopeName70be1702-e14a-4b69-8a5d-852743d88f65, IsOpen = True, DifficultyLevel = 171, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:11>, slopesRepositoryStub: Mock<ISlopesRepository:9>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestAdminAddSlopeAsync(userID: 154, slope: Slope { SlopeID = 88, SlopeName = slopeName70be1702-e14a-4b69-8a5d-852743d88f65, IsOpen = True, DifficultyLevel = 171, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:11>, slopesRepositoryStub: Mock<ISlopesRepository:9>, sut: SlopesService { })",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","1","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasAccessToAuthorizedFunctions(functionName: ""LogOutAsync"")","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasAccessToAuthorizedFunctions(functionName: ""LogOutAsync"")",""
"passed","Thu Nov 03 20:49:21 MSK 2022","Thu Nov 03 20:49:21 MSK 2022","8","","TurnstilesServiceSuite","","BL.Tests.TurnstilesServiceTest","BL.Tests.TurnstilesServiceTest.TestAdminAddAutoIncrementTurnstileAsync(userID: 55, turnstile: Turnstile { TurnstileID = 60, LiftID = 130, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:16>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:10>, sut: TurnstilesService { })","BL.Tests.TurnstilesServiceTest.TestAdminAddAutoIncrementTurnstileAsync(userID: 55, turnstile: Turnstile { TurnstileID = 60, LiftID = 130, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:16>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:10>, sut: TurnstilesService { })",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAuthorizedFunctions(functionName: ""LogOutAsync"")","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAuthorizedFunctions(functionName: ""LogOutAsync"")",""
"passed","Thu Nov 03 20:49:21 MSK 2022","Thu Nov 03 20:49:21 MSK 2022","77","","LiftsSlopesServiceSuite","","BL.Tests.LiftsSlopesServiceTests","BL.Tests.LiftsSlopesServiceTests.TestAdminAddAutoIncrementLiftSlopeAsync(lift: Lift { LiftID = 204, LiftName = liftNamea70fba95-005d-427c-8797-1938a7109e1c, IsOpen = True, SeatsAmount = 217, LiftingTime = 198, QueueTime = 188, ConnectedSlopes =  }, slope: Slope { SlopeID = 184, SlopeName = slopeName66d863bc-48fb-4835-beb6-40805c935af7, IsOpen = False, DifficultyLevel = 93, ConnectedLifts =  }, slopesRepositoryStub: Mock<ISlopesRepository:3>, liftsRepositoryStub: Mock<ILiftsRepository:8>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:8>)","BL.Tests.LiftsSlopesServiceTests.TestAdminAddAutoIncrementLiftSlopeAsync(lift: Lift { LiftID = 204, LiftName = liftNamea70fba95-005d-427c-8797-1938a7109e1c, IsOpen = True, SeatsAmount = 217, LiftingTime = 198, QueueTime = 188, ConnectedSlopes =  }, slope: Slope { SlopeID = 184, SlopeName = slopeName66d863bc-48fb-4835-beb6-40805c935af7, IsOpen = False, DifficultyLevel = 93, ConnectedLifts =  }, slopesRepositoryStub: Mock<ISlopesRepository:3>, liftsRepositoryStub: Mock<ILiftsRepository:8>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:8>)",""
"passed","Thu Nov 03 20:49:21 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","97","","LiftsServiceSuite","","BL.Tests.LiftsServiceTest","BL.Tests.LiftsServiceTest.TestGetLiftsInfoAsync(userID: 99, initialLifts: [Lift { LiftID = 127, LiftName = liftNameb2482b12-87cc-4bb2-bcb6-b601be165518, IsOpen = True, SeatsAmount = 109, LiftingTime = 159, QueueTime = 192, ConnectedSlopes =  }, Lift { LiftID = 55, LiftName = liftNamed4505d70-eacd-4349-9e8b-b9dedbeb53b0, IsOpen = False, SeatsAmount = 124, LiftingTime = 29, QueueTime = 14, ConnectedSlopes =  }, Lift { LiftID = 139, LiftName = liftName8735d823-fa8b-4919-9b90-c4df179da2e8, IsOpen = True, SeatsAmount = 233, LiftingTime = 107, QueueTime = 226, ConnectedSlopes =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:2>, liftsRepositoryStub: Mock<ILiftsRepository:2>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:2>, sut: LiftsService { })","BL.Tests.LiftsServiceTest.TestGetLiftsInfoAsync(userID: 99, initialLifts: [Lift { LiftID = 127, LiftName = liftNameb2482b12-87cc-4bb2-bcb6-b601be165518, IsOpen = True, SeatsAmount = 109, LiftingTime = 159, QueueTime = 192, ConnectedSlopes =  }, Lift { LiftID = 55, LiftName = liftNamed4505d70-eacd-4349-9e8b-b9dedbeb53b0, IsOpen = False, SeatsAmount = 124, LiftingTime = 29, QueueTime = 14, ConnectedSlopes =  }, Lift { LiftID = 139, LiftName = liftName8735d823-fa8b-4919-9b90-c4df179da2e8, IsOpen = True, SeatsAmount = 233, LiftingTime = 107, QueueTime = 226, ConnectedSlopes =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:2>, liftsRepositoryStub: Mock<ILiftsRepository:2>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:2>, sut: LiftsService { })",""
"passed","Thu Nov 03 20:49:21 MSK 2022","Thu Nov 03 20:49:21 MSK 2022","4","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestRegisterUserWithNoPassword","BL.Tests.UsersServiceTests.TestRegisterUserWithNoPassword",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","3","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestLogInWithWrongPassword","BL.Tests.UsersServiceTests.TestLogInWithWrongPassword",""
"passed","Thu Nov 03 20:49:21 MSK 2022","Thu Nov 03 20:49:21 MSK 2022","78","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","8","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestAdminDeleteSlopeAsync(userID: 215, slope: Slope { SlopeID = 165, SlopeName = slopeName0c0ae142-8036-40b2-a378-016458be8f76, IsOpen = True, DifficultyLevel = 87, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:9>, slopesRepositoryStub: Mock<ISlopesRepository:7>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:12>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestAdminDeleteSlopeAsync(userID: 215, slope: Slope { SlopeID = 165, SlopeName = slopeName0c0ae142-8036-40b2-a378-016458be8f76, IsOpen = True, DifficultyLevel = 87, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:9>, slopesRepositoryStub: Mock<ISlopesRepository:7>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:12>, sut: SlopesService { })",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","4","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminFunctions","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminFunctions",""
"passed","Thu Nov 03 20:49:21 MSK 2022","Thu Nov 03 20:49:21 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","17","","LiftsServiceSuite","","BL.Tests.LiftsServiceTest","BL.Tests.LiftsServiceTest.TestAdminDeleteLiftAsync(userID: 222, lift: Lift { LiftID = 243, LiftName = liftName340af891-7a5a-4c41-b67f-951cd5710639, IsOpen = True, SeatsAmount = 98, LiftingTime = 32, QueueTime = 74, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:4>, liftsRepositoryStub: Mock<ILiftsRepository:4>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:4>, sut: LiftsService { })","BL.Tests.LiftsServiceTest.TestAdminDeleteLiftAsync(userID: 222, lift: Lift { LiftID = 243, LiftName = liftName340af891-7a5a-4c41-b67f-951cd5710639, IsOpen = True, SeatsAmount = 98, LiftingTime = 32, QueueTime = 74, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:4>, liftsRepositoryStub: Mock<ILiftsRepository:4>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:4>, sut: LiftsService { })",""
"passed","Thu Nov 03 20:49:21 MSK 2022","Thu Nov 03 20:49:21 MSK 2022","78","","LiftsServiceSuite","","BL.Tests.LiftsServiceTest","BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 94, lift: Lift { LiftID = 28, LiftName = liftName4be460c2-3724-4ecf-b3d5-cca15f47a62f, IsOpen = True, SeatsAmount = 146, LiftingTime = 137, QueueTime = 131, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryStub: Mock<ILiftsRepository:1>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })","BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 94, lift: Lift { LiftID = 28, LiftName = liftName4be460c2-3724-4ecf-b3d5-cca15f47a62f, IsOpen = True, SeatsAmount = 146, LiftingTime = 137, QueueTime = 131, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryStub: Mock<ILiftsRepository:1>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })",""
"passed","Thu Nov 03 20:49:21 MSK 2022","Thu Nov 03 20:49:21 MSK 2022","13","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestGetSlopeInfoAsync(userID: 46, slope: Slope { SlopeID = 86, SlopeName = slopeName69b4cb90-d58c-4364-a072-0e05a3c25dce, IsOpen = True, DifficultyLevel = 54, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:6>, slopesRepositoryStub: Mock<ISlopesRepository:4>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:9>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestGetSlopeInfoAsync(userID: 46, slope: Slope { SlopeID = 86, SlopeName = slopeName69b4cb90-d58c-4364-a072-0e05a3c25dce, IsOpen = True, DifficultyLevel = 54, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:6>, slopesRepositoryStub: Mock<ISlopesRepository:4>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:9>, sut: SlopesService { })",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","6","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasAccessToAuthorizedFunctions(functionName: ""SendMessageAsync"")","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasAccessToAuthorizedFunctions(functionName: ""SendMessageAsync"")",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","8","","LiftsSlopesServiceSuite","","BL.Tests.LiftsSlopesServiceTests","BL.Tests.LiftsSlopesServiceTests.TestAdminDeleteLiftSlopeAsync(lift: Lift { LiftID = 213, LiftName = liftNamed998cd3c-45d3-4856-9c7d-ae6825434a3f, IsOpen = True, SeatsAmount = 31, LiftingTime = 156, QueueTime = 170, ConnectedSlopes =  }, slope: Slope { SlopeID = 164, SlopeName = slopeNameae15a379-8b96-4f12-9206-af6f586b8978, IsOpen = False, DifficultyLevel = 195, ConnectedLifts =  }, slopesRepositoryStub: Mock<ISlopesRepository:2>, liftsRepositoryStub: Mock<ILiftsRepository:7>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:7>)","BL.Tests.LiftsSlopesServiceTests.TestAdminDeleteLiftSlopeAsync(lift: Lift { LiftID = 213, LiftName = liftNamed998cd3c-45d3-4856-9c7d-ae6825434a3f, IsOpen = True, SeatsAmount = 31, LiftingTime = 156, QueueTime = 170, ConnectedSlopes =  }, slope: Slope { SlopeID = 164, SlopeName = slopeNameae15a379-8b96-4f12-9206-af6f586b8978, IsOpen = False, DifficultyLevel = 195, ConnectedLifts =  }, slopesRepositoryStub: Mock<ISlopesRepository:2>, liftsRepositoryStub: Mock<ILiftsRepository:7>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:7>)",""
"passed","Thu Nov 03 20:49:21 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","11","","TurnstilesServiceSuite","","BL.Tests.TurnstilesServiceTest","BL.Tests.TurnstilesServiceTest.TestAdminDeleteTurnstileAsync(userID: 146, turnstile: Turnstile { TurnstileID = 66, LiftID = 20, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:15>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:9>, sut: TurnstilesService { })","BL.Tests.TurnstilesServiceTest.TestAdminDeleteTurnstileAsync(userID: 146, turnstile: Turnstile { TurnstileID = 66, LiftID = 20, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:15>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:9>, sut: TurnstilesService { })",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","17","","LiftsServiceSuite","","BL.Tests.LiftsServiceTest","BL.Tests.LiftsServiceTest.TestUpdateLiftInfoAsync(userID: 44, lift: Lift { LiftID = 95, LiftName = liftNamefaa7ea12-2956-47ce-b1d3-b50ad1f4cb80, IsOpen = True, SeatsAmount = 254, LiftingTime = 92, QueueTime = 130, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:3>, liftsRepositoryStub: Mock<ILiftsRepository:3>, sut: LiftsService { })","BL.Tests.LiftsServiceTest.TestUpdateLiftInfoAsync(userID: 44, lift: Lift { LiftID = 95, LiftName = liftNamefaa7ea12-2956-47ce-b1d3-b50ad1f4cb80, IsOpen = True, SeatsAmount = 254, LiftingTime = 92, QueueTime = 130, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:3>, liftsRepositoryStub: Mock<ILiftsRepository:3>, sut: LiftsService { })",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminFunctions","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminFunctions",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","16","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestRegisterOk","BL.Tests.UsersServiceTests.TestRegisterOk",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","7","","TurnstilesServiceSuite","","BL.Tests.TurnstilesServiceTest","BL.Tests.TurnstilesServiceTest.TestAdminUpdateTurnstileAsync(userID: 83, turnstile: Turnstile { TurnstileID = 251, LiftID = 186, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:14>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:8>, sut: TurnstilesService { })","BL.Tests.TurnstilesServiceTest.TestAdminUpdateTurnstileAsync(userID: 83, turnstile: Turnstile { TurnstileID = 251, LiftID = 186, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:14>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:8>, sut: TurnstilesService { })",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasNoAccessToAdminFunctions","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasNoAccessToAdminFunctions",""
"passed","Thu Nov 03 20:49:21 MSK 2022","Thu Nov 03 20:49:21 MSK 2022","4","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestRegisterUserWithNoEmail","BL.Tests.UsersServiceTests.TestRegisterUserWithNoEmail",""
"passed","Thu Nov 03 20:49:22 MSK 2022","Thu Nov 03 20:49:22 MSK 2022","4","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")",""
"passed","Thu Nov 03 20:49:45 MSK 2022","Thu Nov 03 20:49:46 MSK 2022","393","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 22, LiftName = liftName7fd1a0b1-c958-4aaa-92f4-b084322e67e0, IsOpen = True, SeatsAmount = 159, LiftingTime = 222, QueueTime = 127, ConnectedSlopes =  })","AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 22, LiftName = liftName7fd1a0b1-c958-4aaa-92f4-b084322e67e0, IsOpen = True, SeatsAmount = 159, LiftingTime = 222, QueueTime = 127, ConnectedSlopes =  })",""
"passed","Thu Nov 03 20:49:48 MSK 2022","Thu Nov 03 20:49:48 MSK 2022","381","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 4, LiftID = 245, SlopeID = 244 })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 4, LiftID = 245, SlopeID = 244 })",""
"passed","Thu Nov 03 20:49:47 MSK 2022","Thu Nov 03 20:49:48 MSK 2022","392","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 61, LiftID = 119, SlopeID = 31 })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 61, LiftID = 119, SlopeID = 31 })",""
"passed","Thu Nov 03 20:49:39 MSK 2022","Thu Nov 03 20:49:39 MSK 2022","386","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 121, CardID = 173, UserEmail = UserEmail600557e7-a645-4cc1-ae19-29387e1b2967, Password = passwordf48cc951-9142-4201-8106-6031cc2f5328, Permissions = UNAUTHORIZED })","AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 121, CardID = 173, UserEmail = UserEmail600557e7-a645-4cc1-ae19-29387e1b2967, Password = passwordf48cc951-9142-4201-8106-6031cc2f5328, Permissions = UNAUTHORIZED })",""
"passed","Thu Nov 03 20:49:49 MSK 2022","Thu Nov 03 20:49:50 MSK 2022","391","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk",""
"passed","Thu Nov 03 20:49:38 MSK 2022","Thu Nov 03 20:49:39 MSK 2022","360","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty","AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty",""
"passed","Thu Nov 03 20:49:44 MSK 2022","Thu Nov 03 20:49:44 MSK 2022","380","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 156, LiftID = 242, IsOpen = True })","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 156, LiftID = 242, IsOpen = True })",""
"passed","Thu Nov 03 20:49:42 MSK 2022","Thu Nov 03 20:49:43 MSK 2022","485","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 78)","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 78)",""
"passed","Thu Nov 03 20:49:48 MSK 2022","Thu Nov 03 20:49:49 MSK 2022","361","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 161)","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 161)",""
"passed","Thu Nov 03 20:49:40 MSK 2022","Thu Nov 03 20:49:41 MSK 2022","386","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 202, CardID = 111, UserEmail = UserEmail2cce374d-1c13-4e09-884c-110de2c6ad34, Password = passwordbdd41a6e-bfb2-4240-974d-438a5f56d036, Permissions = UNAUTHORIZED })","AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 202, CardID = 111, UserEmail = UserEmail2cce374d-1c13-4e09-884c-110de2c6ad34, Password = passwordbdd41a6e-bfb2-4240-974d-438a5f56d036, Permissions = UNAUTHORIZED })",""
"passed","Thu Nov 03 20:49:35 MSK 2022","Thu Nov 03 20:49:36 MSK 2022","490","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 134, SlopeName = slopeName67681f20-6d54-4e08-a6af-86f276b69d0e, IsOpen = True, DifficultyLevel = 83, ConnectedLifts =  })","AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 134, SlopeName = slopeName67681f20-6d54-4e08-a6af-86f276b69d0e, IsOpen = True, DifficultyLevel = 83, ConnectedLifts =  })",""
"passed","Thu Nov 03 20:49:46 MSK 2022","Thu Nov 03 20:49:46 MSK 2022","361","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty",""
"passed","Thu Nov 03 20:49:45 MSK 2022","Thu Nov 03 20:49:45 MSK 2022","391","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk","AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk",""
"passed","Thu Nov 03 20:49:38 MSK 2022","Thu Nov 03 20:49:38 MSK 2022","361","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: ""userEmailab130d09-aea7-449b-8a90-b52d8471b845"")","AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: ""userEmailab130d09-aea7-449b-8a90-b52d8471b845"")",""
"passed","Thu Nov 03 20:49:36 MSK 2022","Thu Nov 03 20:49:36 MSK 2022","391","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 116, SlopeName = slopeName81f4be15-6579-425b-b8f7-45abb50b2341, IsOpen = True, DifficultyLevel = 153, ConnectedLifts =  })","AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 116, SlopeName = slopeName81f4be15-6579-425b-b8f7-45abb50b2341, IsOpen = True, DifficultyLevel = 153, ConnectedLifts =  })",""
"passed","Thu Nov 03 20:49:42 MSK 2022","Thu Nov 03 20:49:42 MSK 2022","363","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty",""
"passed","Thu Nov 03 20:49:48 MSK 2022","Thu Nov 03 20:49:48 MSK 2022","421","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 15, SlopeName = slopeName050ef6ad-8219-4ddd-87ac-92e2058812b9, IsOpen = True, DifficultyLevel = 205, ConnectedLifts =  }, slope2: Slope { SlopeID = 18, SlopeName = slopeName0dbfa7dd-d1fd-4150-bcb0-7b759f9da0f3, IsOpen = False, DifficultyLevel = 62, ConnectedLifts =  }, lift1: Lift { LiftID = 69, LiftName = liftName53ba64c7-c841-469a-9333-8924355fb3fb, IsOpen = True, SeatsAmount = 9, LiftingTime = 149, QueueTime = 71, ConnectedSlopes =  }, lift2: Lift { LiftID = 249, LiftName = liftName23d3cbd7-a8fb-483f-90aa-649a0e2aabe8, IsOpen = False, SeatsAmount = 86, LiftingTime = 179, QueueTime = 21, ConnectedSlopes =  })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 15, SlopeName = slopeName050ef6ad-8219-4ddd-87ac-92e2058812b9, IsOpen = True, DifficultyLevel = 205, ConnectedLifts =  }, slope2: Slope { SlopeID = 18, SlopeName = slopeName0dbfa7dd-d1fd-4150-bcb0-7b759f9da0f3, IsOpen = False, DifficultyLevel = 62, ConnectedLifts =  }, lift1: Lift { LiftID = 69, LiftName = liftName53ba64c7-c841-469a-9333-8924355fb3fb, IsOpen = True, SeatsAmount = 9, LiftingTime = 149, QueueTime = 71, ConnectedSlopes =  }, lift2: Lift { LiftID = 249, LiftName = liftName23d3cbd7-a8fb-483f-90aa-649a0e2aabe8, IsOpen = False, SeatsAmount = 86, LiftingTime = 179, QueueTime = 21, ConnectedSlopes =  })",""
"passed","Thu Nov 03 20:49:39 MSK 2022","Thu Nov 03 20:49:40 MSK 2022","392","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 130, CardID = 255, UserEmail = UserEmail4a0f30ab-9c3c-445a-b29b-e220ba3e30f3, Password = passwordfeeae489-3dc2-4f0c-b328-beb8761bbbf7, Permissions = UNAUTHORIZED })","AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 130, CardID = 255, UserEmail = UserEmail4a0f30ab-9c3c-445a-b29b-e220ba3e30f3, Password = passwordfeeae489-3dc2-4f0c-b328-beb8761bbbf7, Permissions = UNAUTHORIZED })",""
"passed","Thu Nov 03 20:49:43 MSK 2022","Thu Nov 03 20:49:44 MSK 2022","391","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 137, LiftID = 38, IsOpen = True })","AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 137, LiftID = 38, IsOpen = True })",""
"passed","Thu Nov 03 20:49:41 MSK 2022","Thu Nov 03 20:49:42 MSK 2022","407","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk","AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk",""
"passed","Thu Nov 03 20:49:50 MSK 2022","Thu Nov 03 20:49:50 MSK 2022","360","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty",""
"passed","Thu Nov 03 20:49:46 MSK 2022","Thu Nov 03 20:49:46 MSK 2022","381","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 31, LiftName = liftName39239b80-9149-4c51-882d-2adcf62b0b3e, IsOpen = True, SeatsAmount = 209, LiftingTime = 62, QueueTime = 146, ConnectedSlopes =  })","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 31, LiftName = liftName39239b80-9149-4c51-882d-2adcf62b0b3e, IsOpen = True, SeatsAmount = 209, LiftingTime = 62, QueueTime = 146, ConnectedSlopes =  })",""
"passed","Thu Nov 03 20:49:50 MSK 2022","Thu Nov 03 20:49:51 MSK 2022","391","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 72, LiftID = 247, SlopeID = 97 })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 72, LiftID = 247, SlopeID = 97 })",""
"passed","Thu Nov 03 20:49:49 MSK 2022","Thu Nov 03 20:49:49 MSK 2022","392","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 243, LiftID = 169, SlopeID = 162 })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 243, LiftID = 169, SlopeID = 162 })",""
"passed","Thu Nov 03 20:49:50 MSK 2022","Thu Nov 03 20:49:50 MSK 2022","381","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 61, LiftID = 246, SlopeID = 183 })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 61, LiftID = 246, SlopeID = 183 })",""
"passed","Thu Nov 03 20:49:37 MSK 2022","Thu Nov 03 20:49:37 MSK 2022","360","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 179)","AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 179)",""
"passed","Thu Nov 03 20:49:38 MSK 2022","Thu Nov 03 20:49:38 MSK 2022","361","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty",""
"passed","Thu Nov 03 20:49:37 MSK 2022","Thu Nov 03 20:49:38 MSK 2022","391","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk","AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk",""
"passed","Thu Nov 03 20:49:44 MSK 2022","Thu Nov 03 20:49:44 MSK 2022","391","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 230, LiftID = 72, IsOpen = True })","AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 230, LiftID = 72, IsOpen = True })",""
"passed","Thu Nov 03 20:49:43 MSK 2022","Thu Nov 03 20:49:43 MSK 2022","393","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk","AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk",""
"passed","Thu Nov 03 20:49:37 MSK 2022","Thu Nov 03 20:49:37 MSK 2022","361","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: ""slopeName86f12fe1-2e37-4ecc-8690-651d339dcff6"")","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: ""slopeName86f12fe1-2e37-4ecc-8690-651d339dcff6"")",""
"passed","Thu Nov 03 20:49:36 MSK 2022","Thu Nov 03 20:49:36 MSK 2022","381","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 207, SlopeName = slopeName4ebb15e4-5777-43bd-9176-c3a2e428155e, IsOpen = True, DifficultyLevel = 51, ConnectedLifts =  })","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 207, SlopeName = slopeName4ebb15e4-5777-43bd-9176-c3a2e428155e, IsOpen = True, DifficultyLevel = 51, ConnectedLifts =  })",""
"passed","Thu Nov 03 20:49:40 MSK 2022","Thu Nov 03 20:49:40 MSK 2022","360","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 27)","AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 27)",""
"passed","Thu Nov 03 20:49:44 MSK 2022","Thu Nov 03 20:49:45 MSK 2022","367","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 18)","AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 18)",""
"passed","Thu Nov 03 20:49:46 MSK 2022","Thu Nov 03 20:49:47 MSK 2022","361","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: ""liftName26f768e6-0523-4313-ac22-a8861ba7990c"")","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: ""liftName26f768e6-0523-4313-ac22-a8861ba7990c"")",""
"passed","Thu Nov 03 20:49:42 MSK 2022","Thu Nov 03 20:49:42 MSK 2022","363","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 8)","AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 8)",""
"passed","Thu Nov 03 20:49:40 MSK 2022","Thu Nov 03 20:49:40 MSK 2022","360","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: ""email99ed2e9e-c8b0-4d1a-ac4b-0d60b2c449d3"")","AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: ""email99ed2e9e-c8b0-4d1a-ac4b-0d60b2c449d3"")",""
"passed","Thu Nov 03 20:49:41 MSK 2022","Thu Nov 03 20:49:41 MSK 2022","392","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 152, CardID = 153, UserEmail = UserEmailf103c01d-d187-4a17-bc44-67d06472d6ba, Password = passworda7aa5134-2fea-43c6-963a-3c4fa099418d, Permissions = UNAUTHORIZED })","AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 152, CardID = 153, UserEmail = UserEmailf103c01d-d187-4a17-bc44-67d06472d6ba, Password = passworda7aa5134-2fea-43c6-963a-3c4fa099418d, Permissions = UNAUTHORIZED })",""
"passed","Thu Nov 03 20:49:47 MSK 2022","Thu Nov 03 20:49:47 MSK 2022","392","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 155, LiftName = liftName00a62a09-0029-4915-a4a0-43cab1808f85, IsOpen = True, SeatsAmount = 107, LiftingTime = 10, QueueTime = 18, ConnectedSlopes =  })","AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 155, LiftName = liftName00a62a09-0029-4915-a4a0-43cab1808f85, IsOpen = True, SeatsAmount = 107, LiftingTime = 10, QueueTime = 18, ConnectedSlopes =  })",""
"passed","Thu Nov 03 20:50:25 MSK 2022","Thu Nov 03 20:50:26 MSK 2022","623","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithSlopes","IntegrationTests.TestActionsWithSlopes.TestAdminAddAutoIncrementSlopeAsync(slope: Slope { SlopeID = 109, SlopeName = slopeName865a8cc2-88a7-47e8-b97c-009e50396f79, IsOpen = True, DifficultyLevel = 53, ConnectedLifts =  })","IntegrationTests.TestActionsWithSlopes.TestAdminAddAutoIncrementSlopeAsync(slope: Slope { SlopeID = 109, SlopeName = slopeName865a8cc2-88a7-47e8-b97c-009e50396f79, IsOpen = True, DifficultyLevel = 53, ConnectedLifts =  })",""
"passed","Thu Nov 03 20:50:25 MSK 2022","Thu Nov 03 20:50:25 MSK 2022","606","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithSlopes","IntegrationTests.TestActionsWithSlopes.TestGetSlopeInfoAsync(slope: Slope { SlopeID = 37, SlopeName = slopeName5596f5c7-2280-4507-b515-b22cb4596708, IsOpen = True, DifficultyLevel = 169, ConnectedLifts =  })","IntegrationTests.TestActionsWithSlopes.TestGetSlopeInfoAsync(slope: Slope { SlopeID = 37, SlopeName = slopeName5596f5c7-2280-4507-b515-b22cb4596708, IsOpen = True, DifficultyLevel = 169, ConnectedLifts =  })",""
"passed","Thu Nov 03 20:50:13 MSK 2022","Thu Nov 03 20:50:13 MSK 2022","606","","SuiteForTestingActionsWithTurnstiles","","IntegrationTests.TestActionsWithTurnstiles","IntegrationTests.TestActionsWithTurnstiles.TestAdminAddAutoIncrementTurnstileAsync(turnstile: Turnstile { TurnstileID = 184, LiftID = 141, IsOpen = True })","IntegrationTests.TestActionsWithTurnstiles.TestAdminAddAutoIncrementTurnstileAsync(turnstile: Turnstile { TurnstileID = 184, LiftID = 141, IsOpen = True })",""
"passed","Thu Nov 03 20:50:17 MSK 2022","Thu Nov 03 20:50:18 MSK 2022","619","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestAdminDeleteUser","IntegrationTests.TestActionsWithUsers.TestAdminDeleteUser",""
"passed","Thu Nov 03 20:50:12 MSK 2022","Thu Nov 03 20:50:13 MSK 2022","596","","SuiteForTestingActionsWithTurnstiles","","IntegrationTests.TestActionsWithTurnstiles","IntegrationTests.TestActionsWithTurnstiles.TestAdminGetTurnstileAsync(turnstile: Turnstile { TurnstileID = 147, LiftID = 95, IsOpen = True })","IntegrationTests.TestActionsWithTurnstiles.TestAdminGetTurnstileAsync(turnstile: Turnstile { TurnstileID = 147, LiftID = 95, IsOpen = True })",""
"passed","Thu Nov 03 20:50:16 MSK 2022","Thu Nov 03 20:50:16 MSK 2022","575","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestLogInWithWrongPassword","IntegrationTests.TestActionsWithUsers.TestLogInWithWrongPassword",""
"passed","Thu Nov 03 20:50:18 MSK 2022","Thu Nov 03 20:50:19 MSK 2022","548","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestRegisterUserWithNoEmail","IntegrationTests.TestActionsWithUsers.TestRegisterUserWithNoEmail",""
"passed","Thu Nov 03 20:50:19 MSK 2022","Thu Nov 03 20:50:20 MSK 2022","586","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestAdminGetUserByIDAsync","IntegrationTests.TestActionsWithUsers.TestAdminGetUserByIDAsync",""
"passed","Thu Nov 03 20:50:22 MSK 2022","Thu Nov 03 20:50:23 MSK 2022","618","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithSlopes","IntegrationTests.TestActionsWithSlopes.TestAdminAddSlopeAsync(slope: Slope { SlopeID = 189, SlopeName = slopeNamecdfc8aba-8360-4729-8dfb-1377b9ccb824, IsOpen = True, DifficultyLevel = 138, ConnectedLifts =  })","IntegrationTests.TestActionsWithSlopes.TestAdminAddSlopeAsync(slope: Slope { SlopeID = 189, SlopeName = slopeNamecdfc8aba-8360-4729-8dfb-1377b9ccb824, IsOpen = True, DifficultyLevel = 138, ConnectedLifts =  })",""
"passed","Thu Nov 03 20:50:10 MSK 2022","Thu Nov 03 20:50:11 MSK 2022","607","","SuiteForTestingActionsWithTurnstiles","","IntegrationTests.TestActionsWithTurnstiles","IntegrationTests.TestActionsWithTurnstiles.TestAdminDeleteTurnstileAsync(turnstile: Turnstile { TurnstileID = 165, LiftID = 73, IsOpen = True })","IntegrationTests.TestActionsWithTurnstiles.TestAdminDeleteTurnstileAsync(turnstile: Turnstile { TurnstileID = 165, LiftID = 73, IsOpen = True })",""
"passed","Thu Nov 03 20:50:08 MSK 2022","Thu Nov 03 20:50:09 MSK 2022","641","","SuiteForTestingActionsWithLifts","","IntegrationTests.TestActionsWithLiftsLifts","IntegrationTests.TestActionsWithLiftsLifts.TestUpdateLiftInfoAsync(lift: Lift { LiftID = 13, LiftName = liftNameb9c28b2a-c7d1-4739-9423-6ec6dd3015b7, IsOpen = True, SeatsAmount = 86, LiftingTime = 201, QueueTime = 52, ConnectedSlopes =  })","IntegrationTests.TestActionsWithLiftsLifts.TestUpdateLiftInfoAsync(lift: Lift { LiftID = 13, LiftName = liftNameb9c28b2a-c7d1-4739-9423-6ec6dd3015b7, IsOpen = True, SeatsAmount = 86, LiftingTime = 201, QueueTime = 52, ConnectedSlopes =  })",""
"passed","Thu Nov 03 20:50:10 MSK 2022","Thu Nov 03 20:50:10 MSK 2022","616","","SuiteForTestingActionsWithLifts","","IntegrationTests.TestActionsWithLiftsLifts","IntegrationTests.TestActionsWithLiftsLifts.TestAdminAddAutoIncrementLiftAsync(lift: Lift { LiftID = 96, LiftName = liftNamec6dba77a-1866-45af-bfaa-4658455b5fd1, IsOpen = True, SeatsAmount = 129, LiftingTime = 56, QueueTime = 130, ConnectedSlopes =  })","IntegrationTests.TestActionsWithLiftsLifts.TestAdminAddAutoIncrementLiftAsync(lift: Lift { LiftID = 96, LiftName = liftNamec6dba77a-1866-45af-bfaa-4658455b5fd1, IsOpen = True, SeatsAmount = 129, LiftingTime = 56, QueueTime = 130, ConnectedSlopes =  })",""
"passed","Thu Nov 03 20:50:23 MSK 2022","Thu Nov 03 20:50:23 MSK 2022","670","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithSlopes","IntegrationTests.TestActionsWithSlopes.TestGetSlopesInfoAsync(initialSlopes: [Slope { SlopeID = 17, SlopeName = slopeNamec382e3d2-ca58-498a-a894-04919562c62d, IsOpen = True, DifficultyLevel = 208, ConnectedLifts =  }, Slope { SlopeID = 12, SlopeName = slopeName8d711395-0291-4dbe-907c-bfc8ac2385ca, IsOpen = False, DifficultyLevel = 29, ConnectedLifts =  }, Slope { SlopeID = 199, SlopeName = slopeName249b2944-8bd9-42ac-a654-a09178a7ccac, IsOpen = True, DifficultyLevel = 165, ConnectedLifts =  }])","IntegrationTests.TestActionsWithSlopes.TestGetSlopesInfoAsync(initialSlopes: [Slope { SlopeID = 17, SlopeName = slopeNamec382e3d2-ca58-498a-a894-04919562c62d, IsOpen = True, DifficultyLevel = 208, ConnectedLifts =  }, Slope { SlopeID = 12, SlopeName = slopeName8d711395-0291-4dbe-907c-bfc8ac2385ca, IsOpen = False, DifficultyLevel = 29, ConnectedLifts =  }, Slope { SlopeID = 199, SlopeName = slopeName249b2944-8bd9-42ac-a654-a09178a7ccac, IsOpen = True, DifficultyLevel = 165, ConnectedLifts =  }])",""
"passed","Thu Nov 03 20:50:15 MSK 2022","Thu Nov 03 20:50:15 MSK 2022","576","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestLogInOk","IntegrationTests.TestActionsWithUsers.TestLogInOk",""
"passed","Thu Nov 03 20:50:11 MSK 2022","Thu Nov 03 20:50:11 MSK 2022","616","","SuiteForTestingActionsWithTurnstiles","","IntegrationTests.TestActionsWithTurnstiles","IntegrationTests.TestActionsWithTurnstiles.TestAdminUpdateTurnstileAsync(turnstile: Turnstile { TurnstileID = 232, LiftID = 235, IsOpen = True })","IntegrationTests.TestActionsWithTurnstiles.TestAdminUpdateTurnstileAsync(turnstile: Turnstile { TurnstileID = 232, LiftID = 235, IsOpen = True })",""
"passed","Thu Nov 03 20:50:07 MSK 2022","Thu Nov 03 20:50:08 MSK 2022","750","","SuiteForTestingActionsWithLifts","","IntegrationTests.TestActionsWithLiftsLifts","IntegrationTests.TestActionsWithLiftsLifts.TestGetLiftsInfoAsync(initialLifts: [Lift { LiftID = 110, LiftName = liftName16dcb748-001a-4090-ad1a-9dab26ba354c, IsOpen = True, SeatsAmount = 252, LiftingTime = 189, QueueTime = 253, ConnectedSlopes =  }, Lift { LiftID = 153, LiftName = liftName175226a0-08dc-4fb8-a7f9-d81a484e7279, IsOpen = False, SeatsAmount = 218, LiftingTime = 224, QueueTime = 207, ConnectedSlopes =  }, Lift { LiftID = 143, LiftName = liftNamef1518cbe-9e3c-421d-a7d6-bfb047491db2, IsOpen = True, SeatsAmount = 239, LiftingTime = 76, QueueTime = 117, ConnectedSlopes =  }])","IntegrationTests.TestActionsWithLiftsLifts.TestGetLiftsInfoAsync(initialLifts: [Lift { LiftID = 110, LiftName = liftName16dcb748-001a-4090-ad1a-9dab26ba354c, IsOpen = True, SeatsAmount = 252, LiftingTime = 189, QueueTime = 253, ConnectedSlopes =  }, Lift { LiftID = 153, LiftName = liftName175226a0-08dc-4fb8-a7f9-d81a484e7279, IsOpen = False, SeatsAmount = 218, LiftingTime = 224, QueueTime = 207, ConnectedSlopes =  }, Lift { LiftID = 143, LiftName = liftNamef1518cbe-9e3c-421d-a7d6-bfb047491db2, IsOpen = True, SeatsAmount = 239, LiftingTime = 76, QueueTime = 117, ConnectedSlopes =  }])",""
"passed","Thu Nov 03 20:50:20 MSK 2022","Thu Nov 03 20:50:21 MSK 2022","667","","SuiteForTestingActionsWithLiftsSlopes","","IntegrationTests.TestActionsWithLiftsSlopes","IntegrationTests.TestActionsWithLiftsSlopes.TestAdminAddAutoIncrementLiftSlopeAsync(lift: Lift { LiftID = 89, LiftName = liftNameb8c31cb5-bc3b-4351-a694-0554d8345b03, IsOpen = True, SeatsAmount = 190, LiftingTime = 215, QueueTime = 244, ConnectedSlopes =  }, slope: Slope { SlopeID = 197, SlopeName = slopeName5802cdaa-40b3-4144-9e29-820e37dcad00, IsOpen = False, DifficultyLevel = 225, ConnectedLifts =  })","IntegrationTests.TestActionsWithLiftsSlopes.TestAdminAddAutoIncrementLiftSlopeAsync(lift: Lift { LiftID = 89, LiftName = liftNameb8c31cb5-bc3b-4351-a694-0554d8345b03, IsOpen = True, SeatsAmount = 190, LiftingTime = 215, QueueTime = 244, ConnectedSlopes =  }, slope: Slope { SlopeID = 197, SlopeName = slopeName5802cdaa-40b3-4144-9e29-820e37dcad00, IsOpen = False, DifficultyLevel = 225, ConnectedLifts =  })",""
"passed","Thu Nov 03 20:50:14 MSK 2022","Thu Nov 03 20:50:15 MSK 2022","606","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestAdminAddAutoIncrementUser","IntegrationTests.TestActionsWithUsers.TestAdminAddAutoIncrementUser",""
"passed","Thu Nov 03 20:50:15 MSK 2022","Thu Nov 03 20:50:16 MSK 2022","581","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestRegisterUserWithRepeatedEmail","IntegrationTests.TestActionsWithUsers.TestRegisterUserWithRepeatedEmail",""
"passed","Thu Nov 03 20:50:13 MSK 2022","Thu Nov 03 20:50:14 MSK 2022","609","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestAdminUpdateUser","IntegrationTests.TestActionsWithUsers.TestAdminUpdateUser",""
"passed","Thu Nov 03 20:50:23 MSK 2022","Thu Nov 03 20:50:24 MSK 2022","639","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithSlopes","IntegrationTests.TestActionsWithSlopes.TestUpdateSlopeInfoAsync(slope: Slope { SlopeID = 168, SlopeName = slopeName580dd94d-8c0e-4c9a-a336-4f79308cf607, IsOpen = True, DifficultyLevel = 215, ConnectedLifts =  })","IntegrationTests.TestActionsWithSlopes.TestUpdateSlopeInfoAsync(slope: Slope { SlopeID = 168, SlopeName = slopeName580dd94d-8c0e-4c9a-a336-4f79308cf607, IsOpen = True, DifficultyLevel = 215, ConnectedLifts =  })",""
"passed","Thu Nov 03 20:50:16 MSK 2022","Thu Nov 03 20:50:17 MSK 2022","599","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestRegisterOk","IntegrationTests.TestActionsWithUsers.TestRegisterOk",""
"passed","Thu Nov 03 20:50:19 MSK 2022","Thu Nov 03 20:50:19 MSK 2022","549","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestRegisterUserWithNoPassword","IntegrationTests.TestActionsWithUsers.TestRegisterUserWithNoPassword",""
"passed","Thu Nov 03 20:50:21 MSK 2022","Thu Nov 03 20:50:21 MSK 2022","681","","SuiteForTestingActionsWithLiftsSlopes","","IntegrationTests.TestActionsWithLiftsSlopes","IntegrationTests.TestActionsWithLiftsSlopes.TestAdminDeleteLiftSlopeAsync(lift: Lift { LiftID = 228, LiftName = liftNameb8e45c23-afed-4084-a3ab-73ed0411691a, IsOpen = True, SeatsAmount = 217, LiftingTime = 205, QueueTime = 5, ConnectedSlopes =  }, slope: Slope { SlopeID = 104, SlopeName = slopeName01139f52-e6bd-41f2-a530-8f7b1f149cb5, IsOpen = False, DifficultyLevel = 161, ConnectedLifts =  })","IntegrationTests.TestActionsWithLiftsSlopes.TestAdminDeleteLiftSlopeAsync(lift: Lift { LiftID = 228, LiftName = liftNameb8e45c23-afed-4084-a3ab-73ed0411691a, IsOpen = True, SeatsAmount = 217, LiftingTime = 205, QueueTime = 5, ConnectedSlopes =  }, slope: Slope { SlopeID = 104, SlopeName = slopeName01139f52-e6bd-41f2-a530-8f7b1f149cb5, IsOpen = False, DifficultyLevel = 161, ConnectedLifts =  })",""
"passed","Thu Nov 03 20:50:24 MSK 2022","Thu Nov 03 20:50:25 MSK 2022","629","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithSlopes","IntegrationTests.TestActionsWithSlopes.TestAdminDeleteSlopeAsync(slope: Slope { SlopeID = 107, SlopeName = slopeName147d6200-362f-4f93-9e01-0857b54bed52, IsOpen = True, DifficultyLevel = 62, ConnectedLifts =  })","IntegrationTests.TestActionsWithSlopes.TestAdminDeleteSlopeAsync(slope: Slope { SlopeID = 107, SlopeName = slopeName147d6200-362f-4f93-9e01-0857b54bed52, IsOpen = True, DifficultyLevel = 62, ConnectedLifts =  })",""
"passed","Thu Nov 03 20:50:21 MSK 2022","Thu Nov 03 20:50:22 MSK 2022","637","","SuiteForTestingActionsWithLiftsSlopes","","IntegrationTests.TestActionsWithLiftsSlopes","IntegrationTests.TestActionsWithLiftsSlopes.TestGetLiftsSlopesInfoAsync(liftsSlopes: [LiftSlope { RecordID = 246, LiftID = 196, SlopeID = 210 }, LiftSlope { RecordID = 128, LiftID = 63, SlopeID = 153 }, LiftSlope { RecordID = 10, LiftID = 99, SlopeID = 90 }])","IntegrationTests.TestActionsWithLiftsSlopes.TestGetLiftsSlopesInfoAsync(liftsSlopes: [LiftSlope { RecordID = 246, LiftID = 196, SlopeID = 210 }, LiftSlope { RecordID = 128, LiftID = 63, SlopeID = 153 }, LiftSlope { RecordID = 10, LiftID = 99, SlopeID = 90 }])",""
"passed","Thu Nov 03 20:50:18 MSK 2022","Thu Nov 03 20:50:18 MSK 2022","588","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestAdminGetUsers","IntegrationTests.TestActionsWithUsers.TestAdminGetUsers",""
"passed","Thu Nov 03 20:50:09 MSK 2022","Thu Nov 03 20:50:10 MSK 2022","612","","SuiteForTestingActionsWithLifts","","IntegrationTests.TestActionsWithLiftsLifts","IntegrationTests.TestActionsWithLiftsLifts.TestGetLiftInfoAsync(lift: Lift { LiftID = 222, LiftName = liftNamef523b239-9f6f-445e-91e0-64c45f456b04, IsOpen = True, SeatsAmount = 204, LiftingTime = 95, QueueTime = 82, ConnectedSlopes =  })","IntegrationTests.TestActionsWithLiftsLifts.TestGetLiftInfoAsync(lift: Lift { LiftID = 222, LiftName = liftNamef523b239-9f6f-445e-91e0-64c45f456b04, IsOpen = True, SeatsAmount = 204, LiftingTime = 95, QueueTime = 82, ConnectedSlopes =  })",""
"passed","Thu Nov 03 20:50:11 MSK 2022","Thu Nov 03 20:50:12 MSK 2022","637","","SuiteForTestingActionsWithTurnstiles","","IntegrationTests.TestActionsWithTurnstiles","IntegrationTests.TestActionsWithTurnstiles.TestAdminGetTurnstilesAsync(initialTurnstiles: [Turnstile { TurnstileID = 18, LiftID = 4, IsOpen = True }, Turnstile { TurnstileID = 232, LiftID = 106, IsOpen = False }, Turnstile { TurnstileID = 167, LiftID = 33, IsOpen = True }])","IntegrationTests.TestActionsWithTurnstiles.TestAdminGetTurnstilesAsync(initialTurnstiles: [Turnstile { TurnstileID = 18, LiftID = 4, IsOpen = True }, Turnstile { TurnstileID = 232, LiftID = 106, IsOpen = False }, Turnstile { TurnstileID = 167, LiftID = 33, IsOpen = True }])",""
"passed","Thu Nov 03 20:50:08 MSK 2022","Thu Nov 03 20:50:08 MSK 2022","638","","SuiteForTestingActionsWithLifts","","IntegrationTests.TestActionsWithLiftsLifts","IntegrationTests.TestActionsWithLiftsLifts.TestAdminDeleteLiftAsync(lift: Lift { LiftID = 5, LiftName = liftName4b569308-cb48-4e71-85f3-9dc1831de3aa, IsOpen = True, SeatsAmount = 44, LiftingTime = 149, QueueTime = 116, ConnectedSlopes =  })","IntegrationTests.TestActionsWithLiftsLifts.TestAdminDeleteLiftAsync(lift: Lift { LiftID = 5, LiftName = liftName4b569308-cb48-4e71-85f3-9dc1831de3aa, IsOpen = True, SeatsAmount = 44, LiftingTime = 149, QueueTime = 116, ConnectedSlopes =  })",""
"passed","Thu Nov 03 20:50:42 MSK 2022","Thu Nov 03 20:50:43 MSK 2022","909","","E2ETestSkiPatrolWorkingWithLifts","","E2ETests.E2ETest","E2ETests.E2ETest.E2ETestSkiPatrolWorkingWithLifts","E2ETests.E2ETest.E2ETestSkiPatrolWorkingWithLifts",""
