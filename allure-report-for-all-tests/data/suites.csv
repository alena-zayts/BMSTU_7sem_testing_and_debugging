"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","5","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestAdminDeleteSlopeAsync(userID: 93, slope: Slope { SlopeID = 158, SlopeName = slopeName4ba1e206-5ba7-4a96-8b09-9f9beb8ee6b4, IsOpen = True, DifficultyLevel = 183, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:9>, slopesRepositoryStub: Mock<ISlopesRepository:7>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:12>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestAdminDeleteSlopeAsync(userID: 93, slope: Slope { SlopeID = 158, SlopeName = slopeName4ba1e206-5ba7-4a96-8b09-9f9beb8ee6b4, IsOpen = True, DifficultyLevel = 183, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:9>, slopesRepositoryStub: Mock<ISlopesRepository:7>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:12>, sut: SlopesService { })",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","13","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestAdminAddAutoIncrementSlopeAsync(userID: 110, slope: Slope { SlopeID = 213, SlopeName = slopeNamee81aebea-81d3-4089-85b1-744130ab4296, IsOpen = True, DifficultyLevel = 64, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:10>, slopesRepositoryStub: Mock<ISlopesRepository:8>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestAdminAddAutoIncrementSlopeAsync(userID: 110, slope: Slope { SlopeID = 213, SlopeName = slopeNamee81aebea-81d3-4089-85b1-744130ab4296, IsOpen = True, DifficultyLevel = 64, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:10>, slopesRepositoryStub: Mock<ISlopesRepository:8>, sut: SlopesService { })",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","7","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")",""
"passed","Thu Nov 03 10:04:12 MSK 2022","Thu Nov 03 10:04:12 MSK 2022","3","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AdminHasAccessToAllFunctions","BL.Tests.CheckPermissionsServiceTests.AdminHasAccessToAllFunctions",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","3","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAuthorizedFunctions(functionName: ""LogOutAsync"")","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAuthorizedFunctions(functionName: ""LogOutAsync"")",""
"passed","Thu Nov 03 10:04:12 MSK 2022","Thu Nov 03 10:04:12 MSK 2022","1","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasAccessToAuthorizedFunctions(functionName: ""LogOutAsync"")","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasAccessToAuthorizedFunctions(functionName: ""LogOutAsync"")",""
"passed","Thu Nov 03 10:04:12 MSK 2022","Thu Nov 03 10:04:12 MSK 2022","3","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminFunctions","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminFunctions",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","9","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestAdminUpdateUser","BL.Tests.UsersServiceTests.TestAdminUpdateUser",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","57","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestUpdateSlopeInfoAsync(userID: 122, slope: Slope { SlopeID = 172, SlopeName = slopeNameb3492dbb-2a9b-41e1-b2c8-0b0797ff07a1, IsOpen = True, DifficultyLevel = 36, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:8>, slopesRepositoryStub: Mock<ISlopesRepository:6>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestUpdateSlopeInfoAsync(userID: 122, slope: Slope { SlopeID = 172, SlopeName = slopeNameb3492dbb-2a9b-41e1-b2c8-0b0797ff07a1, IsOpen = True, DifficultyLevel = 36, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:8>, slopesRepositoryStub: Mock<ISlopesRepository:6>, sut: SlopesService { })",""
"passed","Thu Nov 03 10:04:12 MSK 2022","Thu Nov 03 10:04:12 MSK 2022","3","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestAdminDeleteUser","BL.Tests.UsersServiceTests.TestAdminDeleteUser",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","2","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestRegisterUserWithNoPassword","BL.Tests.UsersServiceTests.TestRegisterUserWithNoPassword",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","3","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAuthorizedFunctions(functionName: ""SendMessageAsync"")","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAuthorizedFunctions(functionName: ""SendMessageAsync"")",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","57","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","53","","LiftsServiceSuite","","BL.Tests.LiftsServiceTest","BL.Tests.LiftsServiceTest.TestGetLiftsInfoAsync(userID: 64, initialLifts: [Lift { LiftID = 251, LiftName = liftName2754e8c1-cf83-430d-9eb8-8b3046fa96b2, IsOpen = True, SeatsAmount = 105, LiftingTime = 53, QueueTime = 33, ConnectedSlopes =  }, Lift { LiftID = 149, LiftName = liftName69314c87-a7c1-4256-bbf9-a8e60c7c3f31, IsOpen = False, SeatsAmount = 135, LiftingTime = 126, QueueTime = 212, ConnectedSlopes =  }, Lift { LiftID = 20, LiftName = liftName6bd2ca4b-120e-4078-852a-1879f8d7e2f4, IsOpen = True, SeatsAmount = 216, LiftingTime = 224, QueueTime = 186, ConnectedSlopes =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:2>, liftsRepositoryStub: Mock<ILiftsRepository:2>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:2>, sut: LiftsService { })","BL.Tests.LiftsServiceTest.TestGetLiftsInfoAsync(userID: 64, initialLifts: [Lift { LiftID = 251, LiftName = liftName2754e8c1-cf83-430d-9eb8-8b3046fa96b2, IsOpen = True, SeatsAmount = 105, LiftingTime = 53, QueueTime = 33, ConnectedSlopes =  }, Lift { LiftID = 149, LiftName = liftName69314c87-a7c1-4256-bbf9-a8e60c7c3f31, IsOpen = False, SeatsAmount = 135, LiftingTime = 126, QueueTime = 212, ConnectedSlopes =  }, Lift { LiftID = 20, LiftName = liftName6bd2ca4b-120e-4078-852a-1879f8d7e2f4, IsOpen = True, SeatsAmount = 216, LiftingTime = 224, QueueTime = 186, ConnectedSlopes =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:2>, liftsRepositoryStub: Mock<ILiftsRepository:2>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:2>, sut: LiftsService { })",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","10","","LiftsServiceSuite","","BL.Tests.LiftsServiceTest","BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 4, lift: Lift { LiftID = 103, LiftName = liftNamea0dbd9f9-5b6c-44df-b5f5-82be508b9e13, IsOpen = True, SeatsAmount = 111, LiftingTime = 180, QueueTime = 54, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryStub: Mock<ILiftsRepository:1>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })","BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 4, lift: Lift { LiftID = 103, LiftName = liftNamea0dbd9f9-5b6c-44df-b5f5-82be508b9e13, IsOpen = True, SeatsAmount = 111, LiftingTime = 180, QueueTime = 54, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryStub: Mock<ILiftsRepository:1>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","57","","TurnstilesServiceSuite","","BL.Tests.TurnstilesServiceTest","BL.Tests.TurnstilesServiceTest.TestAdminAddAutoIncrementTurnstileAsync(userID: 200, turnstile: Turnstile { TurnstileID = 107, LiftID = 23, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:16>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:10>, sut: TurnstilesService { })","BL.Tests.TurnstilesServiceTest.TestAdminAddAutoIncrementTurnstileAsync(userID: 200, turnstile: Turnstile { TurnstileID = 107, LiftID = 23, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:16>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:10>, sut: TurnstilesService { })",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","5","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminFunctions","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminFunctions",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","7","","TurnstilesServiceSuite","","BL.Tests.TurnstilesServiceTest","BL.Tests.TurnstilesServiceTest.TestAdminGetTurnstileAsync(userID: 103, turnstile: Turnstile { TurnstileID = 67, LiftID = 122, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:12>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:6>, sut: TurnstilesService { })","BL.Tests.TurnstilesServiceTest.TestAdminGetTurnstileAsync(userID: 103, turnstile: Turnstile { TurnstileID = 67, LiftID = 122, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:12>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:6>, sut: TurnstilesService { })",""
"passed","Thu Nov 03 10:04:12 MSK 2022","Thu Nov 03 10:04:12 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasNoAccessToAdminFunctions","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasNoAccessToAdminFunctions",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","14","","LiftsSlopesServiceSuite","","BL.Tests.LiftsSlopesServiceTests","BL.Tests.LiftsSlopesServiceTests.TestAdminAddAutoIncrementLiftSlopeAsync(lift: Lift { LiftID = 155, LiftName = liftName7bdfd03f-0198-458a-8580-439f00fdff9e, IsOpen = True, SeatsAmount = 105, LiftingTime = 167, QueueTime = 228, ConnectedSlopes =  }, slope: Slope { SlopeID = 199, SlopeName = slopeName6933f6b2-2d51-461d-a913-50b5811218e8, IsOpen = False, DifficultyLevel = 207, ConnectedLifts =  }, slopesRepositoryStub: Mock<ISlopesRepository:3>, liftsRepositoryStub: Mock<ILiftsRepository:8>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:8>)","BL.Tests.LiftsSlopesServiceTests.TestAdminAddAutoIncrementLiftSlopeAsync(lift: Lift { LiftID = 155, LiftName = liftName7bdfd03f-0198-458a-8580-439f00fdff9e, IsOpen = True, SeatsAmount = 105, LiftingTime = 167, QueueTime = 228, ConnectedSlopes =  }, slope: Slope { SlopeID = 199, SlopeName = slopeName6933f6b2-2d51-461d-a913-50b5811218e8, IsOpen = False, DifficultyLevel = 207, ConnectedLifts =  }, slopesRepositoryStub: Mock<ISlopesRepository:3>, liftsRepositoryStub: Mock<ILiftsRepository:8>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:8>)",""
"passed","Thu Nov 03 10:04:12 MSK 2022","Thu Nov 03 10:04:12 MSK 2022","1","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","5","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestRegisterUserWithRepeatedEmail","BL.Tests.UsersServiceTests.TestRegisterUserWithRepeatedEmail",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","10","","TurnstilesServiceSuite","","BL.Tests.TurnstilesServiceTest","BL.Tests.TurnstilesServiceTest.TestAdminGetTurnstilesAsync(userID: 30, initialTurnstiles: [Turnstile { TurnstileID = 44, LiftID = 107, IsOpen = True }, Turnstile { TurnstileID = 94, LiftID = 117, IsOpen = False }, Turnstile { TurnstileID = 226, LiftID = 180, IsOpen = True }], checkPermissionServiceMock: Mock<ICheckPermissionService:13>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:7>, sut: TurnstilesService { })","BL.Tests.TurnstilesServiceTest.TestAdminGetTurnstilesAsync(userID: 30, initialTurnstiles: [Turnstile { TurnstileID = 44, LiftID = 107, IsOpen = True }, Turnstile { TurnstileID = 94, LiftID = 117, IsOpen = False }, Turnstile { TurnstileID = 226, LiftID = 180, IsOpen = True }], checkPermissionServiceMock: Mock<ICheckPermissionService:13>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:7>, sut: TurnstilesService { })",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","5","","TurnstilesServiceSuite","","BL.Tests.TurnstilesServiceTest","BL.Tests.TurnstilesServiceTest.TestAdminDeleteTurnstileAsync(userID: 214, turnstile: Turnstile { TurnstileID = 223, LiftID = 200, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:15>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:9>, sut: TurnstilesService { })","BL.Tests.TurnstilesServiceTest.TestAdminDeleteTurnstileAsync(userID: 214, turnstile: Turnstile { TurnstileID = 223, LiftID = 200, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:15>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:9>, sut: TurnstilesService { })",""
"passed","Thu Nov 03 10:04:12 MSK 2022","Thu Nov 03 10:04:12 MSK 2022","6","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestAdminAddAutoIncrementUser","BL.Tests.UsersServiceTests.TestAdminAddAutoIncrementUser",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","1","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","1","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","15","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestRegisterOk","BL.Tests.UsersServiceTests.TestRegisterOk",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","57","","LiftsServiceSuite","","BL.Tests.LiftsServiceTest","BL.Tests.LiftsServiceTest.TestUpdateLiftInfoAsync(userID: 223, lift: Lift { LiftID = 15, LiftName = liftName8095a96b-fe86-4505-ae9d-8864ac457658, IsOpen = True, SeatsAmount = 88, LiftingTime = 99, QueueTime = 94, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:3>, liftsRepositoryStub: Mock<ILiftsRepository:3>, sut: LiftsService { })","BL.Tests.LiftsServiceTest.TestUpdateLiftInfoAsync(userID: 223, lift: Lift { LiftID = 15, LiftName = liftName8095a96b-fe86-4505-ae9d-8864ac457658, IsOpen = True, SeatsAmount = 88, LiftingTime = 99, QueueTime = 94, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:3>, liftsRepositoryStub: Mock<ILiftsRepository:3>, sut: LiftsService { })",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","13","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 31, initialSlopes: [Slope { SlopeID = 172, SlopeName = slopeNameba089e6b-e8ed-4631-b589-39ea941fc7d0, IsOpen = True, DifficultyLevel = 17, ConnectedLifts =  }, Slope { SlopeID = 140, SlopeName = slopeName5f94ad60-59d9-4cce-bca2-38094db01714, IsOpen = False, DifficultyLevel = 141, ConnectedLifts =  }, Slope { SlopeID = 156, SlopeName = slopeNamef32db57c-3ce2-4145-a778-b8a23e8da832, IsOpen = True, DifficultyLevel = 116, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 31, initialSlopes: [Slope { SlopeID = 172, SlopeName = slopeNameba089e6b-e8ed-4631-b589-39ea941fc7d0, IsOpen = True, DifficultyLevel = 17, ConnectedLifts =  }, Slope { SlopeID = 140, SlopeName = slopeName5f94ad60-59d9-4cce-bca2-38094db01714, IsOpen = False, DifficultyLevel = 141, ConnectedLifts =  }, Slope { SlopeID = 156, SlopeName = slopeNamef32db57c-3ce2-4145-a778-b8a23e8da832, IsOpen = True, DifficultyLevel = 116, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","14","","LiftsServiceSuite","","BL.Tests.LiftsServiceTest","BL.Tests.LiftsServiceTest.TestAdminDeleteLiftAsync(userID: 160, lift: Lift { LiftID = 228, LiftName = liftName58a70b8e-db9c-49e2-9758-bb564cb9c3fe, IsOpen = True, SeatsAmount = 100, LiftingTime = 99, QueueTime = 82, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:4>, liftsRepositoryStub: Mock<ILiftsRepository:4>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:4>, sut: LiftsService { })","BL.Tests.LiftsServiceTest.TestAdminDeleteLiftAsync(userID: 160, lift: Lift { LiftID = 228, LiftName = liftName58a70b8e-db9c-49e2-9758-bb564cb9c3fe, IsOpen = True, SeatsAmount = 100, LiftingTime = 99, QueueTime = 82, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:4>, liftsRepositoryStub: Mock<ILiftsRepository:4>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:4>, sut: LiftsService { })",""
"passed","Thu Nov 03 10:04:12 MSK 2022","Thu Nov 03 10:04:12 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasAccessToAuthorizedFunctions(functionName: ""SendMessageAsync"")","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasAccessToAuthorizedFunctions(functionName: ""SendMessageAsync"")",""
"passed","Thu Nov 03 10:04:12 MSK 2022","Thu Nov 03 10:04:12 MSK 2022","1","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","4","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestLogInOk","BL.Tests.UsersServiceTests.TestLogInOk",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","60","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestAdminGetUsers","BL.Tests.UsersServiceTests.TestAdminGetUsers",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","11","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestGetSlopeInfoAsync(userID: 230, slope: Slope { SlopeID = 81, SlopeName = slopeName1928e328-9317-4289-9b54-8dd834f973f1, IsOpen = True, DifficultyLevel = 221, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:6>, slopesRepositoryStub: Mock<ISlopesRepository:4>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:9>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestGetSlopeInfoAsync(userID: 230, slope: Slope { SlopeID = 81, SlopeName = slopeName1928e328-9317-4289-9b54-8dd834f973f1, IsOpen = True, DifficultyLevel = 221, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:6>, slopesRepositoryStub: Mock<ISlopesRepository:4>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:9>, sut: SlopesService { })",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","7","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestAdminAddSlopeAsync(userID: 171, slope: Slope { SlopeID = 16, SlopeName = slopeName16842898-cc7a-45bc-b7b2-610b2713d695, IsOpen = True, DifficultyLevel = 17, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:11>, slopesRepositoryStub: Mock<ISlopesRepository:9>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestAdminAddSlopeAsync(userID: 171, slope: Slope { SlopeID = 16, SlopeName = slopeName16842898-cc7a-45bc-b7b2-610b2713d695, IsOpen = True, DifficultyLevel = 17, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:11>, slopesRepositoryStub: Mock<ISlopesRepository:9>, sut: SlopesService { })",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","4","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestRegisterUserWithNoEmail","BL.Tests.UsersServiceTests.TestRegisterUserWithNoEmail",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","1","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")",""
"passed","Thu Nov 03 10:04:12 MSK 2022","Thu Nov 03 10:04:12 MSK 2022","3","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","9","","TurnstilesServiceSuite","","BL.Tests.TurnstilesServiceTest","BL.Tests.TurnstilesServiceTest.TestAdminUpdateTurnstileAsync(userID: 153, turnstile: Turnstile { TurnstileID = 169, LiftID = 113, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:14>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:8>, sut: TurnstilesService { })","BL.Tests.TurnstilesServiceTest.TestAdminUpdateTurnstileAsync(userID: 153, turnstile: Turnstile { TurnstileID = 169, LiftID = 113, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:14>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:8>, sut: TurnstilesService { })",""
"passed","Thu Nov 03 10:04:12 MSK 2022","Thu Nov 03 10:04:12 MSK 2022","5","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestAdminGetUserByIDAsync","BL.Tests.UsersServiceTests.TestAdminGetUserByIDAsync",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","8","","LiftsSlopesServiceSuite","","BL.Tests.LiftsSlopesServiceTests","BL.Tests.LiftsSlopesServiceTests.TestAdminDeleteLiftSlopeAsync(lift: Lift { LiftID = 110, LiftName = liftNamed361de62-c431-4909-8402-99a08283bb1d, IsOpen = True, SeatsAmount = 22, LiftingTime = 199, QueueTime = 236, ConnectedSlopes =  }, slope: Slope { SlopeID = 56, SlopeName = slopeNamee432b46b-7287-4c66-bee5-8cde2ae9017a, IsOpen = False, DifficultyLevel = 75, ConnectedLifts =  }, slopesRepositoryStub: Mock<ISlopesRepository:2>, liftsRepositoryStub: Mock<ILiftsRepository:7>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:7>)","BL.Tests.LiftsSlopesServiceTests.TestAdminDeleteLiftSlopeAsync(lift: Lift { LiftID = 110, LiftName = liftNamed361de62-c431-4909-8402-99a08283bb1d, IsOpen = True, SeatsAmount = 22, LiftingTime = 199, QueueTime = 236, ConnectedSlopes =  }, slope: Slope { SlopeID = 56, SlopeName = slopeNamee432b46b-7287-4c66-bee5-8cde2ae9017a, IsOpen = False, DifficultyLevel = 75, ConnectedLifts =  }, slopesRepositoryStub: Mock<ISlopesRepository:2>, liftsRepositoryStub: Mock<ILiftsRepository:7>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:7>)",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","10","","LiftsServiceSuite","","BL.Tests.LiftsServiceTest","BL.Tests.LiftsServiceTest.TestAdminAddAutoIncrementLiftAsync(userID: 161, lift: Lift { LiftID = 52, LiftName = liftName8985cce1-8f59-46ff-a025-8e27048a58c9, IsOpen = True, SeatsAmount = 122, LiftingTime = 211, QueueTime = 222, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:5>, liftsRepositoryStub: Mock<ILiftsRepository:5>, sut: LiftsService { })","BL.Tests.LiftsServiceTest.TestAdminAddAutoIncrementLiftAsync(userID: 161, lift: Lift { LiftID = 52, LiftName = liftName8985cce1-8f59-46ff-a025-8e27048a58c9, IsOpen = True, SeatsAmount = 122, LiftingTime = 211, QueueTime = 222, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:5>, liftsRepositoryStub: Mock<ILiftsRepository:5>, sut: LiftsService { })",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:11 MSK 2022","60","","LiftsSlopesServiceSuite","","BL.Tests.LiftsSlopesServiceTests","BL.Tests.LiftsSlopesServiceTests.TestGetLiftsSlopesInfoAsync(liftsSlopes: [LiftSlope { RecordID = 204, LiftID = 36, SlopeID = 207 }, LiftSlope { RecordID = 189, LiftID = 203, SlopeID = 10 }, LiftSlope { RecordID = 12, LiftID = 178, SlopeID = 113 }], slopesRepositoryStub: Mock<ISlopesRepository:1>, liftsRepositoryStub: Mock<ILiftsRepository:6>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:6>)","BL.Tests.LiftsSlopesServiceTests.TestGetLiftsSlopesInfoAsync(liftsSlopes: [LiftSlope { RecordID = 204, LiftID = 36, SlopeID = 207 }, LiftSlope { RecordID = 189, LiftID = 203, SlopeID = 10 }, LiftSlope { RecordID = 12, LiftID = 178, SlopeID = 113 }], slopesRepositoryStub: Mock<ISlopesRepository:1>, liftsRepositoryStub: Mock<ILiftsRepository:6>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:6>)",""
"passed","Thu Nov 03 10:04:11 MSK 2022","Thu Nov 03 10:04:12 MSK 2022","10","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestLogInWithWrongPassword","BL.Tests.UsersServiceTests.TestLogInWithWrongPassword",""
"passed","Thu Nov 03 10:04:31 MSK 2022","Thu Nov 03 10:04:31 MSK 2022","363","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: ""userEmaile0ae3592-8baa-418a-a626-c6d7633c021f"")","AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: ""userEmaile0ae3592-8baa-418a-a626-c6d7633c021f"")",""
"passed","Thu Nov 03 10:04:35 MSK 2022","Thu Nov 03 10:04:36 MSK 2022","399","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk","AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk",""
"passed","Thu Nov 03 10:04:37 MSK 2022","Thu Nov 03 10:04:38 MSK 2022","439","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 81, SlopeName = slopeNamecc56e8d0-76c9-4019-9bb6-1d577738888c, IsOpen = True, DifficultyLevel = 143, ConnectedLifts =  }, slope2: Slope { SlopeID = 203, SlopeName = slopeNamed5ba5abb-a4e3-4bab-9eff-925f6ea43f9e, IsOpen = False, DifficultyLevel = 13, ConnectedLifts =  }, lift1: Lift { LiftID = 99, LiftName = liftName242ea5b9-c45f-4a64-ad8e-30b48ac07c08, IsOpen = True, SeatsAmount = 214, LiftingTime = 208, QueueTime = 167, ConnectedSlopes =  }, lift2: Lift { LiftID = 129, LiftName = liftNamea52d40b4-9ffa-4884-85e5-aa6cadb89b27, IsOpen = False, SeatsAmount = 171, LiftingTime = 140, QueueTime = 8, ConnectedSlopes =  })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 81, SlopeName = slopeNamecc56e8d0-76c9-4019-9bb6-1d577738888c, IsOpen = True, DifficultyLevel = 143, ConnectedLifts =  }, slope2: Slope { SlopeID = 203, SlopeName = slopeNamed5ba5abb-a4e3-4bab-9eff-925f6ea43f9e, IsOpen = False, DifficultyLevel = 13, ConnectedLifts =  }, lift1: Lift { LiftID = 99, LiftName = liftName242ea5b9-c45f-4a64-ad8e-30b48ac07c08, IsOpen = True, SeatsAmount = 214, LiftingTime = 208, QueueTime = 167, ConnectedSlopes =  }, lift2: Lift { LiftID = 129, LiftName = liftNamea52d40b4-9ffa-4884-85e5-aa6cadb89b27, IsOpen = False, SeatsAmount = 171, LiftingTime = 140, QueueTime = 8, ConnectedSlopes =  })",""
"passed","Thu Nov 03 10:04:32 MSK 2022","Thu Nov 03 10:04:32 MSK 2022","363","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: ""emailcfe01520-2a72-48d5-a6e6-8398980735cb"")","AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: ""emailcfe01520-2a72-48d5-a6e6-8398980735cb"")",""
"passed","Thu Nov 03 10:04:27 MSK 2022","Thu Nov 03 10:04:27 MSK 2022","396","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk","AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk",""
"passed","Thu Nov 03 10:04:40 MSK 2022","Thu Nov 03 10:04:40 MSK 2022","396","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 17, LiftID = 44, SlopeID = 83 })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 17, LiftID = 44, SlopeID = 83 })",""
"passed","Thu Nov 03 10:04:34 MSK 2022","Thu Nov 03 10:04:34 MSK 2022","385","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 232)","AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 232)",""
"passed","Thu Nov 03 10:04:34 MSK 2022","Thu Nov 03 10:04:34 MSK 2022","403","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk","AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk",""
"passed","Thu Nov 03 10:04:32 MSK 2022","Thu Nov 03 10:04:33 MSK 2022","393","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 236, CardID = 1, UserEmail = UserEmail1e54f357-c262-40ba-a81e-e2f47783882f, Password = password6a751786-7c5f-44bf-b129-f693fc73876d, Permissions = UNAUTHORIZED })","AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 236, CardID = 1, UserEmail = UserEmail1e54f357-c262-40ba-a81e-e2f47783882f, Password = password6a751786-7c5f-44bf-b129-f693fc73876d, Permissions = UNAUTHORIZED })",""
"passed","Thu Nov 03 10:04:28 MSK 2022","Thu Nov 03 10:04:28 MSK 2022","363","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 57)","AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 57)",""
"passed","Thu Nov 03 10:04:34 MSK 2022","Thu Nov 03 10:04:35 MSK 2022","400","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 81, SlopeName = slopeNamec6759d6e-e705-419b-ad9a-e25b492378c2, IsOpen = True, DifficultyLevel = 26, ConnectedLifts =  })","AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 81, SlopeName = slopeNamec6759d6e-e705-419b-ad9a-e25b492378c2, IsOpen = True, DifficultyLevel = 26, ConnectedLifts =  })",""
"passed","Thu Nov 03 10:04:31 MSK 2022","Thu Nov 03 10:04:32 MSK 2022","383","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 248, CardID = 88, UserEmail = UserEmaile52451aa-cccc-446e-b805-6f0d16d7428e, Password = password67ce62aa-7721-46c1-a2d4-950459a264ce, Permissions = UNAUTHORIZED })","AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 248, CardID = 88, UserEmail = UserEmaile52451aa-cccc-446e-b805-6f0d16d7428e, Password = password67ce62aa-7721-46c1-a2d4-950459a264ce, Permissions = UNAUTHORIZED })",""
"passed","Thu Nov 03 10:04:30 MSK 2022","Thu Nov 03 10:04:30 MSK 2022","394","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 160, LiftName = liftName3f3ecba1-e2db-445a-ab10-48e67d27aff8, IsOpen = True, SeatsAmount = 14, LiftingTime = 229, QueueTime = 223, ConnectedSlopes =  })","AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 160, LiftName = liftName3f3ecba1-e2db-445a-ab10-48e67d27aff8, IsOpen = True, SeatsAmount = 14, LiftingTime = 229, QueueTime = 223, ConnectedSlopes =  })",""
"passed","Thu Nov 03 10:04:36 MSK 2022","Thu Nov 03 10:04:37 MSK 2022","387","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 227, SlopeName = slopeNameeeb34798-8390-473d-874c-a9395fc64b0e, IsOpen = True, DifficultyLevel = 208, ConnectedLifts =  })","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 227, SlopeName = slopeNameeeb34798-8390-473d-874c-a9395fc64b0e, IsOpen = True, DifficultyLevel = 208, ConnectedLifts =  })",""
"passed","Thu Nov 03 10:04:27 MSK 2022","Thu Nov 03 10:04:28 MSK 2022","386","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 54, LiftID = 89, IsOpen = True })","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 54, LiftID = 89, IsOpen = True })",""
"passed","Thu Nov 03 10:04:25 MSK 2022","Thu Nov 03 10:04:25 MSK 2022","525","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 218, LiftID = 88, IsOpen = True })","AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 218, LiftID = 88, IsOpen = True })",""
"passed","Thu Nov 03 10:04:33 MSK 2022","Thu Nov 03 10:04:34 MSK 2022","363","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 74)","AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 74)",""
"passed","Thu Nov 03 10:04:30 MSK 2022","Thu Nov 03 10:04:31 MSK 2022","366","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty","AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty",""
"passed","Thu Nov 03 10:04:28 MSK 2022","Thu Nov 03 10:04:28 MSK 2022","394","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk","AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk",""
"passed","Thu Nov 03 10:04:36 MSK 2022","Thu Nov 03 10:04:36 MSK 2022","365","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: ""slopeName28f07826-1f11-487d-8e30-72d0381d22df"")","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: ""slopeName28f07826-1f11-487d-8e30-72d0381d22df"")",""
"passed","Thu Nov 03 10:04:39 MSK 2022","Thu Nov 03 10:04:39 MSK 2022","387","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 142, LiftID = 184, SlopeID = 88 })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 142, LiftID = 184, SlopeID = 88 })",""
"passed","Thu Nov 03 10:04:40 MSK 2022","Thu Nov 03 10:04:41 MSK 2022","402","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 223, LiftID = 215, SlopeID = 37 })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 223, LiftID = 215, SlopeID = 37 })",""
"passed","Thu Nov 03 10:04:26 MSK 2022","Thu Nov 03 10:04:27 MSK 2022","362","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty",""
"passed","Thu Nov 03 10:04:32 MSK 2022","Thu Nov 03 10:04:32 MSK 2022","395","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 251, CardID = 189, UserEmail = UserEmail7f6a0cd3-9018-4aa9-af0a-9cfcc5a0c8b7, Password = passwordbb9c4e01-084b-45aa-a55b-85ab95aba4b7, Permissions = UNAUTHORIZED })","AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 251, CardID = 189, UserEmail = UserEmail7f6a0cd3-9018-4aa9-af0a-9cfcc5a0c8b7, Password = passwordbb9c4e01-084b-45aa-a55b-85ab95aba4b7, Permissions = UNAUTHORIZED })",""
"passed","Thu Nov 03 10:04:26 MSK 2022","Thu Nov 03 10:04:26 MSK 2022","486","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 225)","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 225)",""
"passed","Thu Nov 03 10:04:39 MSK 2022","Thu Nov 03 10:04:39 MSK 2022","401","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk",""
"passed","Thu Nov 03 10:04:30 MSK 2022","Thu Nov 03 10:04:30 MSK 2022","382","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 126, LiftName = liftName6babe78e-a8a0-4c2d-b84d-caa8869488f0, IsOpen = True, SeatsAmount = 140, LiftingTime = 64, QueueTime = 152, ConnectedSlopes =  })","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 126, LiftName = liftName6babe78e-a8a0-4c2d-b84d-caa8869488f0, IsOpen = True, SeatsAmount = 140, LiftingTime = 64, QueueTime = 152, ConnectedSlopes =  })",""
"passed","Thu Nov 03 10:04:26 MSK 2022","Thu Nov 03 10:04:26 MSK 2022","394","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 69, LiftID = 201, IsOpen = True })","AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 69, LiftID = 201, IsOpen = True })",""
"passed","Thu Nov 03 10:04:38 MSK 2022","Thu Nov 03 10:04:39 MSK 2022","394","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 53, LiftID = 127, SlopeID = 152 })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 53, LiftID = 127, SlopeID = 152 })",""
"passed","Thu Nov 03 10:04:29 MSK 2022","Thu Nov 03 10:04:29 MSK 2022","403","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 132, LiftName = liftNameb66d9767-f94e-4b83-ab9a-6d383ff4103f, IsOpen = True, SeatsAmount = 206, LiftingTime = 203, QueueTime = 243, ConnectedSlopes =  })","AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 132, LiftName = liftNameb66d9767-f94e-4b83-ab9a-6d383ff4103f, IsOpen = True, SeatsAmount = 206, LiftingTime = 203, QueueTime = 243, ConnectedSlopes =  })",""
"passed","Thu Nov 03 10:04:33 MSK 2022","Thu Nov 03 10:04:33 MSK 2022","383","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 207, CardID = 17, UserEmail = UserEmailf3c5a208-239b-4776-bb70-9e16e976d0b2, Password = password68b3a9ea-e3de-4725-b4bf-4ac33dfec94d, Permissions = UNAUTHORIZED })","AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 207, CardID = 17, UserEmail = UserEmailf3c5a208-239b-4776-bb70-9e16e976d0b2, Password = password68b3a9ea-e3de-4725-b4bf-4ac33dfec94d, Permissions = UNAUTHORIZED })",""
"passed","Thu Nov 03 10:04:28 MSK 2022","Thu Nov 03 10:04:29 MSK 2022","374","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: ""liftName59ea4655-79fa-4ec8-8f53-54ece3f2d56c"")","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: ""liftName59ea4655-79fa-4ec8-8f53-54ece3f2d56c"")",""
"passed","Thu Nov 03 10:04:38 MSK 2022","Thu Nov 03 10:04:38 MSK 2022","361","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 131)","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 131)",""
"passed","Thu Nov 03 10:04:39 MSK 2022","Thu Nov 03 10:04:40 MSK 2022","365","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty",""
"passed","Thu Nov 03 10:04:35 MSK 2022","Thu Nov 03 10:04:35 MSK 2022","399","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 175, SlopeName = slopeNamedebed475-249c-4fb6-a62e-bf3103df5a08, IsOpen = True, DifficultyLevel = 24, ConnectedLifts =  })","AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 175, SlopeName = slopeNamedebed475-249c-4fb6-a62e-bf3103df5a08, IsOpen = True, DifficultyLevel = 24, ConnectedLifts =  })",""
"passed","Thu Nov 03 10:04:36 MSK 2022","Thu Nov 03 10:04:36 MSK 2022","378","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty",""
"passed","Thu Nov 03 10:04:37 MSK 2022","Thu Nov 03 10:04:37 MSK 2022","387","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 47, LiftID = 64, SlopeID = 146 })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 47, LiftID = 64, SlopeID = 146 })",""
"passed","Thu Nov 03 10:04:25 MSK 2022","Thu Nov 03 10:04:26 MSK 2022","362","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 1)","AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 1)",""
"passed","Thu Nov 03 10:04:29 MSK 2022","Thu Nov 03 10:04:30 MSK 2022","367","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty",""
"passed","Thu Nov 03 10:05:01 MSK 2022","Thu Nov 03 10:05:01 MSK 2022","600","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestAdminGetUsers","IntegrationTests.TestActionsWithUsers.TestAdminGetUsers",""
"passed","Thu Nov 03 10:04:59 MSK 2022","Thu Nov 03 10:05:00 MSK 2022","602","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestRegisterOk","IntegrationTests.TestActionsWithUsers.TestRegisterOk",""
"passed","Thu Nov 03 10:05:15 MSK 2022","Thu Nov 03 10:05:15 MSK 2022","681","","SuiteForTestingActionsWithLiftsSlopes","","IntegrationTests.TestActionsWithLiftsSlopes","IntegrationTests.TestActionsWithLiftsSlopes.TestAdminDeleteLiftSlopeAsync(lift: Lift { LiftID = 55, LiftName = liftName05a8f1c2-effb-4ece-ba67-3ba7d933742e, IsOpen = True, SeatsAmount = 192, LiftingTime = 205, QueueTime = 1, ConnectedSlopes =  }, slope: Slope { SlopeID = 57, SlopeName = slopeName6b3911e3-16fd-454e-8020-3a8a240186c0, IsOpen = False, DifficultyLevel = 187, ConnectedLifts =  })","IntegrationTests.TestActionsWithLiftsSlopes.TestAdminDeleteLiftSlopeAsync(lift: Lift { LiftID = 55, LiftName = liftName05a8f1c2-effb-4ece-ba67-3ba7d933742e, IsOpen = True, SeatsAmount = 192, LiftingTime = 205, QueueTime = 1, ConnectedSlopes =  }, slope: Slope { SlopeID = 57, SlopeName = slopeName6b3911e3-16fd-454e-8020-3a8a240186c0, IsOpen = False, DifficultyLevel = 187, ConnectedLifts =  })",""
"passed","Thu Nov 03 10:05:10 MSK 2022","Thu Nov 03 10:05:11 MSK 2022","609","","SuiteForTestingActionsWithLifts","","IntegrationTests.TestActionsWithLiftsLifts","IntegrationTests.TestActionsWithLiftsLifts.TestGetLiftInfoAsync(lift: Lift { LiftID = 51, LiftName = liftNamea370a575-bd64-4880-94b2-a35fdb5ffeab, IsOpen = True, SeatsAmount = 166, LiftingTime = 173, QueueTime = 125, ConnectedSlopes =  })","IntegrationTests.TestActionsWithLiftsLifts.TestGetLiftInfoAsync(lift: Lift { LiftID = 51, LiftName = liftNamea370a575-bd64-4880-94b2-a35fdb5ffeab, IsOpen = True, SeatsAmount = 166, LiftingTime = 173, QueueTime = 125, ConnectedSlopes =  })",""
"passed","Thu Nov 03 10:05:04 MSK 2022","Thu Nov 03 10:05:04 MSK 2022","640","","SuiteForTestingActionsWithTurnstiles","","IntegrationTests.TestActionsWithTurnstiles","IntegrationTests.TestActionsWithTurnstiles.TestAdminUpdateTurnstileAsync(turnstile: Turnstile { TurnstileID = 255, LiftID = 30, IsOpen = True })","IntegrationTests.TestActionsWithTurnstiles.TestAdminUpdateTurnstileAsync(turnstile: Turnstile { TurnstileID = 255, LiftID = 30, IsOpen = True })",""
"passed","Thu Nov 03 10:04:56 MSK 2022","Thu Nov 03 10:04:57 MSK 2022","706","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestAdminUpdateUser","IntegrationTests.TestActionsWithUsers.TestAdminUpdateUser",""
"passed","Thu Nov 03 10:05:07 MSK 2022","Thu Nov 03 10:05:08 MSK 2022","641","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithSlopes","IntegrationTests.TestActionsWithSlopes.TestAdminAddSlopeAsync(slope: Slope { SlopeID = 110, SlopeName = slopeName974105dc-cc38-47d5-a891-019bd5f3c859, IsOpen = True, DifficultyLevel = 179, ConnectedLifts =  })","IntegrationTests.TestActionsWithSlopes.TestAdminAddSlopeAsync(slope: Slope { SlopeID = 110, SlopeName = slopeName974105dc-cc38-47d5-a891-019bd5f3c859, IsOpen = True, DifficultyLevel = 179, ConnectedLifts =  })",""
"passed","Thu Nov 03 10:05:06 MSK 2022","Thu Nov 03 10:05:07 MSK 2022","670","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithSlopes","IntegrationTests.TestActionsWithSlopes.TestGetSlopesInfoAsync(initialSlopes: [Slope { SlopeID = 250, SlopeName = slopeName071b0883-ce8e-4dbf-a83f-e45f9d9f24df, IsOpen = True, DifficultyLevel = 199, ConnectedLifts =  }, Slope { SlopeID = 2, SlopeName = slopeName06558ac4-3b1a-4fe6-9965-dce1a02599f4, IsOpen = False, DifficultyLevel = 122, ConnectedLifts =  }, Slope { SlopeID = 237, SlopeName = slopeNameb9e83372-d321-48b7-b6da-f19df0875153, IsOpen = True, DifficultyLevel = 187, ConnectedLifts =  }])","IntegrationTests.TestActionsWithSlopes.TestGetSlopesInfoAsync(initialSlopes: [Slope { SlopeID = 250, SlopeName = slopeName071b0883-ce8e-4dbf-a83f-e45f9d9f24df, IsOpen = True, DifficultyLevel = 199, ConnectedLifts =  }, Slope { SlopeID = 2, SlopeName = slopeName06558ac4-3b1a-4fe6-9965-dce1a02599f4, IsOpen = False, DifficultyLevel = 122, ConnectedLifts =  }, Slope { SlopeID = 237, SlopeName = slopeNameb9e83372-d321-48b7-b6da-f19df0875153, IsOpen = True, DifficultyLevel = 187, ConnectedLifts =  }])",""
"passed","Thu Nov 03 10:05:12 MSK 2022","Thu Nov 03 10:05:13 MSK 2022","641","","SuiteForTestingActionsWithLifts","","IntegrationTests.TestActionsWithLiftsLifts","IntegrationTests.TestActionsWithLiftsLifts.TestUpdateLiftInfoAsync(lift: Lift { LiftID = 13, LiftName = liftNamed633b1e5-cea5-46c1-b30c-46d06f361acc, IsOpen = True, SeatsAmount = 37, LiftingTime = 245, QueueTime = 208, ConnectedSlopes =  })","IntegrationTests.TestActionsWithLiftsLifts.TestUpdateLiftInfoAsync(lift: Lift { LiftID = 13, LiftName = liftNamed633b1e5-cea5-46c1-b30c-46d06f361acc, IsOpen = True, SeatsAmount = 37, LiftingTime = 245, QueueTime = 208, ConnectedSlopes =  })",""
"passed","Thu Nov 03 10:05:06 MSK 2022","Thu Nov 03 10:05:06 MSK 2022","614","","SuiteForTestingActionsWithTurnstiles","","IntegrationTests.TestActionsWithTurnstiles","IntegrationTests.TestActionsWithTurnstiles.TestAdminAddAutoIncrementTurnstileAsync(turnstile: Turnstile { TurnstileID = 178, LiftID = 238, IsOpen = True })","IntegrationTests.TestActionsWithTurnstiles.TestAdminAddAutoIncrementTurnstileAsync(turnstile: Turnstile { TurnstileID = 178, LiftID = 238, IsOpen = True })",""
"passed","Thu Nov 03 10:05:02 MSK 2022","Thu Nov 03 10:05:03 MSK 2022","595","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestAdminGetUserByIDAsync","IntegrationTests.TestActionsWithUsers.TestAdminGetUserByIDAsync",""
"passed","Thu Nov 03 10:05:08 MSK 2022","Thu Nov 03 10:05:09 MSK 2022","619","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithSlopes","IntegrationTests.TestActionsWithSlopes.TestAdminAddAutoIncrementSlopeAsync(slope: Slope { SlopeID = 160, SlopeName = slopeNamecd081e30-d634-49b8-bf44-789be7630ebf, IsOpen = True, DifficultyLevel = 58, ConnectedLifts =  })","IntegrationTests.TestActionsWithSlopes.TestAdminAddAutoIncrementSlopeAsync(slope: Slope { SlopeID = 160, SlopeName = slopeNamecd081e30-d634-49b8-bf44-789be7630ebf, IsOpen = True, DifficultyLevel = 58, ConnectedLifts =  })",""
"passed","Thu Nov 03 10:05:10 MSK 2022","Thu Nov 03 10:05:10 MSK 2022","609","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithSlopes","IntegrationTests.TestActionsWithSlopes.TestGetSlopeInfoAsync(slope: Slope { SlopeID = 99, SlopeName = slopeNamea17187b6-4ce3-467e-bb0f-a92b2e96d83a, IsOpen = True, DifficultyLevel = 45, ConnectedLifts =  })","IntegrationTests.TestActionsWithSlopes.TestGetSlopeInfoAsync(slope: Slope { SlopeID = 99, SlopeName = slopeNamea17187b6-4ce3-467e-bb0f-a92b2e96d83a, IsOpen = True, DifficultyLevel = 45, ConnectedLifts =  })",""
"passed","Thu Nov 03 10:05:05 MSK 2022","Thu Nov 03 10:05:06 MSK 2022","615","","SuiteForTestingActionsWithTurnstiles","","IntegrationTests.TestActionsWithTurnstiles","IntegrationTests.TestActionsWithTurnstiles.TestAdminDeleteTurnstileAsync(turnstile: Turnstile { TurnstileID = 27, LiftID = 126, IsOpen = True })","IntegrationTests.TestActionsWithTurnstiles.TestAdminDeleteTurnstileAsync(turnstile: Turnstile { TurnstileID = 27, LiftID = 126, IsOpen = True })",""
"passed","Thu Nov 03 10:05:13 MSK 2022","Thu Nov 03 10:05:13 MSK 2022","628","","SuiteForTestingActionsWithLifts","","IntegrationTests.TestActionsWithLiftsLifts","IntegrationTests.TestActionsWithLiftsLifts.TestAdminAddAutoIncrementLiftAsync(lift: Lift { LiftID = 5, LiftName = liftName8d162e90-c94f-4a79-950f-c90435de2edd, IsOpen = True, SeatsAmount = 182, LiftingTime = 11, QueueTime = 41, ConnectedSlopes =  })","IntegrationTests.TestActionsWithLiftsLifts.TestAdminAddAutoIncrementLiftAsync(lift: Lift { LiftID = 5, LiftName = liftName8d162e90-c94f-4a79-950f-c90435de2edd, IsOpen = True, SeatsAmount = 182, LiftingTime = 11, QueueTime = 41, ConnectedSlopes =  })",""
"passed","Thu Nov 03 10:05:13 MSK 2022","Thu Nov 03 10:05:14 MSK 2022","649","","SuiteForTestingActionsWithLiftsSlopes","","IntegrationTests.TestActionsWithLiftsSlopes","IntegrationTests.TestActionsWithLiftsSlopes.TestGetLiftsSlopesInfoAsync(liftsSlopes: [LiftSlope { RecordID = 184, LiftID = 166, SlopeID = 190 }, LiftSlope { RecordID = 169, LiftID = 5, SlopeID = 7 }, LiftSlope { RecordID = 41, LiftID = 181, SlopeID = 89 }])","IntegrationTests.TestActionsWithLiftsSlopes.TestGetLiftsSlopesInfoAsync(liftsSlopes: [LiftSlope { RecordID = 184, LiftID = 166, SlopeID = 190 }, LiftSlope { RecordID = 169, LiftID = 5, SlopeID = 7 }, LiftSlope { RecordID = 41, LiftID = 181, SlopeID = 89 }])",""
"passed","Thu Nov 03 10:05:08 MSK 2022","Thu Nov 03 10:05:08 MSK 2022","642","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithSlopes","IntegrationTests.TestActionsWithSlopes.TestUpdateSlopeInfoAsync(slope: Slope { SlopeID = 201, SlopeName = slopeName0beb33bf-977f-400d-be82-2ba3d4dd7f03, IsOpen = True, DifficultyLevel = 255, ConnectedLifts =  })","IntegrationTests.TestActionsWithSlopes.TestUpdateSlopeInfoAsync(slope: Slope { SlopeID = 201, SlopeName = slopeName0beb33bf-977f-400d-be82-2ba3d4dd7f03, IsOpen = True, DifficultyLevel = 255, ConnectedLifts =  })",""
"passed","Thu Nov 03 10:05:03 MSK 2022","Thu Nov 03 10:05:04 MSK 2022","609","","SuiteForTestingActionsWithTurnstiles","","IntegrationTests.TestActionsWithTurnstiles","IntegrationTests.TestActionsWithTurnstiles.TestAdminGetTurnstileAsync(turnstile: Turnstile { TurnstileID = 72, LiftID = 220, IsOpen = True })","IntegrationTests.TestActionsWithTurnstiles.TestAdminGetTurnstileAsync(turnstile: Turnstile { TurnstileID = 72, LiftID = 220, IsOpen = True })",""
"passed","Thu Nov 03 10:05:11 MSK 2022","Thu Nov 03 10:05:11 MSK 2022","640","","SuiteForTestingActionsWithLifts","","IntegrationTests.TestActionsWithLiftsLifts","IntegrationTests.TestActionsWithLiftsLifts.TestAdminDeleteLiftAsync(lift: Lift { LiftID = 217, LiftName = liftName80faa00b-d990-4f05-9fca-112e5ee8d6cc, IsOpen = True, SeatsAmount = 197, LiftingTime = 44, QueueTime = 238, ConnectedSlopes =  })","IntegrationTests.TestActionsWithLiftsLifts.TestAdminDeleteLiftAsync(lift: Lift { LiftID = 217, LiftName = liftName80faa00b-d990-4f05-9fca-112e5ee8d6cc, IsOpen = True, SeatsAmount = 197, LiftingTime = 44, QueueTime = 238, ConnectedSlopes =  })",""
"passed","Thu Nov 03 10:04:57 MSK 2022","Thu Nov 03 10:04:58 MSK 2022","580","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestLogInOk","IntegrationTests.TestActionsWithUsers.TestLogInOk",""
"passed","Thu Nov 03 10:04:59 MSK 2022","Thu Nov 03 10:04:59 MSK 2022","573","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestLogInWithWrongPassword","IntegrationTests.TestActionsWithUsers.TestLogInWithWrongPassword",""
"passed","Thu Nov 03 10:05:09 MSK 2022","Thu Nov 03 10:05:10 MSK 2022","632","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithSlopes","IntegrationTests.TestActionsWithSlopes.TestAdminDeleteSlopeAsync(slope: Slope { SlopeID = 91, SlopeName = slopeName36bd7cc4-d691-4773-bc06-9e335032105e, IsOpen = True, DifficultyLevel = 61, ConnectedLifts =  })","IntegrationTests.TestActionsWithSlopes.TestAdminDeleteSlopeAsync(slope: Slope { SlopeID = 91, SlopeName = slopeName36bd7cc4-d691-4773-bc06-9e335032105e, IsOpen = True, DifficultyLevel = 61, ConnectedLifts =  })",""
"passed","Thu Nov 03 10:05:14 MSK 2022","Thu Nov 03 10:05:15 MSK 2022","671","","SuiteForTestingActionsWithLiftsSlopes","","IntegrationTests.TestActionsWithLiftsSlopes","IntegrationTests.TestActionsWithLiftsSlopes.TestAdminAddAutoIncrementLiftSlopeAsync(lift: Lift { LiftID = 8, LiftName = liftName4d95b49d-599f-45ef-a474-9b626993128a, IsOpen = True, SeatsAmount = 40, LiftingTime = 181, QueueTime = 103, ConnectedSlopes =  }, slope: Slope { SlopeID = 123, SlopeName = slopeName1762bbd6-1251-4a1e-a575-e14e8245b780, IsOpen = False, DifficultyLevel = 129, ConnectedLifts =  })","IntegrationTests.TestActionsWithLiftsSlopes.TestAdminAddAutoIncrementLiftSlopeAsync(lift: Lift { LiftID = 8, LiftName = liftName4d95b49d-599f-45ef-a474-9b626993128a, IsOpen = True, SeatsAmount = 40, LiftingTime = 181, QueueTime = 103, ConnectedSlopes =  }, slope: Slope { SlopeID = 123, SlopeName = slopeName1762bbd6-1251-4a1e-a575-e14e8245b780, IsOpen = False, DifficultyLevel = 129, ConnectedLifts =  })",""
"passed","Thu Nov 03 10:04:57 MSK 2022","Thu Nov 03 10:04:57 MSK 2022","615","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestAdminAddAutoIncrementUser","IntegrationTests.TestActionsWithUsers.TestAdminAddAutoIncrementUser",""
"passed","Thu Nov 03 10:05:00 MSK 2022","Thu Nov 03 10:05:01 MSK 2022","663","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestAdminDeleteUser","IntegrationTests.TestActionsWithUsers.TestAdminDeleteUser",""
"passed","Thu Nov 03 10:05:02 MSK 2022","Thu Nov 03 10:05:02 MSK 2022","574","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestRegisterUserWithNoPassword","IntegrationTests.TestActionsWithUsers.TestRegisterUserWithNoPassword",""
"passed","Thu Nov 03 10:05:04 MSK 2022","Thu Nov 03 10:05:05 MSK 2022","643","","SuiteForTestingActionsWithTurnstiles","","IntegrationTests.TestActionsWithTurnstiles","IntegrationTests.TestActionsWithTurnstiles.TestAdminGetTurnstilesAsync(initialTurnstiles: [Turnstile { TurnstileID = 59, LiftID = 169, IsOpen = True }, Turnstile { TurnstileID = 77, LiftID = 103, IsOpen = False }, Turnstile { TurnstileID = 65, LiftID = 239, IsOpen = True }])","IntegrationTests.TestActionsWithTurnstiles.TestAdminGetTurnstilesAsync(initialTurnstiles: [Turnstile { TurnstileID = 59, LiftID = 169, IsOpen = True }, Turnstile { TurnstileID = 77, LiftID = 103, IsOpen = False }, Turnstile { TurnstileID = 65, LiftID = 239, IsOpen = True }])",""
"passed","Thu Nov 03 10:04:58 MSK 2022","Thu Nov 03 10:04:59 MSK 2022","568","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestRegisterUserWithRepeatedEmail","IntegrationTests.TestActionsWithUsers.TestRegisterUserWithRepeatedEmail",""
"passed","Thu Nov 03 10:05:01 MSK 2022","Thu Nov 03 10:05:02 MSK 2022","550","","SuiteForTestingActionsWithSlopes","","IntegrationTests.TestActionsWithUsers","IntegrationTests.TestActionsWithUsers.TestRegisterUserWithNoEmail","IntegrationTests.TestActionsWithUsers.TestRegisterUserWithNoEmail",""
"passed","Thu Nov 03 10:05:11 MSK 2022","Thu Nov 03 10:05:12 MSK 2022","668","","SuiteForTestingActionsWithLifts","","IntegrationTests.TestActionsWithLiftsLifts","IntegrationTests.TestActionsWithLiftsLifts.TestGetLiftsInfoAsync(initialLifts: [Lift { LiftID = 238, LiftName = liftName0d6cab66-4424-4baf-ba96-a40beb404068, IsOpen = True, SeatsAmount = 224, LiftingTime = 145, QueueTime = 2, ConnectedSlopes =  }, Lift { LiftID = 161, LiftName = liftName1478b442-fff3-4830-a51c-f26e37ad44a4, IsOpen = False, SeatsAmount = 187, LiftingTime = 82, QueueTime = 117, ConnectedSlopes =  }, Lift { LiftID = 61, LiftName = liftNamec31153ce-0854-49b8-9c1d-4041e4fa8ed4, IsOpen = True, SeatsAmount = 104, LiftingTime = 47, QueueTime = 116, ConnectedSlopes =  }])","IntegrationTests.TestActionsWithLiftsLifts.TestGetLiftsInfoAsync(initialLifts: [Lift { LiftID = 238, LiftName = liftName0d6cab66-4424-4baf-ba96-a40beb404068, IsOpen = True, SeatsAmount = 224, LiftingTime = 145, QueueTime = 2, ConnectedSlopes =  }, Lift { LiftID = 161, LiftName = liftName1478b442-fff3-4830-a51c-f26e37ad44a4, IsOpen = False, SeatsAmount = 187, LiftingTime = 82, QueueTime = 117, ConnectedSlopes =  }, Lift { LiftID = 61, LiftName = liftNamec31153ce-0854-49b8-9c1d-4041e4fa8ed4, IsOpen = True, SeatsAmount = 104, LiftingTime = 47, QueueTime = 116, ConnectedSlopes =  }])",""
"passed","Thu Nov 03 10:05:31 MSK 2022","Thu Nov 03 10:05:32 MSK 2022","918","","E2ETestSkiPatrolWorkingWithLifts","","E2ETests.E2ETest","E2ETests.E2ETest.E2ETestSkiPatrolWorkingWithLifts","E2ETests.E2ETest.E2ETestSkiPatrolWorkingWithLifts",""
