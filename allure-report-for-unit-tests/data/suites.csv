"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","65","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestGetSlopeInfoAsync(userID: 44, slope: Slope { SlopeID = 210, SlopeName = slopeNamee18e682d-843c-4d0c-a776-cdc7f3318bd7, IsOpen = True, DifficultyLevel = 217, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:6>, slopesRepositoryStub: Mock<ISlopesRepository:4>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:9>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestGetSlopeInfoAsync(userID: 44, slope: Slope { SlopeID = 210, SlopeName = slopeNamee18e682d-843c-4d0c-a776-cdc7f3318bd7, IsOpen = True, DifficultyLevel = 217, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:6>, slopesRepositoryStub: Mock<ISlopesRepository:4>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:9>, sut: SlopesService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","65","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","7","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestAdminUpdateUser","BL.Tests.UsersServiceTests.TestAdminUpdateUser",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","7","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","6","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestUpdateSlopeInfoAsync(userID: 129, slope: Slope { SlopeID = 131, SlopeName = slopeName1f53bfe5-685e-4eea-875c-c00afdeee134, IsOpen = True, DifficultyLevel = 37, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:8>, slopesRepositoryStub: Mock<ISlopesRepository:6>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestUpdateSlopeInfoAsync(userID: 129, slope: Slope { SlopeID = 131, SlopeName = slopeName1f53bfe5-685e-4eea-875c-c00afdeee134, IsOpen = True, DifficultyLevel = 37, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:8>, slopesRepositoryStub: Mock<ISlopesRepository:6>, sut: SlopesService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","3","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminFunctions","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminFunctions",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","4","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestAdminGetUserByIDAsync","BL.Tests.UsersServiceTests.TestAdminGetUserByIDAsync",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","65","","LiftsSlopesServiceSuite","","BL.Tests.LiftsSlopesServiceTests","BL.Tests.LiftsSlopesServiceTests.TestAdminDeleteLiftSlopeAsync(lift: Lift { LiftID = 102, LiftName = liftName20869cef-ad17-4134-9e45-a68c1a622281, IsOpen = True, SeatsAmount = 18, LiftingTime = 249, QueueTime = 71, ConnectedSlopes =  }, slope: Slope { SlopeID = 120, SlopeName = slopeName9ee51645-d9b0-4b4a-b048-27cfb2f12564, IsOpen = False, DifficultyLevel = 56, ConnectedLifts =  }, slopesRepositoryStub: Mock<ISlopesRepository:2>, liftsRepositoryStub: Mock<ILiftsRepository:7>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:7>)","BL.Tests.LiftsSlopesServiceTests.TestAdminDeleteLiftSlopeAsync(lift: Lift { LiftID = 102, LiftName = liftName20869cef-ad17-4134-9e45-a68c1a622281, IsOpen = True, SeatsAmount = 18, LiftingTime = 249, QueueTime = 71, ConnectedSlopes =  }, slope: Slope { SlopeID = 120, SlopeName = slopeName9ee51645-d9b0-4b4a-b048-27cfb2f12564, IsOpen = False, DifficultyLevel = 56, ConnectedLifts =  }, slopesRepositoryStub: Mock<ISlopesRepository:2>, liftsRepositoryStub: Mock<ILiftsRepository:7>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:7>)",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","2","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestRegisterUserWithNoPassword","BL.Tests.UsersServiceTests.TestRegisterUserWithNoPassword",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","7","","LiftsSlopesServiceSuite","","BL.Tests.LiftsSlopesServiceTests","BL.Tests.LiftsSlopesServiceTests.TestAdminAddAutoIncrementLiftSlopeAsync(lift: Lift { LiftID = 97, LiftName = liftName20cc9442-931a-4699-bb6b-0cac05a9c63e, IsOpen = True, SeatsAmount = 63, LiftingTime = 158, QueueTime = 68, ConnectedSlopes =  }, slope: Slope { SlopeID = 77, SlopeName = slopeName5ddc1ca1-9a25-4b5b-86cd-935a1118bb34, IsOpen = False, DifficultyLevel = 39, ConnectedLifts =  }, slopesRepositoryStub: Mock<ISlopesRepository:3>, liftsRepositoryStub: Mock<ILiftsRepository:8>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:8>)","BL.Tests.LiftsSlopesServiceTests.TestAdminAddAutoIncrementLiftSlopeAsync(lift: Lift { LiftID = 97, LiftName = liftName20cc9442-931a-4699-bb6b-0cac05a9c63e, IsOpen = True, SeatsAmount = 63, LiftingTime = 158, QueueTime = 68, ConnectedSlopes =  }, slope: Slope { SlopeID = 77, SlopeName = slopeName5ddc1ca1-9a25-4b5b-86cd-935a1118bb34, IsOpen = False, DifficultyLevel = 39, ConnectedLifts =  }, slopesRepositoryStub: Mock<ISlopesRepository:3>, liftsRepositoryStub: Mock<ILiftsRepository:8>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:8>)",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAuthorizedFunctions(functionName: ""LogOutAsync"")","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAuthorizedFunctions(functionName: ""LogOutAsync"")",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","8","","LiftsServiceSuite","","BL.Tests.LiftsServiceTest","BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 2, lift: Lift { LiftID = 52, LiftName = liftName908cf9eb-eb62-4304-b169-797d3d0b049d, IsOpen = True, SeatsAmount = 217, LiftingTime = 71, QueueTime = 132, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryStub: Mock<ILiftsRepository:1>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })","BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 2, lift: Lift { LiftID = 52, LiftName = liftName908cf9eb-eb62-4304-b169-797d3d0b049d, IsOpen = True, SeatsAmount = 217, LiftingTime = 71, QueueTime = 132, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryStub: Mock<ILiftsRepository:1>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetLiftsSlopesInfoAsync"")",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","10","","LiftsServiceSuite","","BL.Tests.LiftsServiceTest","BL.Tests.LiftsServiceTest.TestAdminDeleteLiftAsync(userID: 19, lift: Lift { LiftID = 158, LiftName = liftName8e4fbff1-4933-4b85-a532-1e4d714d6f94, IsOpen = True, SeatsAmount = 179, LiftingTime = 249, QueueTime = 164, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:4>, liftsRepositoryStub: Mock<ILiftsRepository:4>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:4>, sut: LiftsService { })","BL.Tests.LiftsServiceTest.TestAdminDeleteLiftAsync(userID: 19, lift: Lift { LiftID = 158, LiftName = liftName8e4fbff1-4933-4b85-a532-1e4d714d6f94, IsOpen = True, SeatsAmount = 179, LiftingTime = 249, QueueTime = 164, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:4>, liftsRepositoryStub: Mock<ILiftsRepository:4>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:4>, sut: LiftsService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","69","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestAdminGetUsers","BL.Tests.UsersServiceTests.TestAdminGetUsers",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","15","","LiftsServiceSuite","","BL.Tests.LiftsServiceTest","BL.Tests.LiftsServiceTest.TestAdminAddAutoIncrementLiftAsync(userID: 149, lift: Lift { LiftID = 6, LiftName = liftName122f8def-df52-405c-a596-e2217813ff5f, IsOpen = True, SeatsAmount = 121, LiftingTime = 117, QueueTime = 122, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:5>, liftsRepositoryStub: Mock<ILiftsRepository:5>, sut: LiftsService { })","BL.Tests.LiftsServiceTest.TestAdminAddAutoIncrementLiftAsync(userID: 149, lift: Lift { LiftID = 6, LiftName = liftName122f8def-df52-405c-a596-e2217813ff5f, IsOpen = True, SeatsAmount = 121, LiftingTime = 117, QueueTime = 122, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:5>, liftsRepositoryStub: Mock<ILiftsRepository:5>, sut: LiftsService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","2","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestLogInOk","BL.Tests.UsersServiceTests.TestLogInOk",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","7","","LiftsServiceSuite","","BL.Tests.LiftsServiceTest","BL.Tests.LiftsServiceTest.TestUpdateLiftInfoAsync(userID: 182, lift: Lift { LiftID = 143, LiftName = liftNamef8374862-299a-4380-a0b3-9a466f52a14c, IsOpen = True, SeatsAmount = 123, LiftingTime = 164, QueueTime = 18, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:3>, liftsRepositoryStub: Mock<ILiftsRepository:3>, sut: LiftsService { })","BL.Tests.LiftsServiceTest.TestUpdateLiftInfoAsync(userID: 182, lift: Lift { LiftID = 143, LiftName = liftNamef8374862-299a-4380-a0b3-9a466f52a14c, IsOpen = True, SeatsAmount = 123, LiftingTime = 164, QueueTime = 18, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:3>, liftsRepositoryStub: Mock<ILiftsRepository:3>, sut: LiftsService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","65","","TurnstilesServiceSuite","","BL.Tests.TurnstilesServiceTest","BL.Tests.TurnstilesServiceTest.TestAdminDeleteTurnstileAsync(userID: 230, turnstile: Turnstile { TurnstileID = 90, LiftID = 78, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:15>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:9>, sut: TurnstilesService { })","BL.Tests.TurnstilesServiceTest.TestAdminDeleteTurnstileAsync(userID: 230, turnstile: Turnstile { TurnstileID = 90, LiftID = 78, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:15>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:9>, sut: TurnstilesService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","7","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestAdminAddAutoIncrementUser","BL.Tests.UsersServiceTests.TestAdminAddAutoIncrementUser",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","5","","LiftsSlopesServiceSuite","","BL.Tests.LiftsSlopesServiceTests","BL.Tests.LiftsSlopesServiceTests.TestGetLiftsSlopesInfoAsync(liftsSlopes: [LiftSlope { RecordID = 38, LiftID = 21, SlopeID = 93 }, LiftSlope { RecordID = 121, LiftID = 230, SlopeID = 80 }, LiftSlope { RecordID = 72, LiftID = 109, SlopeID = 204 }], slopesRepositoryStub: Mock<ISlopesRepository:1>, liftsRepositoryStub: Mock<ILiftsRepository:6>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:6>)","BL.Tests.LiftsSlopesServiceTests.TestGetLiftsSlopesInfoAsync(liftsSlopes: [LiftSlope { RecordID = 38, LiftID = 21, SlopeID = 93 }, LiftSlope { RecordID = 121, LiftID = 230, SlopeID = 80 }, LiftSlope { RecordID = 72, LiftID = 109, SlopeID = 204 }], slopesRepositoryStub: Mock<ISlopesRepository:1>, liftsRepositoryStub: Mock<ILiftsRepository:6>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:6>)",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","4","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestRegisterUserWithRepeatedEmail","BL.Tests.UsersServiceTests.TestRegisterUserWithRepeatedEmail",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","1","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","10","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestAdminAddSlopeAsync(userID: 6, slope: Slope { SlopeID = 61, SlopeName = slopeName1cd7d105-88c4-4688-ac38-cb4248229fae, IsOpen = True, DifficultyLevel = 74, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:11>, slopesRepositoryStub: Mock<ISlopesRepository:9>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestAdminAddSlopeAsync(userID: 6, slope: Slope { SlopeID = 61, SlopeName = slopeName1cd7d105-88c4-4688-ac38-cb4248229fae, IsOpen = True, DifficultyLevel = 74, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:11>, slopesRepositoryStub: Mock<ISlopesRepository:9>, sut: SlopesService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","1","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""MarkMessageReadByUserAsync"")",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","9","","TurnstilesServiceSuite","","BL.Tests.TurnstilesServiceTest","BL.Tests.TurnstilesServiceTest.TestAdminAddAutoIncrementTurnstileAsync(userID: 98, turnstile: Turnstile { TurnstileID = 160, LiftID = 141, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:16>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:10>, sut: TurnstilesService { })","BL.Tests.TurnstilesServiceTest.TestAdminAddAutoIncrementTurnstileAsync(userID: 98, turnstile: Turnstile { TurnstileID = 160, LiftID = 141, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:16>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:10>, sut: TurnstilesService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","4","","TurnstilesServiceSuite","","BL.Tests.TurnstilesServiceTest","BL.Tests.TurnstilesServiceTest.TestAdminGetTurnstilesAsync(userID: 246, initialTurnstiles: [Turnstile { TurnstileID = 147, LiftID = 152, IsOpen = True }, Turnstile { TurnstileID = 70, LiftID = 171, IsOpen = False }, Turnstile { TurnstileID = 218, LiftID = 47, IsOpen = True }], checkPermissionServiceMock: Mock<ICheckPermissionService:13>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:7>, sut: TurnstilesService { })","BL.Tests.TurnstilesServiceTest.TestAdminGetTurnstilesAsync(userID: 246, initialTurnstiles: [Turnstile { TurnstileID = 147, LiftID = 152, IsOpen = True }, Turnstile { TurnstileID = 70, LiftID = 171, IsOpen = False }, Turnstile { TurnstileID = 218, LiftID = 47, IsOpen = True }], checkPermissionServiceMock: Mock<ICheckPermissionService:13>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:7>, sut: TurnstilesService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","3","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestLogInWithWrongPassword","BL.Tests.UsersServiceTests.TestLogInWithWrongPassword",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","1","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","3","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestAdminDeleteUser","BL.Tests.UsersServiceTests.TestAdminDeleteUser",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasAccessToAuthorizedFunctions(functionName: ""LogOutAsync"")","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasAccessToAuthorizedFunctions(functionName: ""LogOutAsync"")",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","3","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAuthorizedFunctions(functionName: ""SendMessageAsync"")","BL.Tests.CheckPermissionsServiceTests.UnauthorizedHasNoAccessToAuthorizedFunctions(functionName: ""SendMessageAsync"")",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","8","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 21, initialSlopes: [Slope { SlopeID = 96, SlopeName = slopeName1acc34f8-0eca-41a5-944d-0d12e26054f0, IsOpen = True, DifficultyLevel = 174, ConnectedLifts =  }, Slope { SlopeID = 15, SlopeName = slopeName99474130-df2b-4e6d-b52d-683b50d86934, IsOpen = False, DifficultyLevel = 167, ConnectedLifts =  }, Slope { SlopeID = 229, SlopeName = slopeName430fe4da-3944-4dba-8cb7-4833f1fa8a3b, IsOpen = True, DifficultyLevel = 142, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 21, initialSlopes: [Slope { SlopeID = 96, SlopeName = slopeName1acc34f8-0eca-41a5-944d-0d12e26054f0, IsOpen = True, DifficultyLevel = 174, ConnectedLifts =  }, Slope { SlopeID = 15, SlopeName = slopeName99474130-df2b-4e6d-b52d-683b50d86934, IsOpen = False, DifficultyLevel = 167, ConnectedLifts =  }, Slope { SlopeID = 229, SlopeName = slopeName430fe4da-3944-4dba-8cb7-4833f1fa8a3b, IsOpen = True, DifficultyLevel = 142, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","3","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasNoAccessToAdminFunctions","BL.Tests.CheckPermissionsServiceTests.SkiPatrolHasNoAccessToAdminFunctions",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","6","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestAdminDeleteSlopeAsync(userID: 157, slope: Slope { SlopeID = 236, SlopeName = slopeName8c32ccec-043b-4a8c-80bc-ae7990491e16, IsOpen = True, DifficultyLevel = 4, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:9>, slopesRepositoryStub: Mock<ISlopesRepository:7>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:12>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestAdminDeleteSlopeAsync(userID: 157, slope: Slope { SlopeID = 236, SlopeName = slopeName8c32ccec-043b-4a8c-80bc-ae7990491e16, IsOpen = True, DifficultyLevel = 4, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:9>, slopesRepositoryStub: Mock<ISlopesRepository:7>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:12>, sut: SlopesService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","4","","TurnstilesServiceSuite","","BL.Tests.TurnstilesServiceTest","BL.Tests.TurnstilesServiceTest.TestAdminGetTurnstileAsync(userID: 39, turnstile: Turnstile { TurnstileID = 12, LiftID = 128, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:12>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:6>, sut: TurnstilesService { })","BL.Tests.TurnstilesServiceTest.TestAdminGetTurnstileAsync(userID: 39, turnstile: Turnstile { TurnstileID = 12, LiftID = 128, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:12>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:6>, sut: TurnstilesService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","6","","SlopesServiceSuite","","BL.Tests.SlopesServiceTest","BL.Tests.SlopesServiceTest.TestAdminAddAutoIncrementSlopeAsync(userID: 172, slope: Slope { SlopeID = 6, SlopeName = slopeName3830732c-2828-4a8a-8564-fe0297e1ce97, IsOpen = True, DifficultyLevel = 182, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:10>, slopesRepositoryStub: Mock<ISlopesRepository:8>, sut: SlopesService { })","BL.Tests.SlopesServiceTest.TestAdminAddAutoIncrementSlopeAsync(userID: 172, slope: Slope { SlopeID = 6, SlopeName = slopeName3830732c-2828-4a8a-8564-fe0297e1ce97, IsOpen = True, DifficultyLevel = 182, ConnectedLifts =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:10>, slopesRepositoryStub: Mock<ISlopesRepository:8>, sut: SlopesService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","3","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasAccessToAuthorizedFunctions(functionName: ""SendMessageAsync"")","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasAccessToAuthorizedFunctions(functionName: ""SendMessageAsync"")",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","108","","LiftsServiceSuite","","BL.Tests.LiftsServiceTest","BL.Tests.LiftsServiceTest.TestGetLiftsInfoAsync(userID: 19, initialLifts: [Lift { LiftID = 175, LiftName = liftName3827d994-c3ed-4e23-a0a5-3ae56aa8b7be, IsOpen = True, SeatsAmount = 9, LiftingTime = 222, QueueTime = 214, ConnectedSlopes =  }, Lift { LiftID = 23, LiftName = liftName951613f6-3f07-4291-af15-64f6749be58e, IsOpen = False, SeatsAmount = 220, LiftingTime = 165, QueueTime = 176, ConnectedSlopes =  }, Lift { LiftID = 192, LiftName = liftNameb3b64fb6-2336-4db2-9fb2-71a2e2f02a6d, IsOpen = True, SeatsAmount = 139, LiftingTime = 29, QueueTime = 110, ConnectedSlopes =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:2>, liftsRepositoryStub: Mock<ILiftsRepository:2>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:2>, sut: LiftsService { })","BL.Tests.LiftsServiceTest.TestGetLiftsInfoAsync(userID: 19, initialLifts: [Lift { LiftID = 175, LiftName = liftName3827d994-c3ed-4e23-a0a5-3ae56aa8b7be, IsOpen = True, SeatsAmount = 9, LiftingTime = 222, QueueTime = 214, ConnectedSlopes =  }, Lift { LiftID = 23, LiftName = liftName951613f6-3f07-4291-af15-64f6749be58e, IsOpen = False, SeatsAmount = 220, LiftingTime = 165, QueueTime = 176, ConnectedSlopes =  }, Lift { LiftID = 192, LiftName = liftNameb3b64fb6-2336-4db2-9fb2-71a2e2f02a6d, IsOpen = True, SeatsAmount = 139, LiftingTime = 29, QueueTime = 110, ConnectedSlopes =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:2>, liftsRepositoryStub: Mock<ILiftsRepository:2>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:2>, sut: LiftsService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","5","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminFunctions","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminFunctions",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","3","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestRegisterUserWithNoEmail","BL.Tests.UsersServiceTests.TestRegisterUserWithNoEmail",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","10","","UsersServiceSuite","","BL.Tests.UsersServiceTests","BL.Tests.UsersServiceTests.TestRegisterOk","BL.Tests.UsersServiceTests.TestRegisterOk",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","5","","TurnstilesServiceSuite","","BL.Tests.TurnstilesServiceTest","BL.Tests.TurnstilesServiceTest.TestAdminUpdateTurnstileAsync(userID: 34, turnstile: Turnstile { TurnstileID = 74, LiftID = 68, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:14>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:8>, sut: TurnstilesService { })","BL.Tests.TurnstilesServiceTest.TestAdminUpdateTurnstileAsync(userID: 34, turnstile: Turnstile { TurnstileID = 74, LiftID = 68, IsOpen = True }, checkPermissionServiceMock: Mock<ICheckPermissionService:14>, turnstilesRepositoryStub: Mock<ITurnstilesRepository:8>, sut: TurnstilesService { })",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","2","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AdminHasAccessToAllFunctions","BL.Tests.CheckPermissionsServiceTests.AdminHasAccessToAllFunctions",""
"passed","Sun Oct 16 16:16:53 MSK 2022","Sun Oct 16 16:16:53 MSK 2022","3","","CheckPermissionsServiceSuite","","BL.Tests.CheckPermissionsServiceTests","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")","BL.Tests.CheckPermissionsServiceTests.AuthorizedHasNoAccessToAdminSkiPatrolFunctions(functionName: ""GetMessagesAsync"")",""
"passed","Sun Oct 16 16:17:13 MSK 2022","Sun Oct 16 16:17:14 MSK 2022","660","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 87, SlopeName = slopeName35b3292c-17ea-49fd-a836-9c9b9c2c43a2, IsOpen = True, DifficultyLevel = 194, ConnectedLifts =  }, slope2: Slope { SlopeID = 220, SlopeName = slopeName5e7c13af-7315-485b-9a5d-28a1a5048d36, IsOpen = False, DifficultyLevel = 247, ConnectedLifts =  }, lift1: Lift { LiftID = 123, LiftName = liftName9d0dd070-9717-4808-ace4-6c4cf9f5d245, IsOpen = True, SeatsAmount = 163, LiftingTime = 115, QueueTime = 15, ConnectedSlopes =  }, lift2: Lift { LiftID = 91, LiftName = liftNamee7650655-5780-459b-8dc6-fdd2b4fdd86b, IsOpen = False, SeatsAmount = 12, LiftingTime = 158, QueueTime = 54, ConnectedSlopes =  })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 87, SlopeName = slopeName35b3292c-17ea-49fd-a836-9c9b9c2c43a2, IsOpen = True, DifficultyLevel = 194, ConnectedLifts =  }, slope2: Slope { SlopeID = 220, SlopeName = slopeName5e7c13af-7315-485b-9a5d-28a1a5048d36, IsOpen = False, DifficultyLevel = 247, ConnectedLifts =  }, lift1: Lift { LiftID = 123, LiftName = liftName9d0dd070-9717-4808-ace4-6c4cf9f5d245, IsOpen = True, SeatsAmount = 163, LiftingTime = 115, QueueTime = 15, ConnectedSlopes =  }, lift2: Lift { LiftID = 91, LiftName = liftNamee7650655-5780-459b-8dc6-fdd2b4fdd86b, IsOpen = False, SeatsAmount = 12, LiftingTime = 158, QueueTime = 54, ConnectedSlopes =  })",""
"passed","Sun Oct 16 16:17:26 MSK 2022","Sun Oct 16 16:17:26 MSK 2022","567","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty",""
"passed","Sun Oct 16 16:17:14 MSK 2022","Sun Oct 16 16:17:15 MSK 2022","603","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 220, LiftID = 180, SlopeID = 217 })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 220, LiftID = 180, SlopeID = 217 })",""
"passed","Sun Oct 16 16:17:18 MSK 2022","Sun Oct 16 16:17:19 MSK 2022","620","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 239, CardID = 2, UserEmail = UserEmail42fbf0f2-2c6d-40b8-aa43-a9dbdbb84648, Password = passworddaeb42d5-1247-4403-ac86-39958652ea8b, Permissions = UNAUTHORIZED })","AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 239, CardID = 2, UserEmail = UserEmail42fbf0f2-2c6d-40b8-aa43-a9dbdbb84648, Password = passworddaeb42d5-1247-4403-ac86-39958652ea8b, Permissions = UNAUTHORIZED })",""
"passed","Sun Oct 16 16:17:10 MSK 2022","Sun Oct 16 16:17:11 MSK 2022","614","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk","AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk",""
"passed","Sun Oct 16 16:17:15 MSK 2022","Sun Oct 16 16:17:16 MSK 2022","615","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk",""
"passed","Sun Oct 16 16:17:24 MSK 2022","Sun Oct 16 16:17:25 MSK 2022","572","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: ""slopeName731cafce-f2ac-4b4f-9199-b6cf26846eb4"")","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: ""slopeName731cafce-f2ac-4b4f-9199-b6cf26846eb4"")",""
"passed","Sun Oct 16 16:17:23 MSK 2022","Sun Oct 16 16:17:23 MSK 2022","633","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk","AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk",""
"passed","Sun Oct 16 16:17:08 MSK 2022","Sun Oct 16 16:17:08 MSK 2022","679","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 177)","AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 177)",""
"passed","Sun Oct 16 16:17:20 MSK 2022","Sun Oct 16 16:17:21 MSK 2022","564","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: ""userEmailb338a911-f8fa-4a04-9fcb-6f37aa070f30"")","AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: ""userEmailb338a911-f8fa-4a04-9fcb-6f37aa070f30"")",""
"passed","Sun Oct 16 16:17:24 MSK 2022","Sun Oct 16 16:17:24 MSK 2022","601","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 178, SlopeName = slopeName199a768b-178d-4c9e-b1e3-c2407d453ba5, IsOpen = True, DifficultyLevel = 182, ConnectedLifts =  })","AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 178, SlopeName = slopeName199a768b-178d-4c9e-b1e3-c2407d453ba5, IsOpen = True, DifficultyLevel = 182, ConnectedLifts =  })",""
"passed","Sun Oct 16 16:17:17 MSK 2022","Sun Oct 16 16:17:18 MSK 2022","618","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 101, LiftID = 176, SlopeID = 220 })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 101, LiftID = 176, SlopeID = 220 })",""
"passed","Sun Oct 16 16:17:21 MSK 2022","Sun Oct 16 16:17:21 MSK 2022","614","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 58, CardID = 186, UserEmail = UserEmaila59a36df-4752-44bc-a522-7e17ebeda2cf, Password = password782f5e0e-b49a-40cd-b83d-d44e8b04b425, Permissions = UNAUTHORIZED })","AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 58, CardID = 186, UserEmail = UserEmaila59a36df-4752-44bc-a522-7e17ebeda2cf, Password = password782f5e0e-b49a-40cd-b83d-d44e8b04b425, Permissions = UNAUTHORIZED })",""
"passed","Sun Oct 16 16:17:23 MSK 2022","Sun Oct 16 16:17:24 MSK 2022","618","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 10, SlopeName = slopeName3e76f91f-6cb7-4626-a64e-59f4020a34db, IsOpen = True, DifficultyLevel = 218, ConnectedLifts =  })","AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 10, SlopeName = slopeName3e76f91f-6cb7-4626-a64e-59f4020a34db, IsOpen = True, DifficultyLevel = 218, ConnectedLifts =  })",""
"passed","Sun Oct 16 16:17:31 MSK 2022","Sun Oct 16 16:17:32 MSK 2022","617","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 84, LiftName = liftName785f495b-df0a-4ab5-b30c-5079c521fe75, IsOpen = True, SeatsAmount = 57, LiftingTime = 4, QueueTime = 251, ConnectedSlopes =  })","AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 84, LiftName = liftName785f495b-df0a-4ab5-b30c-5079c521fe75, IsOpen = True, SeatsAmount = 57, LiftingTime = 4, QueueTime = 251, ConnectedSlopes =  })",""
"passed","Sun Oct 16 16:17:13 MSK 2022","Sun Oct 16 16:17:13 MSK 2022","570","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 177)","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 177)",""
"passed","Sun Oct 16 16:17:19 MSK 2022","Sun Oct 16 16:17:20 MSK 2022","573","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 31)","AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 31)",""
"passed","Sun Oct 16 16:17:20 MSK 2022","Sun Oct 16 16:17:20 MSK 2022","603","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 202, CardID = 206, UserEmail = UserEmail2ed840ca-4bc7-4699-afe2-515442463f13, Password = password11cbe148-e1cc-438f-a6c2-ee25327f05de, Permissions = UNAUTHORIZED })","AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 202, CardID = 206, UserEmail = UserEmail2ed840ca-4bc7-4699-afe2-515442463f13, Password = password11cbe148-e1cc-438f-a6c2-ee25327f05de, Permissions = UNAUTHORIZED })",""
"passed","Sun Oct 16 16:17:27 MSK 2022","Sun Oct 16 16:17:27 MSK 2022","620","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 54, SlopeName = slopeNameb8e6661c-a195-4e9f-b127-656f9805644a, IsOpen = True, DifficultyLevel = 102, ConnectedLifts =  })","AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 54, SlopeName = slopeNameb8e6661c-a195-4e9f-b127-656f9805644a, IsOpen = True, DifficultyLevel = 102, ConnectedLifts =  })",""
"passed","Sun Oct 16 16:17:18 MSK 2022","Sun Oct 16 16:17:18 MSK 2022","617","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty","AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty",""
"passed","Sun Oct 16 16:17:30 MSK 2022","Sun Oct 16 16:17:31 MSK 2022","564","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty",""
"passed","Sun Oct 16 16:17:10 MSK 2022","Sun Oct 16 16:17:10 MSK 2022","571","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty",""
"passed","Sun Oct 16 16:17:22 MSK 2022","Sun Oct 16 16:17:23 MSK 2022","569","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: ""emailfd2a78a4-e532-44e0-a864-0c683dd850cc"")","AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: ""emailfd2a78a4-e532-44e0-a864-0c683dd850cc"")",""
"passed","Sun Oct 16 16:17:21 MSK 2022","Sun Oct 16 16:17:22 MSK 2022","598","","UsersRepositorySuite","","AccessToDB.Tests.UsersRepositoryTests","AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 145, CardID = 137, UserEmail = UserEmail57b0644d-e8f8-4f7a-ba56-bbf1d3750642, Password = password2bfa00f5-5ce6-44cc-9303-daff1c2c2d6f, Permissions = UNAUTHORIZED })","AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 145, CardID = 137, UserEmail = UserEmail57b0644d-e8f8-4f7a-ba56-bbf1d3750642, Password = password2bfa00f5-5ce6-44cc-9303-daff1c2c2d6f, Permissions = UNAUTHORIZED })",""
"passed","Sun Oct 16 16:17:28 MSK 2022","Sun Oct 16 16:17:29 MSK 2022","617","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk","AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk",""
"passed","Sun Oct 16 16:17:27 MSK 2022","Sun Oct 16 16:17:28 MSK 2022","613","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 8, LiftName = liftName6399c398-ec9a-4c59-82ec-93d2851153cf, IsOpen = True, SeatsAmount = 226, LiftingTime = 182, QueueTime = 186, ConnectedSlopes =  })","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 8, LiftName = liftName6399c398-ec9a-4c59-82ec-93d2851153cf, IsOpen = True, SeatsAmount = 226, LiftingTime = 182, QueueTime = 186, ConnectedSlopes =  })",""
"passed","Sun Oct 16 16:17:26 MSK 2022","Sun Oct 16 16:17:27 MSK 2022","571","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 206)","AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 206)",""
"passed","Sun Oct 16 16:17:16 MSK 2022","Sun Oct 16 16:17:17 MSK 2022","614","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty",""
"passed","Sun Oct 16 16:17:30 MSK 2022","Sun Oct 16 16:17:30 MSK 2022","571","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: ""liftNameacd01409-1aa4-4671-bf44-af58bd67c099"")","AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: ""liftNameacd01409-1aa4-4671-bf44-af58bd67c099"")",""
"passed","Sun Oct 16 16:17:15 MSK 2022","Sun Oct 16 16:17:15 MSK 2022","614","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 15, LiftID = 143, SlopeID = 65 })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 15, LiftID = 143, SlopeID = 65 })",""
"passed","Sun Oct 16 16:17:11 MSK 2022","Sun Oct 16 16:17:12 MSK 2022","616","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 196, LiftID = 234, IsOpen = True })","AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 196, LiftID = 234, IsOpen = True })",""
"passed","Sun Oct 16 16:17:08 MSK 2022","Sun Oct 16 16:17:09 MSK 2022","754","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 210)","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 210)",""
"passed","Sun Oct 16 16:17:12 MSK 2022","Sun Oct 16 16:17:13 MSK 2022","600","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 113, LiftID = 58, SlopeID = 234 })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 113, LiftID = 58, SlopeID = 234 })",""
"passed","Sun Oct 16 16:17:09 MSK 2022","Sun Oct 16 16:17:10 MSK 2022","603","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 103, LiftID = 64, IsOpen = True })","AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 103, LiftID = 64, IsOpen = True })",""
"passed","Sun Oct 16 16:17:12 MSK 2022","Sun Oct 16 16:17:12 MSK 2022","615","","TurnstilesRepositorySuite","","AccessToDB.Tests.TurnstilesRepositoryTests","AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 17, LiftID = 165, IsOpen = True })","AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 17, LiftID = 165, IsOpen = True })",""
"passed","Sun Oct 16 16:17:25 MSK 2022","Sun Oct 16 16:17:26 MSK 2022","618","","SlopesRepositorySuite","","AccessToDB.Tests.SlopesRepositoryTests","AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk","AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk",""
"passed","Sun Oct 16 16:17:29 MSK 2022","Sun Oct 16 16:17:29 MSK 2022","615","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 94, LiftName = liftName5bb1c38c-3c5a-4273-b05f-e798c490aaf0, IsOpen = True, SeatsAmount = 199, LiftingTime = 151, QueueTime = 200, ConnectedSlopes =  })","AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 94, LiftName = liftName5bb1c38c-3c5a-4273-b05f-e798c490aaf0, IsOpen = True, SeatsAmount = 199, LiftingTime = 151, QueueTime = 200, ConnectedSlopes =  })",""
"passed","Sun Oct 16 16:17:17 MSK 2022","Sun Oct 16 16:17:17 MSK 2022","603","","LiftsSlopesRepositorySuite","","AccessToDB.Tests.LiftsSlopesRepositoryTests","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 170, LiftID = 249, SlopeID = 148 })","AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 170, LiftID = 249, SlopeID = 148 })",""
"passed","Sun Oct 16 16:17:29 MSK 2022","Sun Oct 16 16:17:30 MSK 2022","568","","LiftsRepositorySuite","","AccessToDB.Tests.LiftsRepositoryTests","AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 204)","AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 204)",""
