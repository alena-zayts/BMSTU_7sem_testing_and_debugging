{"uid":"30d2d6c7eb701a9f","name":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 34, initialSlopes: [Slope { SlopeID = 97, SlopeName = slopeNamef361d9dc-f21e-4fd1-a57f-3c4df5a5f8a8, IsOpen = True, DifficultyLevel = 27, ConnectedLifts =  }, Slope { SlopeID = 249, SlopeName = slopeName5875d7e2-a862-4fde-8d55-35d78220f7cd, IsOpen = False, DifficultyLevel = 21, ConnectedLifts =  }, Slope { SlopeID = 231, SlopeName = slopeNamed4174e3c-b591-4e13-b7d4-960c454d6da8, IsOpen = True, DifficultyLevel = 213, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","fullName":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 34, initialSlopes: [Slope { SlopeID = 97, SlopeName = slopeNamef361d9dc-f21e-4fd1-a57f-3c4df5a5f8a8, IsOpen = True, DifficultyLevel = 27, ConnectedLifts =  }, Slope { SlopeID = 249, SlopeName = slopeName5875d7e2-a862-4fde-8d55-35d78220f7cd, IsOpen = False, DifficultyLevel = 21, ConnectedLifts =  }, Slope { SlopeID = 231, SlopeName = slopeNamed4174e3c-b591-4e13-b7d4-960c454d6da8, IsOpen = True, DifficultyLevel = 213, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","historyId":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 34, initialSlopes: [Slope { SlopeID = 97, SlopeName = slopeNamef361d9dc-f21e-4fd1-a57f-3c4df5a5f8a8, IsOpen = True, DifficultyLevel = 27, ConnectedLifts =  }, Slope { SlopeID = 249, SlopeName = slopeName5875d7e2-a862-4fde-8d55-35d78220f7cd, IsOpen = False, DifficultyLevel = 21, ConnectedLifts =  }, Slope { SlopeID = 231, SlopeName = slopeNamed4174e3c-b591-4e13-b7d4-960c454d6da8, IsOpen = True, DifficultyLevel = 213, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","time":{"start":1666361714828,"stop":1666361714844,"duration":16},"status":"passed","statusMessage":"","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"thread","value":".NET Long Running Task"},{"name":"host","value":"DESKTOP-TJ9D65N"},{"name":"testClass","value":"BL.Tests.SlopesServiceTest"},{"name":"testMethod","value":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 34, initialSlopes: [Slope { SlopeID = 97, SlopeName = slopeNamef361d9dc-f21e-4fd1-a57f-3c4df5a5f8a8, IsOpen = True, DifficultyLevel = 27, ConnectedLifts =  }, Slope { SlopeID = 249, SlopeName = slopeName5875d7e2-a862-4fde-8d55-35d78220f7cd, IsOpen = False, DifficultyLevel = 21, ConnectedLifts =  }, Slope { SlopeID = 231, SlopeName = slopeNamed4174e3c-b591-4e13-b7d4-960c454d6da8, IsOpen = True, DifficultyLevel = 213, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })"},{"name":"package","value":"BL.Tests.SlopesServiceTest"},{"name":"suite","value":"SlopesServiceSuite"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"30d2d6c7eb701a9f.json","parameterValues":[]}