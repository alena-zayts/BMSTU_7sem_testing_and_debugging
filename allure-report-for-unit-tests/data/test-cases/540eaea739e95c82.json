{"uid":"540eaea739e95c82","name":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 12, initialSlopes: [Slope { SlopeID = 163, SlopeName = slopeNamea5f6b535-8e65-40a0-94b9-41aba7ba6f56, IsOpen = True, DifficultyLevel = 202, ConnectedLifts =  }, Slope { SlopeID = 216, SlopeName = slopeName20a225fb-51aa-4f13-b9eb-6a41d0284ba4, IsOpen = False, DifficultyLevel = 114, ConnectedLifts =  }, Slope { SlopeID = 188, SlopeName = slopeName61b2bfe2-3409-460b-aaad-683b0ccdf518, IsOpen = True, DifficultyLevel = 100, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","fullName":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 12, initialSlopes: [Slope { SlopeID = 163, SlopeName = slopeNamea5f6b535-8e65-40a0-94b9-41aba7ba6f56, IsOpen = True, DifficultyLevel = 202, ConnectedLifts =  }, Slope { SlopeID = 216, SlopeName = slopeName20a225fb-51aa-4f13-b9eb-6a41d0284ba4, IsOpen = False, DifficultyLevel = 114, ConnectedLifts =  }, Slope { SlopeID = 188, SlopeName = slopeName61b2bfe2-3409-460b-aaad-683b0ccdf518, IsOpen = True, DifficultyLevel = 100, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","historyId":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 12, initialSlopes: [Slope { SlopeID = 163, SlopeName = slopeNamea5f6b535-8e65-40a0-94b9-41aba7ba6f56, IsOpen = True, DifficultyLevel = 202, ConnectedLifts =  }, Slope { SlopeID = 216, SlopeName = slopeName20a225fb-51aa-4f13-b9eb-6a41d0284ba4, IsOpen = False, DifficultyLevel = 114, ConnectedLifts =  }, Slope { SlopeID = 188, SlopeName = slopeName61b2bfe2-3409-460b-aaad-683b0ccdf518, IsOpen = True, DifficultyLevel = 100, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","time":{"start":1667457325368,"stop":1667457325461,"duration":93},"status":"passed","statusMessage":"","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"thread","value":".NET Long Running Task"},{"name":"host","value":"DESKTOP-TJ9D65N"},{"name":"testClass","value":"BL.Tests.SlopesServiceTest"},{"name":"testMethod","value":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 12, initialSlopes: [Slope { SlopeID = 163, SlopeName = slopeNamea5f6b535-8e65-40a0-94b9-41aba7ba6f56, IsOpen = True, DifficultyLevel = 202, ConnectedLifts =  }, Slope { SlopeID = 216, SlopeName = slopeName20a225fb-51aa-4f13-b9eb-6a41d0284ba4, IsOpen = False, DifficultyLevel = 114, ConnectedLifts =  }, Slope { SlopeID = 188, SlopeName = slopeName61b2bfe2-3409-460b-aaad-683b0ccdf518, IsOpen = True, DifficultyLevel = 100, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })"},{"name":"package","value":"BL.Tests.SlopesServiceTest"},{"name":"suite","value":"SlopesServiceSuite"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"540eaea739e95c82.json","parameterValues":[]}