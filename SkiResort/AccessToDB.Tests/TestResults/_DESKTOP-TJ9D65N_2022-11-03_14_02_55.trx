<?xml version="1.0" encoding="utf-8"?>
<TestRun id="ec9d1dd3-9df6-48b2-a178-009546d245de" name="@DESKTOP-TJ9D65N 2022-11-03 14:02:55" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2022-11-03T14:02:55.8015028+03:00" queuing="2022-11-03T14:02:55.8015029+03:00" start="2022-11-03T14:02:53.1112924+03:00" finish="2022-11-03T14:02:56.2461660+03:00" />
  <TestSettings name="default" id="c8ecb3ee-6084-4931-baff-7bb58cd2acfa">
    <Deployment runDeploymentRoot="_DESKTOP-TJ9D65N_2022-11-03_14_02_55" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="4847219e-04cf-4a3a-b36c-97c0ccbb28b3" testId="3741b26d-6ee0-6246-29e4-92009bff37b0" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.8301281+03:00" endTime="2022-11-03T14:02:55.8301283+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4847219e-04cf-4a3a-b36c-97c0ccbb28b3">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="75034bb0-92d4-4c84-9805-d07f58cb0ee9" testId="7fd5fecb-593b-e2d6-a70b-0f4f7f1116a8" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 172, LiftID = 171, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.6684836+03:00" endTime="2022-11-03T14:02:55.6684836+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="75034bb0-92d4-4c84-9805-d07f58cb0ee9">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b0e8b0fa-08ff-4fcb-84be-37b2cfc33e95" testId="c91279ed-1947-c183-fabb-7f4222d57f0c" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 27, LiftID = 67, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.7383655+03:00" endTime="2022-11-03T14:02:55.7383656+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b0e8b0fa-08ff-4fcb-84be-37b2cfc33e95">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="340e8357-466e-4f2d-9426-9ae0ecad5f92" testId="f5d685ad-a1a3-59cb-c6a0-6fd70a835f62" testName="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 101)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.6139052+03:00" endTime="2022-11-03T14:02:55.6139053+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="340e8357-466e-4f2d-9426-9ae0ecad5f92">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="94874a1c-50a3-45c5-bbc5-ff16555941c2" testId="913f12f3-b74d-7d82-2e99-1b1a90d52138" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 17, LiftID = 171, SlopeID = 159 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.9864557+03:00" endTime="2022-11-03T14:02:55.9864558+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="94874a1c-50a3-45c5-bbc5-ff16555941c2">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="61e5cd04-c248-4218-92af-13da034a3c1c" testId="869fe856-ec2a-6e6b-851d-408a03f63ed8" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 181, LiftID = 49, SlopeID = 11 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.9615293+03:00" endTime="2022-11-03T14:02:55.9615294+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="61e5cd04-c248-4218-92af-13da034a3c1c">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="45db9673-19eb-465a-a409-8d3b184ec6f3" testId="b6bc8dec-af7a-8c5d-8824-2693b59af98e" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 95, CardID = 230, UserEmail = UserEmail54ea1360-e520-441a-b929-bf134fbcfba8, Password = passwordfe14effe-6557-4c29-ba6f-1ea2b41366f9, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.7898247+03:00" endTime="2022-11-03T14:02:55.7898248+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="45db9673-19eb-465a-a409-8d3b184ec6f3">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b5f7f39b-bdcd-4bcb-a82f-dcae949d0f6d" testId="30f8e924-9784-0a43-e807-094f70e06567" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:56.0070758+03:00" endTime="2022-11-03T14:02:56.0070759+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b5f7f39b-bdcd-4bcb-a82f-dcae949d0f6d">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f6db98e4-ff09-4b21-b0c9-31d501b45008" testId="04162aa4-9e89-da06-852e-fa7fc75357c4" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 31, SlopeName = slopeName2746687b-5fab-4189-8b70-1222b45c35c8, IsOpen = True, DifficultyLevel = 44, ConnectedLifts =  }, slope2: Slope { SlopeID = 236, SlopeName = slopeNamee42b53f2-6e2d-44fa-b037-17ab5bf7a334, IsOpen = False, DifficultyLevel = 72, ConnectedLifts =  }, lift1: Lift { LiftID = 136, LiftName = liftName7ab65a9e-9b01-479d-90ac-b4058b5c7eda, IsOpen = True, SeatsAmount = 67, LiftingTime = 202, QueueTime = 158, ConnectedSlopes =  }, lift2: Lift { LiftID = 57, LiftName = liftName37f7ad0c-2d45-4867-a671-a3948629e4fb, IsOpen = False, SeatsAmount = 219, LiftingTime = 162, QueueTime = 12, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.9288032+03:00" endTime="2022-11-03T14:02:55.9288033+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f6db98e4-ff09-4b21-b0c9-31d501b45008">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0ecb371b-52b6-45a5-96cf-277762ddde90" testId="9bde57cd-6259-cd46-b3d9-99d98dfc723d" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 48)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.7362541+03:00" endTime="2022-11-03T14:02:55.7362542+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0ecb371b-52b6-45a5-96cf-277762ddde90">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c0bc9b8c-afaf-46dc-8257-00538e1035ef" testId="6c5acd4b-7f33-9634-a078-29978db460cc" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 154, CardID = 227, UserEmail = UserEmail5fccd193-1b01-46e4-b0ed-ac5aa8d245b0, Password = passwordddb3a4d5-cc94-457f-bd98-17835bb4090c, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.8496128+03:00" endTime="2022-11-03T14:02:55.8496129+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c0bc9b8c-afaf-46dc-8257-00538e1035ef">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="73a4b42d-a242-422f-ae70-2dfabd291a73" testId="8b416496-fb57-e042-c2c7-907869cc28c0" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 17)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.7555379+03:00" endTime="2022-11-03T14:02:55.7555380+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="73a4b42d-a242-422f-ae70-2dfabd291a73">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="35fa69dd-e1c6-497a-83fa-d6c19f83a3bb" testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:56.1145722+03:00" endTime="2022-11-03T14:02:56.1145723+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="35fa69dd-e1c6-497a-83fa-d6c19f83a3bb">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a025a281-2d48-4048-9f80-889d9f96af73" testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.8900287+03:00" endTime="2022-11-03T14:02:55.8900288+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a025a281-2d48-4048-9f80-889d9f96af73">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="39f21c22-4e2a-429d-b795-5d67cbb1955a" testId="f9435956-2e34-e52b-c34e-dce53665cf8e" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.7397738+03:00" endTime="2022-11-03T14:02:55.7397739+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="39f21c22-4e2a-429d-b795-5d67cbb1955a">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a7784eca-cbd2-4501-ac46-dd59114d2708" testId="8edd6997-45cb-b663-1016-70e19a570f16" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 131, LiftID = 235, SlopeID = 109 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.9453191+03:00" endTime="2022-11-03T14:02:55.9453192+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a7784eca-cbd2-4501-ac46-dd59114d2708">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c52ac029-bddd-435e-b5d4-2a359f7d5380" testId="1f0b4099-a545-63d6-c817-17eac95bc5b2" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmailf7077af1-c462-4620-8008-108317f5d23c&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.8630500+03:00" endTime="2022-11-03T14:02:55.8630501+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c52ac029-bddd-435e-b5d4-2a359f7d5380">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a0f2c365-8051-46c0-908c-b09c1361afaa" testId="9dcfe3c9-3de0-31de-7e59-1d54033f1b78" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 15)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.9161378+03:00" endTime="2022-11-03T14:02:55.9161379+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a0f2c365-8051-46c0-908c-b09c1361afaa">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cbd97308-1e58-4009-90d6-3cdf77767e3b" testId="9bbefb83-8311-6e03-307f-415e3495e223" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:56.1335182+03:00" endTime="2022-11-03T14:02:56.1335183+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cbd97308-1e58-4009-90d6-3cdf77767e3b">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bcda60f4-7eb6-40ce-824f-b2c789eabb8e" testId="2512d479-ccba-e880-6e32-042a5893f981" testName="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 173)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.8031041+03:00" endTime="2022-11-03T14:02:55.8031042+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bcda60f4-7eb6-40ce-824f-b2c789eabb8e">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b1778802-0dc2-4927-baf3-ee6c80b668a1" testId="3c521313-4ed6-6bce-b4f9-c359411028e7" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.6814529+03:00" endTime="2022-11-03T14:02:55.6814530+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b1778802-0dc2-4927-baf3-ee6c80b668a1">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="aaf3f0e6-09da-4f79-8283-68a655d72bdf" testId="a18c1f97-4f6b-cf24-6e7c-b7f1d23770c7" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeNamef1f255dd-e403-4fb0-aa39-1335261b8486&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:56.0411224+03:00" endTime="2022-11-03T14:02:56.0411226+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="aaf3f0e6-09da-4f79-8283-68a655d72bdf">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cb4e8238-919f-4c68-9653-a6cbcb012d0a" testId="34c8f6ce-1068-47db-16d2-83783534c531" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 34, CardID = 250, UserEmail = UserEmail161fb1e0-ab0f-4be4-b265-60756686ba14, Password = passwordc1d630ca-3659-4217-b264-e38dd0230f23, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.8144508+03:00" endTime="2022-11-03T14:02:55.8144508+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cb4e8238-919f-4c68-9653-a6cbcb012d0a">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="479cc81f-9d64-468d-90e0-101051e090f6" testId="c1bb008f-4f31-236d-dfac-46a4ad28c1e2" testName="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 204, CardID = 57, UserEmail = UserEmail8d971d76-fd72-4e15-8bcd-fac4ec0ab1c1, Password = passwordaad3c93c-9d96-4450-a904-0432a34921e9, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.7758142+03:00" endTime="2022-11-03T14:02:55.7758143+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="479cc81f-9d64-468d-90e0-101051e090f6">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e0a9f0ee-8164-4d26-95e3-a442f47aa33a" testId="607e8298-f113-be33-300e-15a343893443" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.6269586+03:00" endTime="2022-11-03T14:02:55.6269587+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e0a9f0ee-8164-4d26-95e3-a442f47aa33a">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7bc0296d-4b72-47de-969a-0421386d31f9" testId="ec229f70-485a-f91b-53ed-bce655f6cd58" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.5429925+03:00" endTime="2022-11-03T14:02:55.5430198+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7bc0296d-4b72-47de-969a-0421386d31f9">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2ab0d1c4-00a1-4867-8dfa-4c369fc9dfc9" testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:56.0247868+03:00" endTime="2022-11-03T14:02:56.0247869+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2ab0d1c4-00a1-4867-8dfa-4c369fc9dfc9">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e7cc0027-c1b0-47f4-93dd-c577709e1c8d" testId="bbd65776-8788-62d5-35f9-d9c12d2536b4" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftNamee78be5be-d3a6-4df8-b2d5-7b49ff95bd9b&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.6429272+03:00" endTime="2022-11-03T14:02:55.6429273+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e7cc0027-c1b0-47f4-93dd-c577709e1c8d">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="71912cc5-4b17-4468-a82c-c82cc1268060" testId="421cb54b-f8c5-625f-c2ea-476f4f1ba72d" testName="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 88, SlopeName = slopeName83d44b89-2dc8-4f81-a299-edaeba76e597, IsOpen = True, DifficultyLevel = 30, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:56.0844213+03:00" endTime="2022-11-03T14:02:56.0844214+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="71912cc5-4b17-4468-a82c-c82cc1268060">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9208ca13-519b-42a2-996c-6b9f5dd1bffe" testId="506fd27f-5ffe-c917-8dd9-c9ee7e600d36" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 121, SlopeName = slopeNamea37ea55b-eed5-4711-b1d9-9d4979a5d2c4, IsOpen = True, DifficultyLevel = 111, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:56.0707592+03:00" endTime="2022-11-03T14:02:56.0707593+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9208ca13-519b-42a2-996c-6b9f5dd1bffe">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3c0c493d-85a3-43bc-bbbe-e3869f944396" testId="60f0e6d9-03ef-7e5b-05c1-724342c7a750" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 125, LiftName = liftName6405c6ca-0d0d-4af4-af24-fa3dee39d7e4, IsOpen = True, SeatsAmount = 149, LiftingTime = 7, QueueTime = 13, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.6040757+03:00" endTime="2022-11-03T14:02:55.6040758+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3c0c493d-85a3-43bc-bbbe-e3869f944396">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2c6f5293-d08f-43ba-bf9b-ebf4ec33284e" testId="751877e6-c1e6-97f5-a4dc-33ff9c71fa44" testName="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 251)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:56.0987585+03:00" endTime="2022-11-03T14:02:56.0987585+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2c6f5293-d08f-43ba-bf9b-ebf4ec33284e">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="52b5b5f6-e132-4e9d-9068-67662a4f4c1c" testId="b997a322-5e12-58b9-5fba-acae27781535" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 31, LiftID = 202, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.7373377+03:00" endTime="2022-11-03T14:02:55.7373378+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="52b5b5f6-e132-4e9d-9068-67662a4f4c1c">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b7de75f5-038f-4b36-9d9d-9bb050c12408" testId="e2f0c46c-27c2-3c65-0b45-42767da326b5" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;email8ead6b5e-9589-4775-92ea-2cce39914d51&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.8763307+03:00" endTime="2022-11-03T14:02:55.8763308+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b7de75f5-038f-4b36-9d9d-9bb050c12408">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d3322a82-d100-463c-8f1c-2217de96ca33" testId="b249b24f-4b8c-f7c6-edd3-37f3b764ca7e" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 9, LiftID = 100, SlopeID = 242 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.9945682+03:00" endTime="2022-11-03T14:02:55.9945683+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d3322a82-d100-463c-8f1c-2217de96ca33">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="306c819d-dd8a-4e28-b2f0-c10357c97fb5" testId="b5bd6d81-dbeb-f030-f1b1-8496081af5e8" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 95, LiftID = 44, SlopeID = 176 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.9027669+03:00" endTime="2022-11-03T14:02:55.9027670+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="306c819d-dd8a-4e28-b2f0-c10357c97fb5">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c972216a-715c-44fd-8d5e-5c915c7437b0" testId="282ac0a3-72a9-d89b-b912-ff8f3a152f65" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 196, SlopeName = slopeName71ef0f24-ac29-455f-9ddf-fdd6c7d9fa6c, IsOpen = True, DifficultyLevel = 152, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:56.0580227+03:00" endTime="2022-11-03T14:02:56.0580228+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c972216a-715c-44fd-8d5e-5c915c7437b0">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b3c9b9a1-58d4-42ee-8c6f-f3d8c407078f" testId="bfa85683-4a63-2e22-d534-d2acd042acb6" testName="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 254, LiftName = liftName69e1ac3f-2f97-4a7f-9c3a-07041a001e64, IsOpen = True, SeatsAmount = 169, LiftingTime = 82, QueueTime = 222, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.5929249+03:00" endTime="2022-11-03T14:02:55.5929250+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b3c9b9a1-58d4-42ee-8c6f-f3d8c407078f">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="193afbcd-a385-4576-8000-c14443ea94b2" testId="6b96ef31-e678-6dee-2c12-27792f05bc9a" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 171, LiftName = liftNamec737add2-ea63-48a1-9acc-58e161cfd5ea, IsOpen = True, SeatsAmount = 91, LiftingTime = 129, QueueTime = 116, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T14:02:55.5801765+03:00" endTime="2022-11-03T14:02:55.5801766+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="193afbcd-a385-4576-8000-c14443ea94b2">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 204, CardID = 57, UserEmail = UserEmail8d971d76-fd72-4e15-8bcd-fac4ec0ab1c1, Password = passwordaad3c93c-9d96-4450-a904-0432a34921e9, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="c1bb008f-4f31-236d-dfac-46a4ad28c1e2">
      <Execution id="479cc81f-9d64-468d-90e0-101051e090f6" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestUpdateUserByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 88, SlopeName = slopeName83d44b89-2dc8-4f81-a299-edaeba76e597, IsOpen = True, DifficultyLevel = 30, ConnectedLifts =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="421cb54b-f8c5-625f-c2ea-476f4f1ba72d">
      <Execution id="71912cc5-4b17-4468-a82c-c82cc1268060" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestUpdateSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 27, LiftID = 67, IsOpen = True })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="c91279ed-1947-c183-fabb-7f4222d57f0c">
      <Execution id="b0e8b0fa-08ff-4fcb-84be-37b2cfc33e95" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestUpdateTurnstileByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="3741b26d-6ee0-6246-29e4-92009bff37b0">
      <Execution id="4847219e-04cf-4a3a-b36c-97c0ccbb28b3" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUsersAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 171, LiftName = liftNamec737add2-ea63-48a1-9acc-58e161cfd5ea, IsOpen = True, SeatsAmount = 91, LiftingTime = 129, QueueTime = 116, ConnectedSlopes =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="6b96ef31-e678-6dee-2c12-27792f05bc9a">
      <Execution id="193afbcd-a385-4576-8000-c14443ea94b2" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="f9435956-2e34-e52b-c34e-dce53665cf8e">
      <Execution id="39f21c22-4e2a-429d-b795-5d67cbb1955a" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 95, CardID = 230, UserEmail = UserEmail54ea1360-e520-441a-b929-bf134fbcfba8, Password = passwordfe14effe-6557-4c29-ba6f-1ea2b41366f9, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="b6bc8dec-af7a-8c5d-8824-2693b59af98e">
      <Execution id="45db9673-19eb-465a-a409-8d3b184ec6f3" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAsyncFailsWhenUserIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="4145f44e-b4b1-a618-09e8-c631496e6f1a">
      <Execution id="2ab0d1c4-00a1-4867-8dfa-4c369fc9dfc9" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftNamee78be5be-d3a6-4df8-b2d5-7b49ff95bd9b&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="bbd65776-8788-62d5-35f9-d9c12d2536b4">
      <Execution id="e7cc0027-c1b0-47f4-93dd-c577709e1c8d" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 251)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="751877e6-c1e6-97f5-a4dc-33ff9c71fa44">
      <Execution id="2c6f5293-d08f-43ba-bf9b-ebf4ec33284e" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestDeleteSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeNamef1f255dd-e403-4fb0-aa39-1335261b8486&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="a18c1f97-4f6b-cf24-6e7c-b7f1d23770c7">
      <Execution id="aaf3f0e6-09da-4f79-8283-68a655d72bdf" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;email8ead6b5e-9589-4775-92ea-2cce39914d51&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="e2f0c46c-27c2-3c65-0b45-42767da326b5">
      <Execution id="b7de75f5-038f-4b36-9d9d-9bb050c12408" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByEmailAsyncFailsWhenEmailNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 17, LiftID = 171, SlopeID = 159 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="913f12f3-b74d-7d82-2e99-1b1a90d52138">
      <Execution id="94874a1c-50a3-45c5-bbc5-ff16555941c2" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmailf7077af1-c462-4620-8008-108317f5d23c&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="1f0b4099-a545-63d6-c817-17eac95bc5b2">
      <Execution id="c52ac029-bddd-435e-b5d4-2a359f7d5380" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserEmailExistsAsyncFalse" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="9bbefb83-8311-6e03-307f-415e3495e223">
      <Execution id="cbd97308-1e58-4009-90d6-3cdf77767e3b" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="ec229f70-485a-f91b-53ed-bce655f6cd58">
      <Execution id="7bc0296d-4b72-47de-969a-0421386d31f9" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 17)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="8b416496-fb57-e042-c2c7-907869cc28c0">
      <Execution id="73a4b42d-a242-422f-ae70-2dfabd291a73" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesByLiftIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="3c521313-4ed6-6bce-b4f9-c359411028e7">
      <Execution id="b1778802-0dc2-4927-baf3-ee6c80b668a1" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 172, LiftID = 171, IsOpen = True })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="7fd5fecb-593b-e2d6-a70b-0f4f7f1116a8">
      <Execution id="75034bb0-92d4-4c84-9805-d07f58cb0ee9" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstileByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="30f8e924-9784-0a43-e807-094f70e06567">
      <Execution id="b5f7f39b-bdcd-4bcb-a82f-dcae949d0f6d" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 125, LiftName = liftName6405c6ca-0d0d-4af4-af24-fa3dee39d7e4, IsOpen = True, SeatsAmount = 149, LiftingTime = 7, QueueTime = 13, ConnectedSlopes =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="60f0e6d9-03ef-7e5b-05c1-724342c7a750">
      <Execution id="3c0c493d-85a3-43bc-bbbe-e3869f944396" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAsyncFailsWhenLiftIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 121, SlopeName = slopeNamea37ea55b-eed5-4711-b1d9-9d4979a5d2c4, IsOpen = True, DifficultyLevel = 111, ConnectedLifts =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="506fd27f-5ffe-c917-8dd9-c9ee7e600d36">
      <Execution id="9208ca13-519b-42a2-996c-6b9f5dd1bffe" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAsyncFailsWhenSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 9, LiftID = 100, SlopeID = 242 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="b249b24f-4b8c-f7c6-edd3-37f3b764ca7e">
      <Execution id="d3322a82-d100-463c-8f1c-2217de96ca33" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestUpdateLiftSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 154, CardID = 227, UserEmail = UserEmail5fccd193-1b01-46e4-b0ed-ac5aa8d245b0, Password = passwordddb3a4d5-cc94-457f-bd98-17835bb4090c, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="6c5acd4b-7f33-9634-a078-29978db460cc">
      <Execution id="c0bc9b8c-afaf-46dc-8257-00538e1035ef" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 95, LiftID = 44, SlopeID = 176 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="b5bd6d81-dbeb-f030-f1b1-8496081af5e8">
      <Execution id="306c819d-dd8a-4e28-b2f0-c10357c97fb5" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 254, LiftName = liftName69e1ac3f-2f97-4a7f-9c3a-07041a001e64, IsOpen = True, SeatsAmount = 169, LiftingTime = 82, QueueTime = 222, ConnectedSlopes =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="bfa85683-4a63-2e22-d534-d2acd042acb6">
      <Execution id="b3c9b9a1-58d4-42ee-8c6f-f3d8c407078f" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestUpdateLiftByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e">
      <Execution id="a025a281-2d48-4048-9f80-889d9f96af73" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 101)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="f5d685ad-a1a3-59cb-c6a0-6fd70a835f62">
      <Execution id="340e8357-466e-4f2d-9426-9ae0ecad5f92" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestDeleteLiftByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="8f7ba917-f771-0dc5-f9b9-465c34344b12">
      <Execution id="35fa69dd-e1c6-497a-83fa-d6c19f83a3bb" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 48)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="9bde57cd-6259-cd46-b3d9-99d98dfc723d">
      <Execution id="0ecb371b-52b6-45a5-96cf-277762ddde90" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 196, SlopeName = slopeName71ef0f24-ac29-455f-9ddf-fdd6c7d9fa6c, IsOpen = True, DifficultyLevel = 152, ConnectedLifts =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="282ac0a3-72a9-d89b-b912-ff8f3a152f65">
      <Execution id="c972216a-715c-44fd-8d5e-5c915c7437b0" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 131, LiftID = 235, SlopeID = 109 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="8edd6997-45cb-b663-1016-70e19a570f16">
      <Execution id="a7784eca-cbd2-4501-ac46-dd59114d2708" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="607e8298-f113-be33-300e-15a343893443">
      <Execution id="e0a9f0ee-8164-4d26-95e3-a442f47aa33a" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftsAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 31, SlopeName = slopeName2746687b-5fab-4189-8b70-1222b45c35c8, IsOpen = True, DifficultyLevel = 44, ConnectedLifts =  }, slope2: Slope { SlopeID = 236, SlopeName = slopeNamee42b53f2-6e2d-44fa-b037-17ab5bf7a334, IsOpen = False, DifficultyLevel = 72, ConnectedLifts =  }, lift1: Lift { LiftID = 136, LiftName = liftName7ab65a9e-9b01-479d-90ac-b405..." storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="04162aa4-9e89-da06-852e-fa7fc75357c4">
      <Execution id="f6db98e4-ff09-4b21-b0c9-31d501b45008" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftsBySlopeIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 181, LiftID = 49, SlopeID = 11 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="869fe856-ec2a-6e6b-851d-408a03f63ed8">
      <Execution id="61e5cd04-c248-4218-92af-13da034a3c1c" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopesByIDsAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 31, LiftID = 202, IsOpen = True })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="b997a322-5e12-58b9-5fba-acae27781535">
      <Execution id="52b5b5f6-e132-4e9d-9068-67662a4f4c1c" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 173)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="2512d479-ccba-e880-6e32-042a5893f981">
      <Execution id="bcda60f4-7eb6-40ce-824f-b2c789eabb8e" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestDeleteUserByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 15)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="9dcfe3c9-3de0-31de-7e59-1d54033f1b78">
      <Execution id="a0f2c365-8051-46c0-908c-b09c1361afaa" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 34, CardID = 250, UserEmail = UserEmail161fb1e0-ab0f-4be4-b265-60756686ba14, Password = passwordc1d630ca-3659-4217-b264-e38dd0230f23, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="34c8f6ce-1068-47db-16d2-83783534c531">
      <Execution id="cb4e8238-919f-4c68-9653-a6cbcb012d0a" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserIdExistsAsyncTrue" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="3741b26d-6ee0-6246-29e4-92009bff37b0" executionId="4847219e-04cf-4a3a-b36c-97c0ccbb28b3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7fd5fecb-593b-e2d6-a70b-0f4f7f1116a8" executionId="75034bb0-92d4-4c84-9805-d07f58cb0ee9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c91279ed-1947-c183-fabb-7f4222d57f0c" executionId="b0e8b0fa-08ff-4fcb-84be-37b2cfc33e95" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f5d685ad-a1a3-59cb-c6a0-6fd70a835f62" executionId="340e8357-466e-4f2d-9426-9ae0ecad5f92" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="913f12f3-b74d-7d82-2e99-1b1a90d52138" executionId="94874a1c-50a3-45c5-bbc5-ff16555941c2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="869fe856-ec2a-6e6b-851d-408a03f63ed8" executionId="61e5cd04-c248-4218-92af-13da034a3c1c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b6bc8dec-af7a-8c5d-8824-2693b59af98e" executionId="45db9673-19eb-465a-a409-8d3b184ec6f3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30f8e924-9784-0a43-e807-094f70e06567" executionId="b5f7f39b-bdcd-4bcb-a82f-dcae949d0f6d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="04162aa4-9e89-da06-852e-fa7fc75357c4" executionId="f6db98e4-ff09-4b21-b0c9-31d501b45008" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9bde57cd-6259-cd46-b3d9-99d98dfc723d" executionId="0ecb371b-52b6-45a5-96cf-277762ddde90" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6c5acd4b-7f33-9634-a078-29978db460cc" executionId="c0bc9b8c-afaf-46dc-8257-00538e1035ef" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8b416496-fb57-e042-c2c7-907869cc28c0" executionId="73a4b42d-a242-422f-ae70-2dfabd291a73" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" executionId="35fa69dd-e1c6-497a-83fa-d6c19f83a3bb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" executionId="a025a281-2d48-4048-9f80-889d9f96af73" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f9435956-2e34-e52b-c34e-dce53665cf8e" executionId="39f21c22-4e2a-429d-b795-5d67cbb1955a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8edd6997-45cb-b663-1016-70e19a570f16" executionId="a7784eca-cbd2-4501-ac46-dd59114d2708" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1f0b4099-a545-63d6-c817-17eac95bc5b2" executionId="c52ac029-bddd-435e-b5d4-2a359f7d5380" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9dcfe3c9-3de0-31de-7e59-1d54033f1b78" executionId="a0f2c365-8051-46c0-908c-b09c1361afaa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9bbefb83-8311-6e03-307f-415e3495e223" executionId="cbd97308-1e58-4009-90d6-3cdf77767e3b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2512d479-ccba-e880-6e32-042a5893f981" executionId="bcda60f4-7eb6-40ce-824f-b2c789eabb8e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3c521313-4ed6-6bce-b4f9-c359411028e7" executionId="b1778802-0dc2-4927-baf3-ee6c80b668a1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a18c1f97-4f6b-cf24-6e7c-b7f1d23770c7" executionId="aaf3f0e6-09da-4f79-8283-68a655d72bdf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="34c8f6ce-1068-47db-16d2-83783534c531" executionId="cb4e8238-919f-4c68-9653-a6cbcb012d0a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c1bb008f-4f31-236d-dfac-46a4ad28c1e2" executionId="479cc81f-9d64-468d-90e0-101051e090f6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="607e8298-f113-be33-300e-15a343893443" executionId="e0a9f0ee-8164-4d26-95e3-a442f47aa33a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ec229f70-485a-f91b-53ed-bce655f6cd58" executionId="7bc0296d-4b72-47de-969a-0421386d31f9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" executionId="2ab0d1c4-00a1-4867-8dfa-4c369fc9dfc9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bbd65776-8788-62d5-35f9-d9c12d2536b4" executionId="e7cc0027-c1b0-47f4-93dd-c577709e1c8d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="421cb54b-f8c5-625f-c2ea-476f4f1ba72d" executionId="71912cc5-4b17-4468-a82c-c82cc1268060" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="506fd27f-5ffe-c917-8dd9-c9ee7e600d36" executionId="9208ca13-519b-42a2-996c-6b9f5dd1bffe" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="60f0e6d9-03ef-7e5b-05c1-724342c7a750" executionId="3c0c493d-85a3-43bc-bbbe-e3869f944396" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="751877e6-c1e6-97f5-a4dc-33ff9c71fa44" executionId="2c6f5293-d08f-43ba-bf9b-ebf4ec33284e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b997a322-5e12-58b9-5fba-acae27781535" executionId="52b5b5f6-e132-4e9d-9068-67662a4f4c1c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e2f0c46c-27c2-3c65-0b45-42767da326b5" executionId="b7de75f5-038f-4b36-9d9d-9bb050c12408" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b249b24f-4b8c-f7c6-edd3-37f3b764ca7e" executionId="d3322a82-d100-463c-8f1c-2217de96ca33" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b5bd6d81-dbeb-f030-f1b1-8496081af5e8" executionId="306c819d-dd8a-4e28-b2f0-c10357c97fb5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="282ac0a3-72a9-d89b-b912-ff8f3a152f65" executionId="c972216a-715c-44fd-8d5e-5c915c7437b0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bfa85683-4a63-2e22-d534-d2acd042acb6" executionId="b3c9b9a1-58d4-42ee-8c6f-f3d8c407078f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6b96ef31-e678-6dee-2c12-27792f05bc9a" executionId="193afbcd-a385-4576-8000-c14443ea94b2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="39" executed="39" passed="0" failed="39" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.5+1caef2f33e (64-bit .NET 6.0.10)
[xUnit.net 00:00:00.92]   Discovering: AccessToDB.Tests
[xUnit.net 00:00:01.05]   Discovered:  AccessToDB.Tests
[xUnit.net 00:00:01.05]   Starting:    AccessToDB.Tests
[xUnit.net 00:00:01.23]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.23]       Stack Trace:
[xUnit.net 00:00:01.23]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.23]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.23]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.23]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.23]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.23]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.23]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.23]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.24]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.24]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.24]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.24]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.24]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.24]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.24]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.24]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.24]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.24]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.27]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.27]       Stack Trace:
[xUnit.net 00:00:01.27]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.27]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.27]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.27]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.27]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.27]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.27]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.27]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.27]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.27]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.27]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.27]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.27]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.27]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.28]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.28]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.28]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.28]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.29]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.29]       Stack Trace:
[xUnit.net 00:00:01.29]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.29]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.29]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.29]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.29]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.29]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.29]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.29]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.29]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.29]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.29]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.29]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.29]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.29]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.29]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.29]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.29]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.29]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.30]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.30]       Stack Trace:
[xUnit.net 00:00:01.30]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.30]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.30]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.30]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.30]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.30]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.30]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.30]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.30]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.30]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.30]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.30]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.30]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.30]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.30]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.30]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.30]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.30]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.31]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.31]       Stack Trace:
[xUnit.net 00:00:01.31]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.31]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.31]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.31]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.31]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.31]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.31]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.31]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.31]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.31]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.31]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.31]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.31]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.31]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.31]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.31]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.31]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.31]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.32]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.32]       Stack Trace:
[xUnit.net 00:00:01.32]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.32]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.32]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.32]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.32]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.32]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.32]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.32]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.32]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.32]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.32]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.32]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.32]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.32]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.32]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.32]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.32]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.32]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.34]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.34]       Stack Trace:
[xUnit.net 00:00:01.34]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.34]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.34]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.34]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.34]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.34]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.34]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.34]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.34]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.34]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.34]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.34]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.34]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.34]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.34]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.34]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.34]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.34]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.36]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.36]       Stack Trace:
[xUnit.net 00:00:01.36]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.36]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.36]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.36]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.36]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.36]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.36]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.36]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.36]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.36]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.36]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.36]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.36]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.36]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.36]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.36]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.36]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.36]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.38]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.38]       Stack Trace:
[xUnit.net 00:00:01.38]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.38]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.38]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.38]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.38]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.38]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.38]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.38]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.38]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.38]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.38]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.38]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.38]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.38]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.38]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.38]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.38]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.38]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.43]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.43]       Stack Trace:
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.43]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.43]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.43]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.43]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.43]       Stack Trace:
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.43]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.43]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.43]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.43]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.43]       Stack Trace:
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.43]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.43]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.43]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.43]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.43]       Stack Trace:
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.43]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.43]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.43]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.45]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.45]       Stack Trace:
[xUnit.net 00:00:01.45]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.45]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.45]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.45]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.45]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.45]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.45]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.45]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.45]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.45]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.45]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.45]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.47]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.47]       Stack Trace:
[xUnit.net 00:00:01.47]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.47]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.47]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.47]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.47]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.47]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.47]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.47]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.47]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.47]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.47]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.47]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.47]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.47]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.47]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.47]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.47]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.47]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.48]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.48]       Stack Trace:
[xUnit.net 00:00:01.48]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.48]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.48]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.48]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.48]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.48]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.48]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.48]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.48]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.48]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.48]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.48]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.48]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.48]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.48]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.48]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.48]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.48]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.50]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.50]       Stack Trace:
[xUnit.net 00:00:01.50]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.50]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.50]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.50]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.50]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.50]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.50]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.50]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.50]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.50]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.50]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.50]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.51]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.51]       Stack Trace:
[xUnit.net 00:00:01.51]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.51]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.51]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.51]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.51]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.51]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.51]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.51]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.51]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.51]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.51]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.51]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.52]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.52]       Stack Trace:
[xUnit.net 00:00:01.52]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.52]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.52]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.52]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.52]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.52]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.52]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.52]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.52]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.52]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.52]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.52]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.52]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.52]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.52]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.52]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.53]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.53]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.54]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.54]       Stack Trace:
[xUnit.net 00:00:01.54]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.54]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.54]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.54]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.54]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.54]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.54]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.54]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.54]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.54]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.54]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.54]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.56]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.56]       Stack Trace:
[xUnit.net 00:00:01.56]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.56]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.56]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.56]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.56]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.56]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.56]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.56]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.56]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.56]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.56]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.56]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.57]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.57]       Stack Trace:
[xUnit.net 00:00:01.57]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.57]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.57]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.57]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.57]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.57]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.57]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.57]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.57]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.57]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.57]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.57]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.58]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.58]       Stack Trace:
[xUnit.net 00:00:01.58]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.58]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.58]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.58]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.58]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.58]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.58]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.58]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.58]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.58]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.58]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.58]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.58]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.58]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.58]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.58]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.59]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.59]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.60]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.60]       Stack Trace:
[xUnit.net 00:00:01.60]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.60]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.60]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.60]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.60]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.60]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.60]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.60]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.60]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.60]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.60]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.60]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.61]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.61]       Stack Trace:
[xUnit.net 00:00:01.61]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.61]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.61]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.61]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.61]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.61]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.61]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.61]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.61]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.61]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.61]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.61]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.61]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.61]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.61]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.61]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.61]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.61]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.62]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.62]       Stack Trace:
[xUnit.net 00:00:01.62]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.62]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.62]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.62]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.62]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.62]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.62]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.62]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.62]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.62]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.62]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.62]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.64]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.64]       Stack Trace:
[xUnit.net 00:00:01.64]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.64]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.64]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.64]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.64]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.64]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.64]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.64]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.64]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.64]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.64]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.64]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.66]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.66]       Stack Trace:
[xUnit.net 00:00:01.66]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.66]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.66]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.66]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.66]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.66]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.66]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.66]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.66]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.66]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.66]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.66]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.67]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.68]       Stack Trace:
[xUnit.net 00:00:01.68]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.68]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.68]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.68]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.68]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.68]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.68]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.68]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.68]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.68]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.68]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.68]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.68]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.68]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.68]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.68]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.68]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.68]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.69]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.69]       Stack Trace:
[xUnit.net 00:00:01.69]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.69]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.69]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.69]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.69]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.69]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.69]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.69]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.69]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.69]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.69]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.69]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.70]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.70]       Stack Trace:
[xUnit.net 00:00:01.70]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.70]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.70]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.70]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.70]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.70]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.70]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.70]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.70]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.70]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.70]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.70]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.72]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.72]       Stack Trace:
[xUnit.net 00:00:01.72]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.72]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.72]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.72]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.72]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.72]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.72]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.72]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.72]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.72]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.72]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.72]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.72]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.72]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.72]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.72]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.72]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.72]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.74]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.74]       Stack Trace:
[xUnit.net 00:00:01.74]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.74]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.74]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.74]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.74]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.74]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.74]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.74]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.74]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.74]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.74]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.74]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.75]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.75]       Stack Trace:
[xUnit.net 00:00:01.75]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.75]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.75]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.75]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.75]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.75]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.75]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.75]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.75]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.75]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.75]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.75]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.76]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.77]       Stack Trace:
[xUnit.net 00:00:01.77]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.77]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.77]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.77]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.77]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.77]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.77]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.77]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.77]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.77]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.77]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.77]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.77]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.77]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.77]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.77]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.77]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.77]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.78]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.78]       Stack Trace:
[xUnit.net 00:00:01.78]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.78]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.78]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.78]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.78]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.78]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.78]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.78]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.78]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.78]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.78]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.78]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.79]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.79]       Stack Trace:
[xUnit.net 00:00:01.79]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.79]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.79]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.79]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.79]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.79]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.79]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.79]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.79]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.79]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.79]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.79]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.81]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.81]       Stack Trace:
[xUnit.net 00:00:01.81]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.81]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.81]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.81]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.81]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.81]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.81]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.81]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.81]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.81]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.81]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.81]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.83]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.83]       Stack Trace:
[xUnit.net 00:00:01.83]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.83]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.83]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.83]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.83]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.83]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.83]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.83]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.83]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.83]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.83]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.83]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.84]   Finished:    AccessToDB.Tests
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.5328940+03:00">
        <Text>[xUnit.net 00:00:01.23]     AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.5793533+03:00">
        <Text>[xUnit.net 00:00:01.27]     AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 171, LiftName = liftNamec737add2-ea63-48a1-9acc-58e161cfd5ea, IsOpen = True, SeatsAmount = 91, LiftingTime = 129, QueueTime = 116, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.5920917+03:00">
        <Text>[xUnit.net 00:00:01.29]     AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 254, LiftName = liftName69e1ac3f-2f97-4a7f-9c3a-07041a001e64, IsOpen = True, SeatsAmount = 169, LiftingTime = 82, QueueTime = 222, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.6028688+03:00">
        <Text>[xUnit.net 00:00:01.30]     AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 125, LiftName = liftName6405c6ca-0d0d-4af4-af24-fa3dee39d7e4, IsOpen = True, SeatsAmount = 149, LiftingTime = 7, QueueTime = 13, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.6130779+03:00">
        <Text>[xUnit.net 00:00:01.31]     AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 101) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.6260861+03:00">
        <Text>[xUnit.net 00:00:01.32]     AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.6418069+03:00">
        <Text>[xUnit.net 00:00:01.34]     AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: "liftNamee78be5be-d3a6-4df8-b2d5-7b49ff95bd9b") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.6673307+03:00">
        <Text>[xUnit.net 00:00:01.36]     AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 172, LiftID = 171, IsOpen = True }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.6805675+03:00">
        <Text>[xUnit.net 00:00:01.38]     AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.8275225+03:00">
        <Text>[xUnit.net 00:00:01.43]     AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 48) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.8276308+03:00">
        <Text>[xUnit.net 00:00:01.43]     AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 31, LiftID = 202, IsOpen = True }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.8279206+03:00">
        <Text>[xUnit.net 00:00:01.43]     AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 27, LiftID = 67, IsOpen = True }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.8283313+03:00">
        <Text>[xUnit.net 00:00:01.43]     AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.8285159+03:00">
        <Text>[xUnit.net 00:00:01.45]     AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 17) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.8293257+03:00">
        <Text>[xUnit.net 00:00:01.47]     AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 204, CardID = 57, UserEmail = UserEmail8d971d76-fd72-4e15-8bcd-fac4ec0ab1c1, Password = passwordaad3c93c-9d96-4450-a904-0432a34921e9, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.8295757+03:00">
        <Text>[xUnit.net 00:00:01.48]     AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 95, CardID = 230, UserEmail = UserEmail54ea1360-e520-441a-b929-bf134fbcfba8, Password = passwordfe14effe-6557-4c29-ba6f-1ea2b41366f9, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.8297095+03:00">
        <Text>[xUnit.net 00:00:01.50]     AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 173) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.8298298+03:00">
        <Text>[xUnit.net 00:00:01.51]     AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 34, CardID = 250, UserEmail = UserEmail161fb1e0-ab0f-4be4-b265-60756686ba14, Password = passwordc1d630ca-3659-4217-b264-e38dd0230f23, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.8356799+03:00">
        <Text>[xUnit.net 00:00:01.52]     AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.8486167+03:00">
        <Text>[xUnit.net 00:00:01.54]     AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 154, CardID = 227, UserEmail = UserEmail5fccd193-1b01-46e4-b0ed-ac5aa8d245b0, Password = passwordddb3a4d5-cc94-457f-bd98-17835bb4090c, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.8621303+03:00">
        <Text>[xUnit.net 00:00:01.56]     AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: "userEmailf7077af1-c462-4620-8008-108317f5d23c") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.8753864+03:00">
        <Text>[xUnit.net 00:00:01.57]     AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: "email8ead6b5e-9589-4775-92ea-2cce39914d51") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.8890461+03:00">
        <Text>[xUnit.net 00:00:01.58]     AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.9019172+03:00">
        <Text>[xUnit.net 00:00:01.60]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 95, LiftID = 44, SlopeID = 176 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.9148996+03:00">
        <Text>[xUnit.net 00:00:01.61]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 15) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.9279569+03:00">
        <Text>[xUnit.net 00:00:01.62]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 31, SlopeName = slopeName2746687b-5fab-4189-8b70-1222b45c35c8, IsOpen = True, DifficultyLevel = 44, ConnectedLifts =  }, slope2: Slope { SlopeID = 236, SlopeName = slopeNamee42b53f2-6e2d-44fa-b037-17ab5bf7a334, IsOpen = False, DifficultyLevel = 72, ConnectedLifts =  }, lift1: Lift { LiftID = 136, LiftName = liftName7ab65a9e-9b01-479d-90ac-b4058b5c7eda, IsOpen = True, SeatsAmount = 67, LiftingTime = 202, QueueTime = 158, ConnectedSlopes =  }, lift2: Lift { LiftID = 57, LiftName = liftName37f7ad0c-2d45-4867-a671-a3948629e4fb, IsOpen = False, SeatsAmount = 219, LiftingTime = 162, QueueTime = 12, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.9444613+03:00">
        <Text>[xUnit.net 00:00:01.64]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 131, LiftID = 235, SlopeID = 109 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.9656891+03:00">
        <Text>[xUnit.net 00:00:01.66]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 181, LiftID = 49, SlopeID = 11 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.9776435+03:00">
        <Text>[xUnit.net 00:00:01.67]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 17, LiftID = 171, SlopeID = 159 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:55.9939041+03:00">
        <Text>[xUnit.net 00:00:01.69]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 9, LiftID = 100, SlopeID = 242 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:56.0063050+03:00">
        <Text>[xUnit.net 00:00:01.70]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:56.0239780+03:00">
        <Text>[xUnit.net 00:00:01.72]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:56.0402268+03:00">
        <Text>[xUnit.net 00:00:01.74]     AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: "slopeNamef1f255dd-e403-4fb0-aa39-1335261b8486") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:56.0572133+03:00">
        <Text>[xUnit.net 00:00:01.75]     AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 196, SlopeName = slopeName71ef0f24-ac29-455f-9ddf-fdd6c7d9fa6c, IsOpen = True, DifficultyLevel = 152, ConnectedLifts =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:56.0700356+03:00">
        <Text>[xUnit.net 00:00:01.76]     AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 121, SlopeName = slopeNamea37ea55b-eed5-4711-b1d9-9d4979a5d2c4, IsOpen = True, DifficultyLevel = 111, ConnectedLifts =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:56.0837629+03:00">
        <Text>[xUnit.net 00:00:01.78]     AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 88, SlopeName = slopeName83d44b89-2dc8-4f81-a299-edaeba76e597, IsOpen = True, DifficultyLevel = 30, ConnectedLifts =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:56.1022130+03:00">
        <Text>[xUnit.net 00:00:01.79]     AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 251) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:56.1139471+03:00">
        <Text>[xUnit.net 00:00:01.81]     AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T14:02:56.1329609+03:00">
        <Text>[xUnit.net 00:00:01.83]     AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty [FAIL]</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>