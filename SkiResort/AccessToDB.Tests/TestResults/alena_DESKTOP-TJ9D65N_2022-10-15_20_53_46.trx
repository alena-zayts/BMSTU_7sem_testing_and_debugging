<?xml version="1.0" encoding="utf-8"?>
<TestRun id="5025f118-c538-46d6-9089-5cf1a1e258c4" name="alena@DESKTOP-TJ9D65N 2022-10-15 20:53:46" runUser="DESKTOP-TJ9D65N\alena" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2022-10-15T20:53:46.2309560+03:00" queuing="2022-10-15T20:53:46.2309561+03:00" start="2022-10-15T20:53:44.1844431+03:00" finish="2022-10-15T20:54:08.3199957+03:00" />
  <TestSettings name="default" id="f136d718-c2f3-4e27-84e8-a3e081794433">
    <Deployment runDeploymentRoot="alena_DESKTOP-TJ9D65N_2022-10-15_20_53_46" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="19bcacae-7de8-4a01-b23d-8690c3c8ebcb" testId="159b0ee2-ce0f-e9dd-22a1-cec885061fbe" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 230)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5651313" startTime="2022-10-15T20:53:58.1969096+03:00" endTime="2022-10-15T20:53:58.1969097+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="19bcacae-7de8-4a01-b23d-8690c3c8ebcb" />
    <UnitTestResult executionId="7fa9b2fa-15eb-4671-b7e9-63af10a51d01" testId="fae0ad8a-0dfc-690f-94fd-fe4814ee793b" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeName823c3cfe-c7c2-4abf-87c3-454364a4aea6&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5552520" startTime="2022-10-15T20:53:46.6597745+03:00" endTime="2022-10-15T20:53:46.6597747+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7fa9b2fa-15eb-4671-b7e9-63af10a51d01" />
    <UnitTestResult executionId="028c8af3-cc8d-4ca7-9e1b-486d125c86ef" testId="3c521313-4ed6-6bce-b4f9-c359411028e7" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5563576" startTime="2022-10-15T20:53:51.4405340+03:00" endTime="2022-10-15T20:53:51.4405354+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="028c8af3-cc8d-4ca7-9e1b-486d125c86ef" />
    <UnitTestResult executionId="87ae287c-1620-4eae-b8f7-3312d9e8877a" testId="ee4eef2d-4717-9445-0a19-0fe98bf2c278" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 103, LiftID = 90, SlopeID = 216 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6095397" startTime="2022-10-15T20:53:58.8098721+03:00" endTime="2022-10-15T20:53:58.8098724+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="87ae287c-1620-4eae-b8f7-3312d9e8877a" />
    <UnitTestResult executionId="c39a95d7-f38e-41af-85de-2c2377842a34" testId="8824faa7-ef8d-59e0-3f44-46b71d0f76c0" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 164, LiftID = 160, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5923349" startTime="2022-10-15T20:53:50.2508152+03:00" endTime="2022-10-15T20:53:50.2508158+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c39a95d7-f38e-41af-85de-2c2377842a34" />
    <UnitTestResult executionId="ac7780f2-7975-42fb-9374-2f92664ca4fc" testId="412011b9-dd32-fc5a-0081-17457995ccb4" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 201, LiftID = 103, SlopeID = 144 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5950299" startTime="2022-10-15T20:53:59.4093764+03:00" endTime="2022-10-15T20:53:59.4093765+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ac7780f2-7975-42fb-9374-2f92664ca4fc" />
    <UnitTestResult executionId="93f998fc-8f7e-4236-afe2-15eba7f31391" testId="f9435956-2e34-e52b-c34e-dce53665cf8e" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6125013" startTime="2022-10-15T20:53:52.0574388+03:00" endTime="2022-10-15T20:53:52.0574390+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="93f998fc-8f7e-4236-afe2-15eba7f31391" />
    <UnitTestResult executionId="b0e85f2e-37dc-4c8d-a47d-fa86dbb28c83" testId="876df17c-f2a8-46fe-cf9d-a0df64ab3060" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 186, LiftID = 204, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6179987" startTime="2022-10-15T20:53:50.8781097+03:00" endTime="2022-10-15T20:53:50.8781100+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b0e85f2e-37dc-4c8d-a47d-fa86dbb28c83" />
    <UnitTestResult executionId="4685dbc0-6268-4977-9938-4a3dcf34a526" testId="bf75cc58-5e74-c13c-bf33-aa9d95e29e2e" testName="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 33)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-10-15T20:54:04.0769422+03:00" endTime="2022-10-15T20:54:04.0769434+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4685dbc0-6268-4977-9938-4a3dcf34a526">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.</Message>
          <StackTrace>   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass24_0.&lt;TryGenerateConverterFromGenericConverter&gt;b__0(Type x)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
   at AccessToDB.RepositoriesTarantool.TarantoolUsersRepository.GetUsersAsync(UInt32 offset, UInt32 limit) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolUsersRepository.cs:line 35&#xD;
   at AccessToDB.Tests.UsersRepositoryTests.CleanUsersTable() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\UsersRepositoryTests.cs:line 40&#xD;
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\UsersRepositoryTests.cs:line 30&#xD;
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8785acfb-a8d9-4305-a618-f3c9dbde6032" testId="cecbf4c4-4b6d-79a9-b75f-b2cbe247dd40" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 195, SlopeName = slopeNamecb3f2155-8ad5-459b-9d7d-f8fc323d93c3, IsOpen = True, DifficultyLevel = 188, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5918904" startTime="2022-10-15T20:53:47.2645861+03:00" endTime="2022-10-15T20:53:47.2645862+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8785acfb-a8d9-4305-a618-f3c9dbde6032" />
    <UnitTestResult executionId="06aa353f-6102-4af5-8e53-9cc9f015bc7d" testId="7429c40b-7d59-8eeb-7753-b66ef09d41d3" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 5, SlopeName = slopeName4ef86e9d-e6b1-42e8-9f21-bd324b9d1e46, IsOpen = True, DifficultyLevel = 117, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6064658" startTime="2022-10-15T20:53:49.0688459+03:00" endTime="2022-10-15T20:53:49.0688462+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="06aa353f-6102-4af5-8e53-9cc9f015bc7d" />
    <UnitTestResult executionId="76d4e64d-3baa-44f3-9ed4-00f736d0eecc" testId="4948b53b-2024-47b1-3e8a-81f5e2f7fdf3" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 97)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5611196" startTime="2022-10-15T20:53:53.9859166+03:00" endTime="2022-10-15T20:53:53.9859167+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="76d4e64d-3baa-44f3-9ed4-00f736d0eecc" />
    <UnitTestResult executionId="baed3032-2013-48d8-881d-1a74e9fba004" testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6169119" startTime="2022-10-15T20:53:47.8846962+03:00" endTime="2022-10-15T20:53:47.8846963+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="baed3032-2013-48d8-881d-1a74e9fba004" />
    <UnitTestResult executionId="3c9ca153-a207-496d-b312-ab15e97580a5" testId="8eeb7a06-19ba-c41a-c855-cc31c3adf7a9" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 36, LiftID = 64, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6042947" startTime="2022-10-15T20:53:52.6674345+03:00" endTime="2022-10-15T20:53:52.6674346+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3c9ca153-a207-496d-b312-ab15e97580a5" />
    <UnitTestResult executionId="560f45c4-6056-4058-bafb-0221ba7f05f1" testId="a631187e-77cf-50d8-c4bb-f3eeb5983cb8" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 160, CardID = 143, UserEmail = UserEmailee33ae54-a0f1-492f-abc2-770b3a519f88, Password = passworde984498b-e5f3-42cf-ae9b-bc5463925ef8, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5947648" startTime="2022-10-15T20:54:01.7063541+03:00" endTime="2022-10-15T20:54:01.7063542+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="560f45c4-6056-4058-bafb-0221ba7f05f1" />
    <UnitTestResult executionId="9e14fe4e-d95d-4579-ab86-f43363d0936a" testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-10-15T20:53:57.0295660+03:00" endTime="2022-10-15T20:53:57.0295662+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9e14fe4e-d95d-4579-ab86-f43363d0936a">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.</Message>
          <StackTrace>   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
   at AccessToDB.RepositoriesTarantool.TarantoolLiftsSlopesRepository.GetLiftsSlopesAsync(UInt32 offset, UInt32 limit) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsSlopesRepository.cs:line 43&#xD;
   at AccessToDB.Tests.LiftsSlopesRepositoryTests.CleanLiftsSlopesTable() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs:line 48&#xD;
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs:line 38&#xD;
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="71c60d17-ac4a-46a8-9d49-20cb430f92e1" testId="3741b26d-6ee0-6246-29e4-92009bff37b0" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5667184" startTime="2022-10-15T20:54:00.5488066+03:00" endTime="2022-10-15T20:54:00.5488068+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="71c60d17-ac4a-46a8-9d49-20cb430f92e1" />
    <UnitTestResult executionId="b2c4c7a3-851d-4693-9a26-57430ddf9dd9" testId="45a705c5-af11-eb02-d6ab-2a3ec7ef56b7" testName="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 38, CardID = 8, UserEmail = UserEmail249a5ce2-f96a-414b-8032-29ae9cf13282, Password = passwordeddcac56-80fe-4c1e-996b-6ead4288e1ff, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6192847" startTime="2022-10-15T20:54:02.9544281+03:00" endTime="2022-10-15T20:54:02.9544282+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b2c4c7a3-851d-4693-9a26-57430ddf9dd9" />
    <UnitTestResult executionId="d5c84f6a-2e9f-4c9b-8b7e-2a2f37006645" testId="45f7d60f-7842-643a-5ca3-de0490d1b628" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 144, LiftName = liftName2541eed6-8edf-4052-b3e1-0bce7b214ccf, IsOpen = True, SeatsAmount = 179, LiftingTime = 5, QueueTime = 186, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-10-15T20:54:07.6462519+03:00" endTime="2022-10-15T20:54:07.6462520+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d5c84f6a-2e9f-4c9b-8b7e-2a2f37006645">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.</Message>
          <StackTrace>   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.Schema.Select[T](UInt32 spaceId, Iterator iterator, UInt32 id)&#xD;
   at ProGaudi.Tarantool.Client.Schema.Reload()&#xD;
   at ProGaudi.Tarantool.Client.Box.Connect()&#xD;
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)&#xD;
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs:line 52&#xD;
   at AccessToDB.TarantoolContext..ctor(String connection_string) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs:line 32&#xD;
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsRepositoryTests.cs:line 28&#xD;
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a18dd39c-c27a-4d96-a43b-0fabc9a04fa5" testId="ebb5d06a-55b9-622c-8b1c-636e32911492" testName="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 140, LiftName = liftName50c0c06f-ffd8-4fa8-b4b1-ff3320ae400a, IsOpen = True, SeatsAmount = 94, LiftingTime = 2, QueueTime = 109, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6010214" startTime="2022-10-15T20:54:07.5927049+03:00" endTime="2022-10-15T20:54:07.5927050+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a18dd39c-c27a-4d96-a43b-0fabc9a04fa5" />
    <UnitTestResult executionId="5c6a44fe-5adf-41ae-a6d7-9f5674df1b29" testId="ec229f70-485a-f91b-53ed-bce655f6cd58" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-10-15T20:54:05.2472616+03:00" endTime="2022-10-15T20:54:05.2472619+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5c6a44fe-5adf-41ae-a6d7-9f5674df1b29">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.</Message>
          <StackTrace>   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
   at AccessToDB.RepositoriesTarantool.TarantoolLiftsRepository.GetLiftsAsync(UInt32 offset, UInt32 limit) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsRepository.cs:line 35&#xD;
   at AccessToDB.Tests.LiftsRepositoryTests.CleanLiftsTable() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsRepositoryTests.cs:line 40&#xD;
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsRepositoryTests.cs:line 30&#xD;
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8cb83e08-5c3e-4464-91a4-15f2e0b56fd4" testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6227646" startTime="2022-10-15T20:54:04.7011702+03:00" endTime="2022-10-15T20:54:04.7011702+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8cb83e08-5c3e-4464-91a4-15f2e0b56fd4" />
    <UnitTestResult executionId="005b6942-8cc4-4a36-81cc-239452403d19" testId="ecea8a61-b0e7-3512-1aec-9f97682add15" testName="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 95)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5675746" startTime="2022-10-15T20:54:06.4203605+03:00" endTime="2022-10-15T20:54:06.4203606+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="005b6942-8cc4-4a36-81cc-239452403d19" />
    <UnitTestResult executionId="0afca5d6-bffd-4b32-b21b-15f5cfd11524" testId="3992f11a-e8c4-1312-f3b3-d24f73702171" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 153, SlopeName = slopeNamee9713b72-5dbe-4805-91ec-6c0d5fef93cf, IsOpen = True, DifficultyLevel = 167, ConnectedLifts =  }, slope2: Slope { SlopeID = 216, SlopeName = slopeNamecf034d83-08af-403a-af1c-589b05cb2a99, IsOpen = False, DifficultyLevel = 191, ConnectedLifts =  }, lift1: Lift { LiftID = 132, LiftName = liftNamed8c5b32b-df16-44f3-853e-4a20ad702300, IsOpen = True, SeatsAmount = 224, LiftingTime = 193, QueueTime = 243, ConnectedSlopes =  }, lift2: Lift { LiftID = 32, LiftName = liftName00b2ecac-e94c-4721-9f94-8f07677c47a3, IsOpen = False, SeatsAmount = 192, LiftingTime = 151, QueueTime = 254, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6506078" startTime="2022-10-15T20:53:55.8547258+03:00" endTime="2022-10-15T20:53:55.8547260+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0afca5d6-bffd-4b32-b21b-15f5cfd11524" />
    <UnitTestResult executionId="aaa7c5a8-26bd-4f0c-97c4-8bd190cfa31e" testId="607e8298-f113-be33-300e-15a343893443" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5551111" startTime="2022-10-15T20:54:08.2020345+03:00" endTime="2022-10-15T20:54:08.2020347+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="aaa7c5a8-26bd-4f0c-97c4-8bd190cfa31e" />
    <UnitTestResult executionId="b024744a-fd3b-4144-a095-d0b55c7fc035" testId="bbfd3dc5-bbeb-a260-c10b-52c7e432b9e3" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 238, CardID = 114, UserEmail = UserEmail8381a3eb-703c-4f12-8853-7fa5062b7f15, Password = password0d4cadab-c803-45ab-ad73-6362181649d2, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6130800" startTime="2022-10-15T20:54:02.3241804+03:00" endTime="2022-10-15T20:54:02.3241812+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b024744a-fd3b-4144-a095-d0b55c7fc035" />
    <UnitTestResult executionId="5464a937-1490-4c49-b73b-aa33260308b3" testId="f0e529b6-9080-fc34-32d7-527225fbcc7c" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;email309c3057-62e5-4328-a2c5-ab28fcc3d4ab&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5669516" startTime="2022-10-15T20:53:59.9792043+03:00" endTime="2022-10-15T20:53:59.9792045+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5464a937-1490-4c49-b73b-aa33260308b3" />
    <UnitTestResult executionId="55c26afa-7ff2-420c-96d8-a91d1d1c87fd" testId="a4182ae1-f5e1-bcb9-1232-025507e362ec" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftNamec1c787ef-6aa8-4d5e-989f-227ea2cf15db&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5654638" startTime="2022-10-15T20:54:06.9884439+03:00" endTime="2022-10-15T20:54:06.9884441+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="55c26afa-7ff2-420c-96d8-a91d1d1c87fd" />
    <UnitTestResult executionId="1cbec542-d1de-4a75-90e0-18662e2e2980" testId="1dfbdfb3-e1ca-16e5-c989-239c56b51265" testName="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 103, SlopeName = slopeName4ed1180e-6068-4b37-b0b1-a48809da7b70, IsOpen = True, DifficultyLevel = 98, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6723152" startTime="2022-10-15T20:53:46.0805516+03:00" endTime="2022-10-15T20:53:46.0805755+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1cbec542-d1de-4a75-90e0-18662e2e2980" />
    <UnitTestResult executionId="bc636c81-3ffc-4fd2-86c5-89675dd4a8fe" testId="c9234463-4ac0-9ee5-a2fd-7ab9ecb1eb94" testName="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 148)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5624555" startTime="2022-10-15T20:53:49.6347502+03:00" endTime="2022-10-15T20:53:49.6347503+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bc636c81-3ffc-4fd2-86c5-89675dd4a8fe" />
    <UnitTestResult executionId="9c8097a2-02e3-45b4-8e22-aba1439a0d8f" testId="9b471295-82ef-51ac-0864-ca927773607a" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 32, CardID = 237, UserEmail = UserEmail5932fe71-1901-448b-b8b9-69d88965ca5c, Password = password497acc82-47e2-4331-9419-240e8efaef0e, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5932809" startTime="2022-10-15T20:54:03.5513689+03:00" endTime="2022-10-15T20:54:03.5513693+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9c8097a2-02e3-45b4-8e22-aba1439a0d8f" />
    <UnitTestResult executionId="a27dbdf1-0ecc-4a64-9424-880ca7277b91" testId="30f8e924-9784-0a43-e807-094f70e06567" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6128314" startTime="2022-10-15T20:53:56.4714573+03:00" endTime="2022-10-15T20:53:56.4714576+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a27dbdf1-0ecc-4a64-9424-880ca7277b91" />
    <UnitTestResult executionId="60580a68-7cdb-4900-ba1f-7c62247206c4" testId="91d2ce2e-a15d-a6c1-94bb-c506f5a5bcf2" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 41)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.7508675" startTime="2022-10-15T20:53:53.4218906+03:00" endTime="2022-10-15T20:53:53.4218907+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="60580a68-7cdb-4900-ba1f-7c62247206c4" />
    <UnitTestResult executionId="9d57f9f0-c0df-41d9-98cf-94b4189bb2e0" testId="e0e5c9f1-5b88-793c-e573-ad0d754b9879" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 24, LiftID = 103, SlopeID = 155 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6129783" startTime="2022-10-15T20:53:54.6025841+03:00" endTime="2022-10-15T20:53:54.6025842+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9d57f9f0-c0df-41d9-98cf-94b4189bb2e0" />
    <UnitTestResult executionId="178f6353-a3dc-463a-870e-d88402cfd2f4" testId="9bbefb83-8311-6e03-307f-415e3495e223" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5698250" startTime="2022-10-15T20:53:48.4582616+03:00" endTime="2022-10-15T20:53:48.4582617+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="178f6353-a3dc-463a-870e-d88402cfd2f4" />
    <UnitTestResult executionId="968aecb3-16e7-40ce-8366-ad2d7f99695f" testId="1440b83b-b94f-792f-d879-abf3427c12b4" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 222, LiftName = liftName24bb53cc-7d86-475d-beae-91876d7c1dfd, IsOpen = True, SeatsAmount = 253, LiftingTime = 200, QueueTime = 101, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6018494" startTime="2022-10-15T20:54:05.8495421+03:00" endTime="2022-10-15T20:54:05.8495424+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="968aecb3-16e7-40ce-8366-ad2d7f99695f" />
    <UnitTestResult executionId="5e7e62d8-832f-4a44-ad2d-0d02effdabed" testId="92f2382f-b142-e552-deff-0c960c21a20a" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 139, LiftID = 243, SlopeID = 21 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5932069" startTime="2022-10-15T20:53:55.1986218+03:00" endTime="2022-10-15T20:53:55.1986220+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5e7e62d8-832f-4a44-ad2d-0d02effdabed" />
    <UnitTestResult executionId="2c0c1395-0ef1-469d-b2ce-c7a613bd1d44" testId="6f6457b0-49b1-26a3-d973-596b9db58465" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 230, LiftID = 224, SlopeID = 146 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6078203" startTime="2022-10-15T20:53:57.6288045+03:00" endTime="2022-10-15T20:53:57.6288046+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2c0c1395-0ef1-469d-b2ce-c7a613bd1d44" />
    <UnitTestResult executionId="5da33982-a3fa-4232-b3e6-6f16b0a4e228" testId="c41ec0af-696d-f194-0caa-c7b62de4feca" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmailc416161c-47fa-4fbd-afe4-22b4f8633029&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5548939" startTime="2022-10-15T20:54:01.1079298+03:00" endTime="2022-10-15T20:54:01.1079299+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5da33982-a3fa-4232-b3e6-6f16b0a4e228" />
  </Results>
  <TestDefinitions>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 103, LiftID = 90, SlopeID = 216 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="ee4eef2d-4717-9445-0a19-0fe98bf2c278">
      <Execution id="87ae287c-1620-4eae-b8f7-3312d9e8877a" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestUpdateLiftSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="3741b26d-6ee0-6246-29e4-92009bff37b0">
      <Execution id="71c60d17-ac4a-46a8-9d49-20cb430f92e1" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUsersAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmailc416161c-47fa-4fbd-afe4-22b4f8633029&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="c41ec0af-696d-f194-0caa-c7b62de4feca">
      <Execution id="5da33982-a3fa-4232-b3e6-6f16b0a4e228" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserEmailExistsAsyncFalse" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftNamec1c787ef-6aa8-4d5e-989f-227ea2cf15db&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="a4182ae1-f5e1-bcb9-1232-025507e362ec">
      <Execution id="55c26afa-7ff2-420c-96d8-a91d1d1c87fd" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 36, LiftID = 64, IsOpen = True })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="8eeb7a06-19ba-c41a-c855-cc31c3adf7a9">
      <Execution id="3c9ca153-a207-496d-b312-ab15e97580a5" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestUpdateTurnstileByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 33)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="bf75cc58-5e74-c13c-bf33-aa9d95e29e2e">
      <Execution id="4685dbc0-6268-4977-9938-4a3dcf34a526" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestDeleteUserByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="f9435956-2e34-e52b-c34e-dce53665cf8e">
      <Execution id="93f998fc-8f7e-4236-afe2-15eba7f31391" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 38, CardID = 8, UserEmail = UserEmail249a5ce2-f96a-414b-8032-29ae9cf13282, Password = passwordeddcac56-80fe-4c1e-996b-6ead4288e1ff, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="45a705c5-af11-eb02-d6ab-2a3ec7ef56b7">
      <Execution id="b2c4c7a3-851d-4693-9a26-57430ddf9dd9" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestUpdateUserByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 160, CardID = 143, UserEmail = UserEmailee33ae54-a0f1-492f-abc2-770b3a519f88, Password = passworde984498b-e5f3-42cf-ae9b-bc5463925ef8, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="a631187e-77cf-50d8-c4bb-f3eeb5983cb8">
      <Execution id="560f45c4-6056-4058-bafb-0221ba7f05f1" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserIdExistsAsyncTrue" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 230, LiftID = 224, SlopeID = 146 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="6f6457b0-49b1-26a3-d973-596b9db58465">
      <Execution id="2c0c1395-0ef1-469d-b2ce-c7a613bd1d44" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 164, LiftID = 160, IsOpen = True })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="8824faa7-ef8d-59e0-3f44-46b71d0f76c0">
      <Execution id="c39a95d7-f38e-41af-85de-2c2377842a34" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstileByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 139, LiftID = 243, SlopeID = 21 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="92f2382f-b142-e552-deff-0c960c21a20a">
      <Execution id="5e7e62d8-832f-4a44-ad2d-0d02effdabed" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="4145f44e-b4b1-a618-09e8-c631496e6f1a">
      <Execution id="9e14fe4e-d95d-4579-ab86-f43363d0936a" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 238, CardID = 114, UserEmail = UserEmail8381a3eb-703c-4f12-8853-7fa5062b7f15, Password = password0d4cadab-c803-45ab-ad73-6362181649d2, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="bbfd3dc5-bbeb-a260-c10b-52c7e432b9e3">
      <Execution id="b024744a-fd3b-4144-a095-d0b55c7fc035" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAsyncFailsWhenUserIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 186, LiftID = 204, IsOpen = True })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="876df17c-f2a8-46fe-cf9d-a0df64ab3060">
      <Execution id="b0e85f2e-37dc-4c8d-a47d-fa86dbb28c83" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 148)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="c9234463-4ac0-9ee5-a2fd-7ab9ecb1eb94">
      <Execution id="bc636c81-3ffc-4fd2-86c5-89675dd4a8fe" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestDeleteSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;email309c3057-62e5-4328-a2c5-ab28fcc3d4ab&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="f0e529b6-9080-fc34-32d7-527225fbcc7c">
      <Execution id="5464a937-1490-4c49-b73b-aa33260308b3" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByEmailAsyncFailsWhenEmailNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 222, LiftName = liftName24bb53cc-7d86-475d-beae-91876d7c1dfd, IsOpen = True, SeatsAmount = 253, LiftingTime = 200, QueueTime = 101, ConnectedSlopes =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="1440b83b-b94f-792f-d879-abf3427c12b4">
      <Execution id="968aecb3-16e7-40ce-8366-ad2d7f99695f" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAsyncFailsWhenLiftIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="9bbefb83-8311-6e03-307f-415e3495e223">
      <Execution id="178f6353-a3dc-463a-870e-d88402cfd2f4" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="ec229f70-485a-f91b-53ed-bce655f6cd58">
      <Execution id="5c6a44fe-5adf-41ae-a6d7-9f5674df1b29" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="3c521313-4ed6-6bce-b4f9-c359411028e7">
      <Execution id="028c8af3-cc8d-4ca7-9e1b-486d125c86ef" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 195, SlopeName = slopeNamecb3f2155-8ad5-459b-9d7d-f8fc323d93c3, IsOpen = True, DifficultyLevel = 188, ConnectedLifts =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="cecbf4c4-4b6d-79a9-b75f-b2cbe247dd40">
      <Execution id="8785acfb-a8d9-4305-a618-f3c9dbde6032" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="30f8e924-9784-0a43-e807-094f70e06567">
      <Execution id="a27dbdf1-0ecc-4a64-9424-880ca7277b91" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 230)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="159b0ee2-ce0f-e9dd-22a1-cec885061fbe">
      <Execution id="19bcacae-7de8-4a01-b23d-8690c3c8ebcb" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 24, LiftID = 103, SlopeID = 155 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="e0e5c9f1-5b88-793c-e573-ad0d754b9879">
      <Execution id="9d57f9f0-c0df-41d9-98cf-94b4189bb2e0" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopesByIDsAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 153, SlopeName = slopeNamee9713b72-5dbe-4805-91ec-6c0d5fef93cf, IsOpen = True, DifficultyLevel = 167, ConnectedLifts =  }, slope2: Slope { SlopeID = 216, SlopeName = slopeNamecf034d83-08af-403a-af1c-589b05cb2a99, IsOpen = False, DifficultyLevel = 191, ConnectedLifts =  }, lift1: Lift { LiftID = 132, LiftName = liftNamed8c5b32b-df16-44f3-853e-4..." storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="3992f11a-e8c4-1312-f3b3-d24f73702171">
      <Execution id="0afca5d6-bffd-4b32-b21b-15f5cfd11524" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftsBySlopeIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 32, CardID = 237, UserEmail = UserEmail5932fe71-1901-448b-b8b9-69d88965ca5c, Password = password497acc82-47e2-4331-9419-240e8efaef0e, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="9b471295-82ef-51ac-0864-ca927773607a">
      <Execution id="9c8097a2-02e3-45b4-8e22-aba1439a0d8f" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e">
      <Execution id="8cb83e08-5c3e-4464-91a4-15f2e0b56fd4" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeName823c3cfe-c7c2-4abf-87c3-454364a4aea6&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="fae0ad8a-0dfc-690f-94fd-fe4814ee793b">
      <Execution id="7fa9b2fa-15eb-4671-b7e9-63af10a51d01" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="8f7ba917-f771-0dc5-f9b9-465c34344b12">
      <Execution id="baed3032-2013-48d8-881d-1a74e9fba004" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 95)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="ecea8a61-b0e7-3512-1aec-9f97682add15">
      <Execution id="005b6942-8cc4-4a36-81cc-239452403d19" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestDeleteLiftByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 103, SlopeName = slopeName4ed1180e-6068-4b37-b0b1-a48809da7b70, IsOpen = True, DifficultyLevel = 98, ConnectedLifts =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="1dfbdfb3-e1ca-16e5-c989-239c56b51265">
      <Execution id="1cbec542-d1de-4a75-90e0-18662e2e2980" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestUpdateSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 5, SlopeName = slopeName4ef86e9d-e6b1-42e8-9f21-bd324b9d1e46, IsOpen = True, DifficultyLevel = 117, ConnectedLifts =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="7429c40b-7d59-8eeb-7753-b66ef09d41d3">
      <Execution id="06aa353f-6102-4af5-8e53-9cc9f015bc7d" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAsyncFailsWhenSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 144, LiftName = liftName2541eed6-8edf-4052-b3e1-0bce7b214ccf, IsOpen = True, SeatsAmount = 179, LiftingTime = 5, QueueTime = 186, ConnectedSlopes =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="45f7d60f-7842-643a-5ca3-de0490d1b628">
      <Execution id="d5c84f6a-2e9f-4c9b-8b7e-2a2f37006645" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="607e8298-f113-be33-300e-15a343893443">
      <Execution id="aaa7c5a8-26bd-4f0c-97c4-8bd190cfa31e" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftsAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 201, LiftID = 103, SlopeID = 144 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="412011b9-dd32-fc5a-0081-17457995ccb4">
      <Execution id="ac7780f2-7975-42fb-9374-2f92664ca4fc" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 97)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="4948b53b-2024-47b1-3e8a-81f5e2f7fdf3">
      <Execution id="76d4e64d-3baa-44f3-9ed4-00f736d0eecc" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 41)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="91d2ce2e-a15d-a6c1-94bb-c506f5a5bcf2">
      <Execution id="60580a68-7cdb-4900-ba1f-7c62247206c4" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesByLiftIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 140, LiftName = liftName50c0c06f-ffd8-4fa8-b4b1-ff3320ae400a, IsOpen = True, SeatsAmount = 94, LiftingTime = 2, QueueTime = 109, ConnectedSlopes =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="ebb5d06a-55b9-622c-8b1c-636e32911492">
      <Execution id="a18dd39c-c27a-4d96-a43b-0fabc9a04fa5" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestUpdateLiftByIDAsyncOk" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="159b0ee2-ce0f-e9dd-22a1-cec885061fbe" executionId="19bcacae-7de8-4a01-b23d-8690c3c8ebcb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fae0ad8a-0dfc-690f-94fd-fe4814ee793b" executionId="7fa9b2fa-15eb-4671-b7e9-63af10a51d01" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3c521313-4ed6-6bce-b4f9-c359411028e7" executionId="028c8af3-cc8d-4ca7-9e1b-486d125c86ef" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ee4eef2d-4717-9445-0a19-0fe98bf2c278" executionId="87ae287c-1620-4eae-b8f7-3312d9e8877a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8824faa7-ef8d-59e0-3f44-46b71d0f76c0" executionId="c39a95d7-f38e-41af-85de-2c2377842a34" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="412011b9-dd32-fc5a-0081-17457995ccb4" executionId="ac7780f2-7975-42fb-9374-2f92664ca4fc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f9435956-2e34-e52b-c34e-dce53665cf8e" executionId="93f998fc-8f7e-4236-afe2-15eba7f31391" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="876df17c-f2a8-46fe-cf9d-a0df64ab3060" executionId="b0e85f2e-37dc-4c8d-a47d-fa86dbb28c83" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bf75cc58-5e74-c13c-bf33-aa9d95e29e2e" executionId="4685dbc0-6268-4977-9938-4a3dcf34a526" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cecbf4c4-4b6d-79a9-b75f-b2cbe247dd40" executionId="8785acfb-a8d9-4305-a618-f3c9dbde6032" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7429c40b-7d59-8eeb-7753-b66ef09d41d3" executionId="06aa353f-6102-4af5-8e53-9cc9f015bc7d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4948b53b-2024-47b1-3e8a-81f5e2f7fdf3" executionId="76d4e64d-3baa-44f3-9ed4-00f736d0eecc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" executionId="baed3032-2013-48d8-881d-1a74e9fba004" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8eeb7a06-19ba-c41a-c855-cc31c3adf7a9" executionId="3c9ca153-a207-496d-b312-ab15e97580a5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a631187e-77cf-50d8-c4bb-f3eeb5983cb8" executionId="560f45c4-6056-4058-bafb-0221ba7f05f1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" executionId="9e14fe4e-d95d-4579-ab86-f43363d0936a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3741b26d-6ee0-6246-29e4-92009bff37b0" executionId="71c60d17-ac4a-46a8-9d49-20cb430f92e1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="45a705c5-af11-eb02-d6ab-2a3ec7ef56b7" executionId="b2c4c7a3-851d-4693-9a26-57430ddf9dd9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="45f7d60f-7842-643a-5ca3-de0490d1b628" executionId="d5c84f6a-2e9f-4c9b-8b7e-2a2f37006645" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ebb5d06a-55b9-622c-8b1c-636e32911492" executionId="a18dd39c-c27a-4d96-a43b-0fabc9a04fa5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ec229f70-485a-f91b-53ed-bce655f6cd58" executionId="5c6a44fe-5adf-41ae-a6d7-9f5674df1b29" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" executionId="8cb83e08-5c3e-4464-91a4-15f2e0b56fd4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ecea8a61-b0e7-3512-1aec-9f97682add15" executionId="005b6942-8cc4-4a36-81cc-239452403d19" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3992f11a-e8c4-1312-f3b3-d24f73702171" executionId="0afca5d6-bffd-4b32-b21b-15f5cfd11524" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="607e8298-f113-be33-300e-15a343893443" executionId="aaa7c5a8-26bd-4f0c-97c4-8bd190cfa31e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bbfd3dc5-bbeb-a260-c10b-52c7e432b9e3" executionId="b024744a-fd3b-4144-a095-d0b55c7fc035" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f0e529b6-9080-fc34-32d7-527225fbcc7c" executionId="5464a937-1490-4c49-b73b-aa33260308b3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a4182ae1-f5e1-bcb9-1232-025507e362ec" executionId="55c26afa-7ff2-420c-96d8-a91d1d1c87fd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1dfbdfb3-e1ca-16e5-c989-239c56b51265" executionId="1cbec542-d1de-4a75-90e0-18662e2e2980" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c9234463-4ac0-9ee5-a2fd-7ab9ecb1eb94" executionId="bc636c81-3ffc-4fd2-86c5-89675dd4a8fe" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9b471295-82ef-51ac-0864-ca927773607a" executionId="9c8097a2-02e3-45b4-8e22-aba1439a0d8f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30f8e924-9784-0a43-e807-094f70e06567" executionId="a27dbdf1-0ecc-4a64-9424-880ca7277b91" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="91d2ce2e-a15d-a6c1-94bb-c506f5a5bcf2" executionId="60580a68-7cdb-4900-ba1f-7c62247206c4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e0e5c9f1-5b88-793c-e573-ad0d754b9879" executionId="9d57f9f0-c0df-41d9-98cf-94b4189bb2e0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9bbefb83-8311-6e03-307f-415e3495e223" executionId="178f6353-a3dc-463a-870e-d88402cfd2f4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1440b83b-b94f-792f-d879-abf3427c12b4" executionId="968aecb3-16e7-40ce-8366-ad2d7f99695f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="92f2382f-b142-e552-deff-0c960c21a20a" executionId="5e7e62d8-832f-4a44-ad2d-0d02effdabed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6f6457b0-49b1-26a3-d973-596b9db58465" executionId="2c0c1395-0ef1-469d-b2ce-c7a613bd1d44" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c41ec0af-696d-f194-0caa-c7b62de4feca" executionId="5da33982-a3fa-4232-b3e6-6f16b0a4e228" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Список результатов" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="Все загруженные результаты" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="39" executed="39" passed="35" failed="4" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.5+1caef2f33e (64-bit .NET 6.0.3)&#xD;
[xUnit.net 00:00:00.48]   Discovering: AccessToDB.Tests&#xD;
[xUnit.net 00:00:00.59]   Discovered:  AccessToDB.Tests&#xD;
[xUnit.net 00:00:00.59]   Starting:    AccessToDB.Tests&#xD;
[xUnit.net 00:00:12.29]       System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
[xUnit.net 00:00:12.29]       Stack Trace:&#xD;
[xUnit.net 00:00:12.29]            at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
[xUnit.net 00:00:12.29]            at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
[xUnit.net 00:00:12.29]            at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
[xUnit.net 00:00:12.29]            at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
[xUnit.net 00:00:12.29]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
[xUnit.net 00:00:12.29]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:12.29]            at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
[xUnit.net 00:00:12.29]            at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
[xUnit.net 00:00:12.29]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
[xUnit.net 00:00:12.29]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:12.29]            at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
[xUnit.net 00:00:12.29]            at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
[xUnit.net 00:00:12.29]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:12.29]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:12.29]            at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
[xUnit.net 00:00:12.29]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsSlopesRepository.cs(43,0): at AccessToDB.RepositoriesTarantool.TarantoolLiftsSlopesRepository.GetLiftsSlopesAsync(UInt32 offset, UInt32 limit)&#xD;
[xUnit.net 00:00:12.29]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs(48,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests.CleanLiftsSlopesTable()&#xD;
[xUnit.net 00:00:12.30]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs(38,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()&#xD;
[xUnit.net 00:00:12.30]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)&#xD;
[xUnit.net 00:00:19.34]       System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
[xUnit.net 00:00:19.34]       Stack Trace:&#xD;
[xUnit.net 00:00:19.34]            at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
[xUnit.net 00:00:19.34]            at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
[xUnit.net 00:00:19.34]            at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
[xUnit.net 00:00:19.34]            at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass24_0.&lt;TryGenerateConverterFromGenericConverter&gt;b__0(Type x)&#xD;
[xUnit.net 00:00:19.34]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
[xUnit.net 00:00:19.34]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:19.34]            at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
[xUnit.net 00:00:19.34]            at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
[xUnit.net 00:00:19.34]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:19.34]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:19.34]            at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
[xUnit.net 00:00:19.34]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolUsersRepository.cs(35,0): at AccessToDB.RepositoriesTarantool.TarantoolUsersRepository.GetUsersAsync(UInt32 offset, UInt32 limit)&#xD;
[xUnit.net 00:00:19.34]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\UsersRepositoryTests.cs(40,0): at AccessToDB.Tests.UsersRepositoryTests.CleanUsersTable()&#xD;
[xUnit.net 00:00:19.34]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\UsersRepositoryTests.cs(30,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()&#xD;
[xUnit.net 00:00:19.34]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)&#xD;
[xUnit.net 00:00:20.51]       System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
[xUnit.net 00:00:20.51]       Stack Trace:&#xD;
[xUnit.net 00:00:20.51]            at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
[xUnit.net 00:00:20.51]            at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
[xUnit.net 00:00:20.51]            at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
[xUnit.net 00:00:20.51]            at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
[xUnit.net 00:00:20.51]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
[xUnit.net 00:00:20.51]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:20.51]            at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
[xUnit.net 00:00:20.51]            at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
[xUnit.net 00:00:20.51]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
[xUnit.net 00:00:20.51]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:20.51]            at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
[xUnit.net 00:00:20.51]            at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
[xUnit.net 00:00:20.51]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:20.51]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:20.51]            at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
[xUnit.net 00:00:20.51]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsRepository.cs(35,0): at AccessToDB.RepositoriesTarantool.TarantoolLiftsRepository.GetLiftsAsync(UInt32 offset, UInt32 limit)&#xD;
[xUnit.net 00:00:20.51]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsRepositoryTests.cs(40,0): at AccessToDB.Tests.LiftsRepositoryTests.CleanLiftsTable()&#xD;
[xUnit.net 00:00:20.51]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsRepositoryTests.cs(30,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()&#xD;
[xUnit.net 00:00:20.51]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)&#xD;
[xUnit.net 00:00:22.91]       System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
[xUnit.net 00:00:22.91]       Stack Trace:&#xD;
[xUnit.net 00:00:22.91]            at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
[xUnit.net 00:00:22.91]            at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.Tarantool.Client.Schema.Select[T](UInt32 spaceId, Iterator iterator, UInt32 id)&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.Tarantool.Client.Schema.Reload()&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.Tarantool.Client.Box.Connect()&#xD;
[xUnit.net 00:00:22.91]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)&#xD;
[xUnit.net 00:00:22.91]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs(52,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)&#xD;
[xUnit.net 00:00:22.91]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)&#xD;
[xUnit.net 00:00:22.91]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()&#xD;
[xUnit.net 00:00:22.91]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)&#xD;
[xUnit.net 00:00:23.47]   Finished:    AccessToDB.Tests&#xD;
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-10-15T20:53:57.0235964+03:00">
        <Text>[xUnit.net 00:00:12.29]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-10-15T20:54:04.0749180+03:00">
        <Text>[xUnit.net 00:00:19.34]     AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 33) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-10-15T20:54:05.2404130+03:00">
        <Text>[xUnit.net 00:00:20.51]     AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-10-15T20:54:07.6435382+03:00">
        <Text>[xUnit.net 00:00:22.91]     AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 144, LiftName = liftName2541eed6-8edf-4052-b3e1-0bce7b214ccf, IsOpen = True, SeatsAmount = 179, LiftingTime = 5, QueueTime = 186, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>