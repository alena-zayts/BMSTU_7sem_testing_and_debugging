<?xml version="1.0" encoding="utf-8"?>
<TestRun id="d7f47ab8-4324-47ff-a77e-17ac15ed796f" name="alena@DESKTOP-TJ9D65N 2022-10-15 22:10:15" runUser="DESKTOP-TJ9D65N\alena" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2022-10-15T22:10:15.5116188+03:00" queuing="2022-10-15T22:10:15.5116192+03:00" start="2022-10-15T22:10:13.4245349+03:00" finish="2022-10-15T22:10:38.2070551+03:00" />
  <TestSettings name="default" id="e0708a67-c229-48b1-9f5c-f6e918872e5d">
    <Deployment runDeploymentRoot="alena_DESKTOP-TJ9D65N_2022-10-15_22_10_15" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="15696b32-9d74-4413-987b-7a8436b51570" testId="30affd05-1bf9-b636-87fe-8c81f75b7336" testName="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 20, CardID = 37, UserEmail = UserEmail3ef67921-5221-4a68-a042-196b001e8baf, Password = passworde3767483-dc77-431c-8db4-2d41775a390a, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6047947" startTime="2022-10-15T22:10:18.3730710+03:00" endTime="2022-10-15T22:10:18.3730714+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="15696b32-9d74-4413-987b-7a8436b51570" />
    <UnitTestResult executionId="e31916e0-1adf-4fdf-a50f-7a08b7f0598e" testId="30f8e924-9784-0a43-e807-094f70e06567" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6200544" startTime="2022-10-15T22:10:23.9191746+03:00" endTime="2022-10-15T22:10:23.9191748+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e31916e0-1adf-4fdf-a50f-7a08b7f0598e" />
    <UnitTestResult executionId="cce3d31e-1a9d-4e18-9e40-13784cae02d5" testId="3741b26d-6ee0-6246-29e4-92009bff37b0" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6012621" startTime="2022-10-15T22:10:15.4066963+03:00" endTime="2022-10-15T22:10:15.4067454+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cce3d31e-1a9d-4e18-9e40-13784cae02d5" />
    <UnitTestResult executionId="d0ff84db-8ab8-49a6-8ff7-72132957b08a" testId="e174a345-cd10-3cfc-e7f6-053183491275" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 243, LiftID = 171, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6206847" startTime="2022-10-15T22:10:34.0617188+03:00" endTime="2022-10-15T22:10:34.0617189+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d0ff84db-8ab8-49a6-8ff7-72132957b08a" />
    <UnitTestResult executionId="65205587-1644-4ae1-99fd-331c17e5e6fe" testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6088219" startTime="2022-10-15T22:10:26.7537169+03:00" endTime="2022-10-15T22:10:26.7537173+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="65205587-1644-4ae1-99fd-331c17e5e6fe" />
    <UnitTestResult executionId="04af0f29-9ad0-4b4d-ac8a-fe83c2b00d55" testId="1795a62d-c74a-5c1a-dccd-2d302099c4d3" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeNamef454b29f-9a98-41ab-a985-58f36ac9f72e&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5537214" startTime="2022-10-15T22:10:27.3163240+03:00" endTime="2022-10-15T22:10:27.3163243+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="04af0f29-9ad0-4b4d-ac8a-fe83c2b00d55" />
    <UnitTestResult executionId="0c9d329d-ed65-45bd-83a4-ac1da48bd14e" testId="06060362-b95d-9f22-0555-d80e04638e3c" testName="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 25, SlopeName = slopeName547d3614-f488-4f7c-bd79-c8e4fc07318f, IsOpen = True, DifficultyLevel = 122, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6053446" startTime="2022-10-15T22:10:29.1060092+03:00" endTime="2022-10-15T22:10:29.1060094+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0c9d329d-ed65-45bd-83a4-ac1da48bd14e" />
    <UnitTestResult executionId="c7783e81-cb8d-4e62-9b74-39e3433a5143" testId="40642f53-515e-f725-0829-db4d0776c076" testName="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 120)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5631216" startTime="2022-10-15T22:10:26.1419678+03:00" endTime="2022-10-15T22:10:26.1419679+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c7783e81-cb8d-4e62-9b74-39e3433a5143" />
    <UnitTestResult executionId="a481dd25-2509-49eb-8d2e-50bf553ced8e" testId="1669408f-c70b-d562-5f06-5eb8d0c3537b" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;emaildb9304a3-e515-43b1-a3e1-6bf5d0b1f5fa&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5684988" startTime="2022-10-15T22:10:16.0304522+03:00" endTime="2022-10-15T22:10:16.0304525+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a481dd25-2509-49eb-8d2e-50bf553ced8e" />
    <UnitTestResult executionId="a5078578-7d80-4b88-b0f9-e1eb1e0041db" testId="c192d81b-01f3-18b2-24a7-010fbf195413" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 211, LiftID = 39, SlopeID = 213 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-10-15T22:10:22.6900567+03:00" endTime="2022-10-15T22:10:22.6900571+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a5078578-7d80-4b88-b0f9-e1eb1e0041db">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.</Message>
          <StackTrace>   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
   at AccessToDB.RepositoriesTarantool.TarantoolLiftsSlopesRepository.GetLiftsSlopesAsync(UInt32 offset, UInt32 limit) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsSlopesRepository.cs:line 43&#xD;
   at AccessToDB.Tests.LiftsSlopesRepositoryTests.CleanLiftsSlopesTable() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs:line 48&#xD;
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs:line 38&#xD;
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b16b2cf8-25d0-49c6-aee3-02afc0bc567f" testId="f147b5e1-6866-ae30-38fc-99d94c594e05" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 232, SlopeName = slopeName3aed927e-42a6-4a75-9220-6e593ab53a17, IsOpen = True, DifficultyLevel = 166, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6047057" startTime="2022-10-15T22:10:29.7155861+03:00" endTime="2022-10-15T22:10:29.7155866+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b16b2cf8-25d0-49c6-aee3-02afc0bc567f" />
    <UnitTestResult executionId="a1e2ccdd-648a-47b0-ba9c-2bd9e70709cb" testId="d8e43e06-e8d7-9d3f-e18a-f590f6636709" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 85, LiftID = 25, SlopeID = 38 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6067930" startTime="2022-10-15T22:10:22.1151279+03:00" endTime="2022-10-15T22:10:22.1151282+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a1e2ccdd-648a-47b0-ba9c-2bd9e70709cb" />
    <UnitTestResult executionId="010672c8-b388-4c8e-99af-e9174bbdc7d9" testId="f7f219c7-ed74-ea57-eb1e-49ae58c93987" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 252, CardID = 207, UserEmail = UserEmaileb64e90b-2d73-4598-aa80-87ab2fb3b632, Password = passwordead3ca44-978a-4126-aa6a-46c36042e559, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5962440" startTime="2022-10-15T22:10:17.1985042+03:00" endTime="2022-10-15T22:10:17.1985047+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="010672c8-b388-4c8e-99af-e9174bbdc7d9" />
    <UnitTestResult executionId="2fa80146-9c96-46b0-a430-ba100e9a5a63" testId="65df5890-29cd-314d-503a-adacbe15a812" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 52, CardID = 24, UserEmail = UserEmail2870699f-07d5-4ddb-a39a-e0fe16e529d0, Password = passworda697cbea-fde1-4427-92b8-0b72de5af120, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6071323" startTime="2022-10-15T22:10:18.9868393+03:00" endTime="2022-10-15T22:10:18.9868396+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2fa80146-9c96-46b0-a430-ba100e9a5a63" />
    <UnitTestResult executionId="ed08dde0-d574-4e05-8aac-0ee8d4850b53" testId="607e8298-f113-be33-300e-15a343893443" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5522032" startTime="2022-10-15T22:10:36.3618223+03:00" endTime="2022-10-15T22:10:36.3618225+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ed08dde0-d574-4e05-8aac-0ee8d4850b53" />
    <UnitTestResult executionId="4c385b82-72d4-4ab8-b418-41dc839b695c" testId="9bbefb83-8311-6e03-307f-415e3495e223" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5564214" startTime="2022-10-15T22:10:27.8798057+03:00" endTime="2022-10-15T22:10:27.8798058+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4c385b82-72d4-4ab8-b418-41dc839b695c" />
    <UnitTestResult executionId="ce5c97bd-23b5-4045-be9a-aae8abeed1e0" testId="8f4daf61-cb55-adde-29d0-8e6ad5f67335" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 236, LiftID = 152, SlopeID = 48 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6086139" startTime="2022-10-15T22:10:23.2893147+03:00" endTime="2022-10-15T22:10:23.2893152+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ce5c97bd-23b5-4045-be9a-aae8abeed1e0" />
    <UnitTestResult executionId="9959ad75-5ead-47ca-b80c-124c051bb144" testId="b6904deb-53d9-6923-6d13-e2c5250ab61b" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmail7de2f709-bc89-4a5a-a550-4d932feaed86&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5569591" startTime="2022-10-15T22:10:17.7625653+03:00" endTime="2022-10-15T22:10:17.7625656+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9959ad75-5ead-47ca-b80c-124c051bb144" />
    <UnitTestResult executionId="e5374824-04d6-4942-aeed-6ba49af04385" testId="d0046194-1981-f97c-a362-8a60873203fb" testName="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 17, LiftName = liftName0c7884d5-d298-41e7-940f-51be0f87263e, IsOpen = True, SeatsAmount = 68, LiftingTime = 154, QueueTime = 172, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5979732" startTime="2022-10-15T22:10:35.2380299+03:00" endTime="2022-10-15T22:10:35.2380300+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e5374824-04d6-4942-aeed-6ba49af04385" />
    <UnitTestResult executionId="691710ca-cbc2-4123-8e78-62a63132cec2" testId="ec229f70-485a-f91b-53ed-bce655f6cd58" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5605825" startTime="2022-10-15T22:10:34.6363452+03:00" endTime="2022-10-15T22:10:34.6363455+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="691710ca-cbc2-4123-8e78-62a63132cec2">
      <Output>
        <ErrorInfo>
          <Message>AccessToDB.Exceptions.LiftExceptions.LiftAddAutoIncrementException : Exception of type 'AccessToDB.Exceptions.LiftExceptions.LiftAddAutoIncrementException' was thrown.</Message>
          <StackTrace>   at AccessToDB.RepositoriesTarantool.TarantoolLiftsRepository.AddLiftAutoIncrementAsync(String liftName, Boolean isOpen, UInt32 seatsAmount, UInt32 liftingTime) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsRepository.cs:line 95&#xD;
   at AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsRepositoryTests.cs:line 54&#xD;
   at System.Threading.Tasks.Task.&lt;&gt;c.&lt;ThrowAsync&gt;b__128_0(Object state)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="98186cad-7eb4-4d6f-b8dd-8bb55240912c" testId="130c5a6b-7ee1-154d-ff94-5272b2ae7b23" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 67, LiftName = liftNamee451cce9-3b94-4fd7-9f2c-544b9cf17744, IsOpen = True, SeatsAmount = 99, LiftingTime = 118, QueueTime = 74, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6053574" startTime="2022-10-15T22:10:36.9727265+03:00" endTime="2022-10-15T22:10:36.9727267+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="98186cad-7eb4-4d6f-b8dd-8bb55240912c" />
    <UnitTestResult executionId="78050011-c232-42ce-976f-82b8ea23649e" testId="928d897c-d55e-b030-47fa-5d2ee3b1cbf6" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 15)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5564690" startTime="2022-10-15T22:10:32.8209178+03:00" endTime="2022-10-15T22:10:32.8209180+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="78050011-c232-42ce-976f-82b8ea23649e" />
    <UnitTestResult executionId="00b3eb35-ed96-43e0-8a4a-3d2083ad075a" testId="f59cc7f8-8bbe-fc81-5e54-44923dec4bc3" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 217, LiftID = 178, SlopeID = 117 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-10-15T22:10:25.0140786+03:00" endTime="2022-10-15T22:10:25.0140788+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="00b3eb35-ed96-43e0-8a4a-3d2083ad075a">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.</Message>
          <StackTrace>   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
   at AccessToDB.RepositoriesTarantool.TarantoolLiftsSlopesRepository.GetLiftsSlopesAsync(UInt32 offset, UInt32 limit) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsSlopesRepository.cs:line 43&#xD;
   at AccessToDB.Tests.LiftsSlopesRepositoryTests.CleanLiftsSlopesTable() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs:line 48&#xD;
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs:line 38&#xD;
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2feb6ece-8e7c-43d8-af6a-cd390c32a76a" testId="ca0d2ac8-5c4b-fa25-b7fe-9468507d61a4" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 40, LiftID = 87, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5979130" startTime="2022-10-15T22:10:30.3267314+03:00" endTime="2022-10-15T22:10:30.3267317+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2feb6ece-8e7c-43d8-af6a-cd390c32a76a" />
    <UnitTestResult executionId="a0223dc2-30b1-4959-838d-78d8f00a3b2e" testId="fda8e386-eabd-8009-79cd-f5a4bffaabd2" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftName5bb9312f-64f9-4d7c-a8af-68d64d186eb7&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5447551" startTime="2022-10-15T22:10:38.1254129+03:00" endTime="2022-10-15T22:10:38.1254131+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a0223dc2-30b1-4959-838d-78d8f00a3b2e">
      <Output>
        <ErrorInfo>
          <Message>Assert.Throws() Failure&#xD;
Expected: typeof(AccessToDB.Exceptions.LiftExceptions.LiftNotFoundException)&#xD;
Actual:   typeof(System.InvalidOperationException): Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
---- System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.</Message>
          <StackTrace>   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass24_0.&lt;TryGenerateConverterFromGenericConverter&gt;b__0(Type x)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.Serialize[T](T data, MemoryStream stream, MsgPackContext context)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequestImpl[TRequest](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
   at AccessToDB.RepositoriesTarantool.TarantoolLiftsRepository.GetLiftByNameAsync(String name) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsRepository.cs:line 63&#xD;
   at AccessToDB.Tests.LiftsRepositoryTests.&lt;&gt;c__DisplayClass11_0.&lt;&lt;TestGetLiftByNameAsyncFailsWhenNameNotExists&gt;b__0&gt;d.MoveNext() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsRepositoryTests.cs:line 109&#xD;
--- End of stack trace from previous location ---&#xD;
----- Inner Stack Trace -----&#xD;
   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass24_0.&lt;TryGenerateConverterFromGenericConverter&gt;b__0(Type x)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.Serialize[T](T data, MemoryStream stream, MsgPackContext context)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequestImpl[TRequest](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
   at AccessToDB.RepositoriesTarantool.TarantoolLiftsRepository.GetLiftByNameAsync(String name) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsRepository.cs:line 63&#xD;
   at AccessToDB.Tests.LiftsRepositoryTests.&lt;&gt;c__DisplayClass11_0.&lt;&lt;TestGetLiftByNameAsyncFailsWhenNameNotExists&gt;b__0&gt;d.MoveNext() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsRepositoryTests.cs:line 109&#xD;
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cd26fa08-d494-46c2-8ed9-f3545dae8e6a" testId="ad036873-1e7b-330d-6a0d-b691870daefd" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 176, CardID = 65, UserEmail = UserEmail8c5612e2-59ed-4c18-81be-d30f3a0fd814, Password = password85b35131-0a73-4b9b-a1f1-0c8dafff1a05, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5868544" startTime="2022-10-15T22:10:19.5815945+03:00" endTime="2022-10-15T22:10:19.5815948+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cd26fa08-d494-46c2-8ed9-f3545dae8e6a" />
    <UnitTestResult executionId="8a0b3cf0-9082-4cc7-a12b-ceb679307781" testId="3c521313-4ed6-6bce-b4f9-c359411028e7" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5588211" startTime="2022-10-15T22:10:30.8911551+03:00" endTime="2022-10-15T22:10:30.8911553+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8a0b3cf0-9082-4cc7-a12b-ceb679307781" />
    <UnitTestResult executionId="1a77c079-dad7-4834-a1dc-0c3667a8ecc3" testId="f9435956-2e34-e52b-c34e-dce53665cf8e" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6063210" startTime="2022-10-15T22:10:31.5028524+03:00" endTime="2022-10-15T22:10:31.5028526+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1a77c079-dad7-4834-a1dc-0c3667a8ecc3" />
    <UnitTestResult executionId="8acbca58-5603-44b4-803a-fcac58bb9647" testId="b029316d-f8d9-935a-06df-0b252d87b7ee" testName="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 82)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5620650" startTime="2022-10-15T22:10:16.5979878+03:00" endTime="2022-10-15T22:10:16.5979879+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8acbca58-5603-44b4-803a-fcac58bb9647" />
    <UnitTestResult executionId="dee8867d-e377-405c-a862-276ff9c7cc5a" testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5559260" startTime="2022-10-15T22:10:24.4864396+03:00" endTime="2022-10-15T22:10:24.4864400+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dee8867d-e377-405c-a862-276ff9c7cc5a" />
    <UnitTestResult executionId="476766bd-f674-411d-a141-5251404152c5" testId="e1832199-8b73-26ca-74fb-0d962185446d" testName="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 136)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5643582" startTime="2022-10-15T22:10:35.8060822+03:00" endTime="2022-10-15T22:10:35.8060823+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="476766bd-f674-411d-a141-5251404152c5" />
    <UnitTestResult executionId="7bf8226e-4417-499e-a685-466b457bf831" testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6193117" startTime="2022-10-15T22:10:20.2063014+03:00" endTime="2022-10-15T22:10:20.2063018+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7bf8226e-4417-499e-a685-466b457bf831" />
    <UnitTestResult executionId="9ac33f39-8dd1-431c-b763-6a5ce135430d" testId="612d6ece-d232-effe-6538-2ca2a44d1eea" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 121, LiftID = 198, SlopeID = 40 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6249903" startTime="2022-10-15T22:10:20.8478189+03:00" endTime="2022-10-15T22:10:20.8478191+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9ac33f39-8dd1-431c-b763-6a5ce135430d" />
    <UnitTestResult executionId="4f8f99be-5187-4ab0-bdf6-ea5d4c2de8c5" testId="6b11503a-2bef-e882-cd04-491c0885b1a5" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 1, LiftName = liftNameb36c6251-0118-4c5b-ad35-f22d84986076, IsOpen = True, SeatsAmount = 125, LiftingTime = 155, QueueTime = 115, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5926641" startTime="2022-10-15T22:10:37.5696872+03:00" endTime="2022-10-15T22:10:37.5696874+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4f8f99be-5187-4ab0-bdf6-ea5d4c2de8c5" />
    <UnitTestResult executionId="6e76fb37-64a9-4379-8bad-98bcb9297c3e" testId="999716cd-7b03-4c28-5622-b1d3eb340fc9" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 192, LiftID = 160, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6078013" startTime="2022-10-15T22:10:33.4335460+03:00" endTime="2022-10-15T22:10:33.4335486+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6e76fb37-64a9-4379-8bad-98bcb9297c3e" />
    <UnitTestResult executionId="03bbd8c4-8623-4a69-aa3b-e6b84b8c9fbe" testId="1c3383a1-51ca-5d58-d7ee-62ec6a376b08" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 203, SlopeName = slopeName84b327ff-3001-4e99-bd88-ea9b20d69070, IsOpen = True, DifficultyLevel = 12, ConnectedLifts =  }, slope2: Slope { SlopeID = 54, SlopeName = slopeNamecda3e0bb-3550-4528-abcd-16c6c031e468, IsOpen = False, DifficultyLevel = 91, ConnectedLifts =  }, lift1: Lift { LiftID = 86, LiftName = liftNamed5febfb3-434c-47c1-9fc2-a6ec8de288c6, IsOpen = True, SeatsAmount = 52, LiftingTime = 102, QueueTime = 172, ConnectedSlopes =  }, lift2: Lift { LiftID = 186, LiftName = liftNameb702ce23-aa50-4a66-bd84-a46c0af06de0, IsOpen = False, SeatsAmount = 56, LiftingTime = 98, QueueTime = 116, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6534081" startTime="2022-10-15T22:10:21.5045624+03:00" endTime="2022-10-15T22:10:21.5045627+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="03bbd8c4-8623-4a69-aa3b-e6b84b8c9fbe" />
    <UnitTestResult executionId="50efd596-4cf4-456d-b8bc-6240679a432c" testId="fd9603c1-aaaf-9fbe-cdce-dda9c7b8d805" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 211)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.7518736" startTime="2022-10-15T22:10:32.2579203+03:00" endTime="2022-10-15T22:10:32.2579208+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="50efd596-4cf4-456d-b8bc-6240679a432c" />
    <UnitTestResult executionId="b815387c-0161-4700-8ace-97837a2e2a12" testId="c6d4079a-8a2b-b47b-b3bf-bc550b6f130d" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 119)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5588504" startTime="2022-10-15T22:10:25.5744115+03:00" endTime="2022-10-15T22:10:25.5744117+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b815387c-0161-4700-8ace-97837a2e2a12" />
    <UnitTestResult executionId="f4574e68-3aea-4912-ad18-ea4cb12376f1" testId="2485a710-9f6e-9c50-7fbf-fe6385123d58" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 213, SlopeName = slopeNameb3fd77e9-16ca-4058-9bff-9ca4e3a573ab, IsOpen = True, DifficultyLevel = 196, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6057056" startTime="2022-10-15T22:10:28.4898919+03:00" endTime="2022-10-15T22:10:28.4898925+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f4574e68-3aea-4912-ad18-ea4cb12376f1" />
  </Results>
  <TestDefinitions>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 243, LiftID = 171, IsOpen = True })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="e174a345-cd10-3cfc-e7f6-053183491275">
      <Execution id="d0ff84db-8ab8-49a6-8ff7-72132957b08a" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="f9435956-2e34-e52b-c34e-dce53665cf8e">
      <Execution id="1a77c079-dad7-4834-a1dc-0c3667a8ecc3" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftName5bb9312f-64f9-4d7c-a8af-68d64d186eb7&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="fda8e386-eabd-8009-79cd-f5a4bffaabd2">
      <Execution id="a0223dc2-30b1-4959-838d-78d8f00a3b2e" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="607e8298-f113-be33-300e-15a343893443">
      <Execution id="ed08dde0-d574-4e05-8aac-0ee8d4850b53" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftsAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 192, LiftID = 160, IsOpen = True })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="999716cd-7b03-4c28-5622-b1d3eb340fc9">
      <Execution id="6e76fb37-64a9-4379-8bad-98bcb9297c3e" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestUpdateTurnstileByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="8f7ba917-f771-0dc5-f9b9-465c34344b12">
      <Execution id="65205587-1644-4ae1-99fd-331c17e5e6fe" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 176, CardID = 65, UserEmail = UserEmail8c5612e2-59ed-4c18-81be-d30f3a0fd814, Password = password85b35131-0a73-4b9b-a1f1-0c8dafff1a05, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="ad036873-1e7b-330d-6a0d-b691870daefd">
      <Execution id="cd26fa08-d494-46c2-8ed9-f3545dae8e6a" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeNamef454b29f-9a98-41ab-a985-58f36ac9f72e&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="1795a62d-c74a-5c1a-dccd-2d302099c4d3">
      <Execution id="04af0f29-9ad0-4b4d-ac8a-fe83c2b00d55" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;emaildb9304a3-e515-43b1-a3e1-6bf5d0b1f5fa&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="1669408f-c70b-d562-5f06-5eb8d0c3537b">
      <Execution id="a481dd25-2509-49eb-8d2e-50bf553ced8e" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByEmailAsyncFailsWhenEmailNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 40, LiftID = 87, IsOpen = True })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="ca0d2ac8-5c4b-fa25-b7fe-9468507d61a4">
      <Execution id="2feb6ece-8e7c-43d8-af6a-cd390c32a76a" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstileByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 119)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="c6d4079a-8a2b-b47b-b3bf-bc550b6f130d">
      <Execution id="b815387c-0161-4700-8ace-97837a2e2a12" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmail7de2f709-bc89-4a5a-a550-4d932feaed86&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="b6904deb-53d9-6923-6d13-e2c5250ab61b">
      <Execution id="9959ad75-5ead-47ca-b80c-124c051bb144" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserEmailExistsAsyncFalse" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 52, CardID = 24, UserEmail = UserEmail2870699f-07d5-4ddb-a39a-e0fe16e529d0, Password = passworda697cbea-fde1-4427-92b8-0b72de5af120, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="65df5890-29cd-314d-503a-adacbe15a812">
      <Execution id="2fa80146-9c96-46b0-a430-ba100e9a5a63" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAsyncFailsWhenUserIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="30f8e924-9784-0a43-e807-094f70e06567">
      <Execution id="e31916e0-1adf-4fdf-a50f-7a08b7f0598e" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 67, LiftName = liftNamee451cce9-3b94-4fd7-9f2c-544b9cf17744, IsOpen = True, SeatsAmount = 99, LiftingTime = 118, QueueTime = 74, ConnectedSlopes =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="130c5a6b-7ee1-154d-ff94-5272b2ae7b23">
      <Execution id="98186cad-7eb4-4d6f-b8dd-8bb55240912c" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAsyncFailsWhenLiftIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 211)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="fd9603c1-aaaf-9fbe-cdce-dda9c7b8d805">
      <Execution id="50efd596-4cf4-456d-b8bc-6240679a432c" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesByLiftIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 203, SlopeName = slopeName84b327ff-3001-4e99-bd88-ea9b20d69070, IsOpen = True, DifficultyLevel = 12, ConnectedLifts =  }, slope2: Slope { SlopeID = 54, SlopeName = slopeNamecda3e0bb-3550-4528-abcd-16c6c031e468, IsOpen = False, DifficultyLevel = 91, ConnectedLifts =  }, lift1: Lift { LiftID = 86, LiftName = liftNamed5febfb3-434c-47c1-9fc2-a6ec8..." storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="1c3383a1-51ca-5d58-d7ee-62ec6a376b08">
      <Execution id="03bbd8c4-8623-4a69-aa3b-e6b84b8c9fbe" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftsBySlopeIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="3741b26d-6ee0-6246-29e4-92009bff37b0">
      <Execution id="cce3d31e-1a9d-4e18-9e40-13784cae02d5" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUsersAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 232, SlopeName = slopeName3aed927e-42a6-4a75-9220-6e593ab53a17, IsOpen = True, DifficultyLevel = 166, ConnectedLifts =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="f147b5e1-6866-ae30-38fc-99d94c594e05">
      <Execution id="b16b2cf8-25d0-49c6-aee3-02afc0bc567f" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAsyncFailsWhenSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 252, CardID = 207, UserEmail = UserEmaileb64e90b-2d73-4598-aa80-87ab2fb3b632, Password = passwordead3ca44-978a-4126-aa6a-46c36042e559, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="f7f219c7-ed74-ea57-eb1e-49ae58c93987">
      <Execution id="010672c8-b388-4c8e-99af-e9174bbdc7d9" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserIdExistsAsyncTrue" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 136)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="e1832199-8b73-26ca-74fb-0d962185446d">
      <Execution id="476766bd-f674-411d-a141-5251404152c5" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestDeleteLiftByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="4145f44e-b4b1-a618-09e8-c631496e6f1a">
      <Execution id="dee8867d-e377-405c-a862-276ff9c7cc5a" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 15)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="928d897c-d55e-b030-47fa-5d2ee3b1cbf6">
      <Execution id="78050011-c232-42ce-976f-82b8ea23649e" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 85, LiftID = 25, SlopeID = 38 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="d8e43e06-e8d7-9d3f-e18a-f590f6636709">
      <Execution id="a1e2ccdd-648a-47b0-ba9c-2bd9e70709cb" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopesByIDsAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 1, LiftName = liftNameb36c6251-0118-4c5b-ad35-f22d84986076, IsOpen = True, SeatsAmount = 125, LiftingTime = 155, QueueTime = 115, ConnectedSlopes =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="6b11503a-2bef-e882-cd04-491c0885b1a5">
      <Execution id="4f8f99be-5187-4ab0-bdf6-ea5d4c2de8c5" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 20, CardID = 37, UserEmail = UserEmail3ef67921-5221-4a68-a042-196b001e8baf, Password = passworde3767483-dc77-431c-8db4-2d41775a390a, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="30affd05-1bf9-b636-87fe-8c81f75b7336">
      <Execution id="15696b32-9d74-4413-987b-7a8436b51570" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestUpdateUserByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="ec229f70-485a-f91b-53ed-bce655f6cd58">
      <Execution id="691710ca-cbc2-4123-8e78-62a63132cec2" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 25, SlopeName = slopeName547d3614-f488-4f7c-bd79-c8e4fc07318f, IsOpen = True, DifficultyLevel = 122, ConnectedLifts =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="06060362-b95d-9f22-0555-d80e04638e3c">
      <Execution id="0c9d329d-ed65-45bd-83a4-ac1da48bd14e" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestUpdateSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 236, LiftID = 152, SlopeID = 48 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="8f4daf61-cb55-adde-29d0-8e6ad5f67335">
      <Execution id="ce5c97bd-23b5-4045-be9a-aae8abeed1e0" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestUpdateLiftSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 17, LiftName = liftName0c7884d5-d298-41e7-940f-51be0f87263e, IsOpen = True, SeatsAmount = 68, LiftingTime = 154, QueueTime = 172, ConnectedSlopes =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="d0046194-1981-f97c-a362-8a60873203fb">
      <Execution id="e5374824-04d6-4942-aeed-6ba49af04385" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestUpdateLiftByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 82)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="b029316d-f8d9-935a-06df-0b252d87b7ee">
      <Execution id="8acbca58-5603-44b4-803a-fcac58bb9647" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestDeleteUserByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 120)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="40642f53-515e-f725-0829-db4d0776c076">
      <Execution id="c7783e81-cb8d-4e62-9b74-39e3433a5143" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestDeleteSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 121, LiftID = 198, SlopeID = 40 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="612d6ece-d232-effe-6538-2ca2a44d1eea">
      <Execution id="9ac33f39-8dd1-431c-b763-6a5ce135430d" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 211, LiftID = 39, SlopeID = 213 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="c192d81b-01f3-18b2-24a7-010fbf195413">
      <Execution id="a5078578-7d80-4b88-b0f9-e1eb1e0041db" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e">
      <Execution id="7bf8226e-4417-499e-a685-466b457bf831" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="3c521313-4ed6-6bce-b4f9-c359411028e7">
      <Execution id="8a0b3cf0-9082-4cc7-a12b-ceb679307781" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 217, LiftID = 178, SlopeID = 117 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="f59cc7f8-8bbe-fc81-5e54-44923dec4bc3">
      <Execution id="00b3eb35-ed96-43e0-8a4a-3d2083ad075a" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 213, SlopeName = slopeNameb3fd77e9-16ca-4058-9bff-9ca4e3a573ab, IsOpen = True, DifficultyLevel = 196, ConnectedLifts =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="2485a710-9f6e-9c50-7fbf-fe6385123d58">
      <Execution id="f4574e68-3aea-4912-ad18-ea4cb12376f1" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="9bbefb83-8311-6e03-307f-415e3495e223">
      <Execution id="4c385b82-72d4-4ab8-b418-41dc839b695c" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopesAsyncEmpty" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="30affd05-1bf9-b636-87fe-8c81f75b7336" executionId="15696b32-9d74-4413-987b-7a8436b51570" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30f8e924-9784-0a43-e807-094f70e06567" executionId="e31916e0-1adf-4fdf-a50f-7a08b7f0598e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3741b26d-6ee0-6246-29e4-92009bff37b0" executionId="cce3d31e-1a9d-4e18-9e40-13784cae02d5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e174a345-cd10-3cfc-e7f6-053183491275" executionId="d0ff84db-8ab8-49a6-8ff7-72132957b08a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" executionId="65205587-1644-4ae1-99fd-331c17e5e6fe" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1795a62d-c74a-5c1a-dccd-2d302099c4d3" executionId="04af0f29-9ad0-4b4d-ac8a-fe83c2b00d55" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="06060362-b95d-9f22-0555-d80e04638e3c" executionId="0c9d329d-ed65-45bd-83a4-ac1da48bd14e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="40642f53-515e-f725-0829-db4d0776c076" executionId="c7783e81-cb8d-4e62-9b74-39e3433a5143" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1669408f-c70b-d562-5f06-5eb8d0c3537b" executionId="a481dd25-2509-49eb-8d2e-50bf553ced8e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c192d81b-01f3-18b2-24a7-010fbf195413" executionId="a5078578-7d80-4b88-b0f9-e1eb1e0041db" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f147b5e1-6866-ae30-38fc-99d94c594e05" executionId="b16b2cf8-25d0-49c6-aee3-02afc0bc567f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d8e43e06-e8d7-9d3f-e18a-f590f6636709" executionId="a1e2ccdd-648a-47b0-ba9c-2bd9e70709cb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f7f219c7-ed74-ea57-eb1e-49ae58c93987" executionId="010672c8-b388-4c8e-99af-e9174bbdc7d9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="65df5890-29cd-314d-503a-adacbe15a812" executionId="2fa80146-9c96-46b0-a430-ba100e9a5a63" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="607e8298-f113-be33-300e-15a343893443" executionId="ed08dde0-d574-4e05-8aac-0ee8d4850b53" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9bbefb83-8311-6e03-307f-415e3495e223" executionId="4c385b82-72d4-4ab8-b418-41dc839b695c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8f4daf61-cb55-adde-29d0-8e6ad5f67335" executionId="ce5c97bd-23b5-4045-be9a-aae8abeed1e0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b6904deb-53d9-6923-6d13-e2c5250ab61b" executionId="9959ad75-5ead-47ca-b80c-124c051bb144" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d0046194-1981-f97c-a362-8a60873203fb" executionId="e5374824-04d6-4942-aeed-6ba49af04385" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ec229f70-485a-f91b-53ed-bce655f6cd58" executionId="691710ca-cbc2-4123-8e78-62a63132cec2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="130c5a6b-7ee1-154d-ff94-5272b2ae7b23" executionId="98186cad-7eb4-4d6f-b8dd-8bb55240912c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="928d897c-d55e-b030-47fa-5d2ee3b1cbf6" executionId="78050011-c232-42ce-976f-82b8ea23649e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f59cc7f8-8bbe-fc81-5e54-44923dec4bc3" executionId="00b3eb35-ed96-43e0-8a4a-3d2083ad075a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ca0d2ac8-5c4b-fa25-b7fe-9468507d61a4" executionId="2feb6ece-8e7c-43d8-af6a-cd390c32a76a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fda8e386-eabd-8009-79cd-f5a4bffaabd2" executionId="a0223dc2-30b1-4959-838d-78d8f00a3b2e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ad036873-1e7b-330d-6a0d-b691870daefd" executionId="cd26fa08-d494-46c2-8ed9-f3545dae8e6a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3c521313-4ed6-6bce-b4f9-c359411028e7" executionId="8a0b3cf0-9082-4cc7-a12b-ceb679307781" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f9435956-2e34-e52b-c34e-dce53665cf8e" executionId="1a77c079-dad7-4834-a1dc-0c3667a8ecc3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b029316d-f8d9-935a-06df-0b252d87b7ee" executionId="8acbca58-5603-44b4-803a-fcac58bb9647" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" executionId="dee8867d-e377-405c-a862-276ff9c7cc5a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e1832199-8b73-26ca-74fb-0d962185446d" executionId="476766bd-f674-411d-a141-5251404152c5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" executionId="7bf8226e-4417-499e-a685-466b457bf831" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="612d6ece-d232-effe-6538-2ca2a44d1eea" executionId="9ac33f39-8dd1-431c-b763-6a5ce135430d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6b11503a-2bef-e882-cd04-491c0885b1a5" executionId="4f8f99be-5187-4ab0-bdf6-ea5d4c2de8c5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="999716cd-7b03-4c28-5622-b1d3eb340fc9" executionId="6e76fb37-64a9-4379-8bad-98bcb9297c3e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1c3383a1-51ca-5d58-d7ee-62ec6a376b08" executionId="03bbd8c4-8623-4a69-aa3b-e6b84b8c9fbe" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fd9603c1-aaaf-9fbe-cdce-dda9c7b8d805" executionId="50efd596-4cf4-456d-b8bc-6240679a432c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c6d4079a-8a2b-b47b-b3bf-bc550b6f130d" executionId="b815387c-0161-4700-8ace-97837a2e2a12" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2485a710-9f6e-9c50-7fbf-fe6385123d58" executionId="f4574e68-3aea-4912-ad18-ea4cb12376f1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Список результатов" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="Все загруженные результаты" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="39" executed="39" passed="35" failed="4" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.5+1caef2f33e (64-bit .NET 6.0.3)&#xD;
[xUnit.net 00:00:00.54]   Discovering: AccessToDB.Tests&#xD;
[xUnit.net 00:00:00.66]   Discovered:  AccessToDB.Tests&#xD;
[xUnit.net 00:00:00.66]   Starting:    AccessToDB.Tests&#xD;
[xUnit.net 00:00:08.63]       System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
[xUnit.net 00:00:08.63]       Stack Trace:&#xD;
[xUnit.net 00:00:08.64]            at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
[xUnit.net 00:00:08.64]            at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
[xUnit.net 00:00:08.64]            at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
[xUnit.net 00:00:08.64]            at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
[xUnit.net 00:00:08.64]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
[xUnit.net 00:00:08.64]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:08.64]            at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
[xUnit.net 00:00:08.64]            at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
[xUnit.net 00:00:08.64]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
[xUnit.net 00:00:08.64]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:08.64]            at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
[xUnit.net 00:00:08.64]            at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
[xUnit.net 00:00:08.64]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:08.64]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:08.64]            at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
[xUnit.net 00:00:08.64]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsSlopesRepository.cs(43,0): at AccessToDB.RepositoriesTarantool.TarantoolLiftsSlopesRepository.GetLiftsSlopesAsync(UInt32 offset, UInt32 limit)&#xD;
[xUnit.net 00:00:08.64]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs(48,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests.CleanLiftsSlopesTable()&#xD;
[xUnit.net 00:00:08.64]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs(38,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()&#xD;
[xUnit.net 00:00:08.64]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)&#xD;
[xUnit.net 00:00:10.96]       System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
[xUnit.net 00:00:10.96]       Stack Trace:&#xD;
[xUnit.net 00:00:10.96]            at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
[xUnit.net 00:00:10.96]            at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
[xUnit.net 00:00:10.96]            at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
[xUnit.net 00:00:10.96]            at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
[xUnit.net 00:00:10.96]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
[xUnit.net 00:00:10.96]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:10.96]            at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
[xUnit.net 00:00:10.96]            at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
[xUnit.net 00:00:10.96]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
[xUnit.net 00:00:10.96]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:10.96]            at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
[xUnit.net 00:00:10.96]            at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
[xUnit.net 00:00:10.96]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:10.96]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:10.96]            at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
[xUnit.net 00:00:10.96]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsSlopesRepository.cs(43,0): at AccessToDB.RepositoriesTarantool.TarantoolLiftsSlopesRepository.GetLiftsSlopesAsync(UInt32 offset, UInt32 limit)&#xD;
[xUnit.net 00:00:10.96]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs(48,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests.CleanLiftsSlopesTable()&#xD;
[xUnit.net 00:00:10.96]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs(38,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()&#xD;
[xUnit.net 00:00:10.96]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)&#xD;
[xUnit.net 00:00:20.58]       AccessToDB.Exceptions.LiftExceptions.LiftAddAutoIncrementException : Exception of type 'AccessToDB.Exceptions.LiftExceptions.LiftAddAutoIncrementException' was thrown.&#xD;
[xUnit.net 00:00:20.58]       Stack Trace:&#xD;
[xUnit.net 00:00:20.58]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsRepository.cs(95,0): at AccessToDB.RepositoriesTarantool.TarantoolLiftsRepository.AddLiftAutoIncrementAsync(String liftName, Boolean isOpen, UInt32 seatsAmount, UInt32 liftingTime)&#xD;
[xUnit.net 00:00:20.58]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsRepositoryTests.cs(54,0): at AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk()&#xD;
[xUnit.net 00:00:20.58]            at System.Threading.Tasks.Task.&lt;&gt;c.&lt;ThrowAsync&gt;b__128_0(Object state)&#xD;
[xUnit.net 00:00:24.07]       Assert.Throws() Failure&#xD;
[xUnit.net 00:00:24.07]       Expected: typeof(AccessToDB.Exceptions.LiftExceptions.LiftNotFoundException)&#xD;
[xUnit.net 00:00:24.07]       Actual:   typeof(System.InvalidOperationException): Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
[xUnit.net 00:00:24.07]       ---- System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
[xUnit.net 00:00:24.07]       Stack Trace:&#xD;
[xUnit.net 00:00:24.07]            at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
[xUnit.net 00:00:24.07]            at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass24_0.&lt;TryGenerateConverterFromGenericConverter&gt;b__0(Type x)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.MsgPack.Light.MsgPackSerializer.Serialize[T](T data, MemoryStream stream, MsgPackContext context)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequestImpl[TRequest](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
[xUnit.net 00:00:24.07]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsRepository.cs(63,0): at AccessToDB.RepositoriesTarantool.TarantoolLiftsRepository.GetLiftByNameAsync(String name)&#xD;
[xUnit.net 00:00:24.07]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsRepositoryTests.cs(109,0): at AccessToDB.Tests.LiftsRepositoryTests.&lt;&gt;c__DisplayClass11_0.&lt;&lt;TestGetLiftByNameAsyncFailsWhenNameNotExists&gt;b__0&gt;d.MoveNext()&#xD;
[xUnit.net 00:00:24.07]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:24.07]         ----- Inner Stack Trace -----&#xD;
[xUnit.net 00:00:24.07]            at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
[xUnit.net 00:00:24.07]            at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass24_0.&lt;TryGenerateConverterFromGenericConverter&gt;b__0(Type x)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.MsgPack.Light.MsgPackSerializer.Serialize[T](T data, MemoryStream stream, MsgPackContext context)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequestImpl[TRequest](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:24.07]            at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
[xUnit.net 00:00:24.07]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsRepository.cs(63,0): at AccessToDB.RepositoriesTarantool.TarantoolLiftsRepository.GetLiftByNameAsync(String name)&#xD;
[xUnit.net 00:00:24.07]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsRepositoryTests.cs(109,0): at AccessToDB.Tests.LiftsRepositoryTests.&lt;&gt;c__DisplayClass11_0.&lt;&lt;TestGetLiftByNameAsyncFailsWhenNameNotExists&gt;b__0&gt;d.MoveNext()&#xD;
[xUnit.net 00:00:24.07]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:24.08]   Finished:    AccessToDB.Tests&#xD;
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-10-15T22:10:22.6834184+03:00">
        <Text>[xUnit.net 00:00:08.63]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 211, LiftID = 39, SlopeID = 213 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-10-15T22:10:25.0111988+03:00">
        <Text>[xUnit.net 00:00:10.96]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 217, LiftID = 178, SlopeID = 117 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-10-15T22:10:34.6355559+03:00">
        <Text>[xUnit.net 00:00:20.58]     AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-10-15T22:10:38.1230488+03:00">
        <Text>[xUnit.net 00:00:24.07]     AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: "liftName5bb9312f-64f9-4d7c-a8af-68d64d186eb7") [FAIL]</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>