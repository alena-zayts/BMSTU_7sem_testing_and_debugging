<?xml version="1.0" encoding="utf-8"?>
<TestRun id="f8a7acc7-7d34-4c32-8c9b-246a254ae381" name="@DESKTOP-TJ9D65N 2022-11-03 20:22:57" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2022-11-03T20:22:57.7135310+03:00" queuing="2022-11-03T20:22:57.7135311+03:00" start="2022-11-03T20:22:54.9160434+03:00" finish="2022-11-03T20:22:58.2284697+03:00" />
  <TestSettings name="default" id="0ca2cf9f-32aa-49c1-8d8e-907f0bf51a3d">
    <Deployment runDeploymentRoot="_DESKTOP-TJ9D65N_2022-11-03_20_22_57" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="c582365e-f113-4ce8-8407-7bea9589373e" testId="70951095-dd15-14db-6f5d-41d10ea1d16d" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 145, CardID = 59, UserEmail = UserEmail316e493d-db3c-4c5f-a33d-baf6569e0ee7, Password = password992304de-acfb-44bb-96fe-1febfbeea221, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.6956842+03:00" endTime="2022-11-03T20:22:57.6956842+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c582365e-f113-4ce8-8407-7bea9589373e">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a9353a87-d62f-4e34-a448-3033411cb4bf" testId="19427f52-1e52-4d5d-5dd4-cf50a31932c9" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 202, LiftID = 117, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:58.0761200+03:00" endTime="2022-11-03T20:22:58.0761201+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a9353a87-d62f-4e34-a448-3033411cb4bf">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e6561025-9a0b-474c-8621-35b8c107631c" testId="9bbefb83-8311-6e03-307f-415e3495e223" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.5955872+03:00" endTime="2022-11-03T20:22:57.5955872+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e6561025-9a0b-474c-8621-35b8c107631c">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1221f4ee-6706-499a-914b-f13cadc56104" testId="ec229f70-485a-f91b-53ed-bce655f6cd58" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.8208984+03:00" endTime="2022-11-03T20:22:57.8208984+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1221f4ee-6706-499a-914b-f13cadc56104">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="acf264d4-7973-4d43-9721-a3bf9798a45e" testId="607e8298-f113-be33-300e-15a343893443" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.8690711+03:00" endTime="2022-11-03T20:22:57.8690712+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="acf264d4-7973-4d43-9721-a3bf9798a45e">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="da7693b4-17ff-4b84-820c-8a86254d17fd" testId="74b772bc-e8a1-4525-09d0-9c97a1f1656d" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 226, CardID = 250, UserEmail = UserEmail760d5845-33ad-46e0-986e-13f1a6e497e7, Password = passwordb4869f5d-921f-47b0-9bdf-18d4df9189d3, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.7672442+03:00" endTime="2022-11-03T20:22:57.7672443+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="da7693b4-17ff-4b84-820c-8a86254d17fd">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ec2fecfb-e28c-4773-a417-0337b789830b" testId="df263ba9-499f-98ac-1966-4132993e2701" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 212, SlopeName = slopeNameeb801c6e-be6c-477f-a42c-7044dca200a6, IsOpen = True, DifficultyLevel = 130, ConnectedLifts =  }, slope2: Slope { SlopeID = 73, SlopeName = slopeName195f4ac8-4044-433c-8c0c-a710c40ac0db, IsOpen = False, DifficultyLevel = 40, ConnectedLifts =  }, lift1: Lift { LiftID = 126, LiftName = liftName4a7948ad-9697-4f9d-9fc7-04c5e81faff0, IsOpen = True, SeatsAmount = 15, LiftingTime = 231, QueueTime = 125, ConnectedSlopes =  }, lift2: Lift { LiftID = 139, LiftName = liftName85d36eeb-5ade-4285-82cf-221a81fc49aa, IsOpen = False, SeatsAmount = 74, LiftingTime = 82, QueueTime = 131, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.9317238+03:00" endTime="2022-11-03T20:22:57.9317239+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ec2fecfb-e28c-4773-a417-0337b789830b">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9df4598b-9d64-4eba-b2a3-e3de659ba7e9" testId="b645985a-6284-cf02-c289-40cc3a88c50f" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 169, LiftID = 73, SlopeID = 47 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:58.0117235+03:00" endTime="2022-11-03T20:22:58.0117237+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9df4598b-9d64-4eba-b2a3-e3de659ba7e9">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b43f2736-a30e-417d-a60f-866e7e73f3e2" testId="747f5763-6250-af3f-eed1-962f7ea6b012" testName="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 219, SlopeName = slopeName544776f5-0845-427d-b2ce-f1542ad39d62, IsOpen = True, DifficultyLevel = 50, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.5786908+03:00" endTime="2022-11-03T20:22:57.5786909+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b43f2736-a30e-417d-a60f-866e7e73f3e2">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d77712af-84ed-45df-b7ee-5bb4b616de47" testId="bdef3105-6168-86ba-b226-8a746ca6b565" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;email10dfb83b-a1be-4fa3-86c2-fd5e6a12fc42&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.7512775+03:00" endTime="2022-11-03T20:22:57.7512776+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d77712af-84ed-45df-b7ee-5bb4b616de47">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c3042bff-7af2-44e3-8f61-5a53afff05af" testId="82ea245f-987a-55a6-3c17-fe787858dec5" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 155, LiftID = 73, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:58.1263670+03:00" endTime="2022-11-03T20:22:58.1263672+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c3042bff-7af2-44e3-8f61-5a53afff05af">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7bbbc46b-9bcf-4483-ad1c-ada2bbb5c3e6" testId="f5c217d8-38f0-f1a7-b9b0-9885a9d10b15" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 123, SlopeName = slopeNamef6a78b19-0e29-45ed-a2b1-ae4f10c24099, IsOpen = True, DifficultyLevel = 120, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.5158978+03:00" endTime="2022-11-03T20:22:57.5159253+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7bbbc46b-9bcf-4483-ad1c-ada2bbb5c3e6">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="83e47e42-b980-46b3-917b-38b5ae891747" testId="2e1bb497-a85b-e1ba-bfe5-c4c75f7312bb" testName="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 141, LiftName = liftNamebfd79db7-af8c-48e8-a56f-c71727ccf3ed, IsOpen = True, SeatsAmount = 67, LiftingTime = 118, QueueTime = 42, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.8553423+03:00" endTime="2022-11-03T20:22:57.8553423+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="83e47e42-b980-46b3-917b-38b5ae891747">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="09336dd3-e645-42f4-90b4-ee2bbd129c69" testId="d6c279d3-95bb-3362-e9da-4fe1e695f823" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftName782a9f57-2d16-483e-9a1e-600481589159&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.9157189+03:00" endTime="2022-11-03T20:22:57.9157189+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="09336dd3-e645-42f4-90b4-ee2bbd129c69">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9e03d2c7-9486-4a41-a3f8-5b2ef8f71828" testId="f9435956-2e34-e52b-c34e-dce53665cf8e" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:58.1126525+03:00" endTime="2022-11-03T20:22:58.1126526+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9e03d2c7-9486-4a41-a3f8-5b2ef8f71828">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="10b0c701-d0b2-4055-a389-ffa58ea4edb9" testId="84d16a92-bf10-4c15-27d4-63b1c50211ed" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 190, LiftID = 24, SlopeID = 118 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.9638469+03:00" endTime="2022-11-03T20:22:57.9638471+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="10b0c701-d0b2-4055-a389-ffa58ea4edb9">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="73294b7d-b120-441c-9843-aab6483cd293" testId="d9791764-1cb4-2602-e6e7-6a4db674d77d" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 119, CardID = 161, UserEmail = UserEmail19962a7e-d41e-4fb5-9e7d-7a2389899d13, Password = passworded3875a5-9392-4da1-9168-c698941db206, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.6515018+03:00" endTime="2022-11-03T20:22:57.6515019+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="73294b7d-b120-441c-9843-aab6483cd293">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c85e87fc-0061-4b01-b271-46160e244fb8" testId="b4b909e7-655f-be2f-91ef-ab789dafd968" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 90, LiftID = 237, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:58.1515338+03:00" endTime="2022-11-03T20:22:58.1515348+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c85e87fc-0061-4b01-b271-46160e244fb8">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1cb711ce-16cc-4239-b1f0-75c334e4e02e" testId="6b955845-0453-9f70-c8d8-60a474be65c7" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 35, LiftID = 227, SlopeID = 11 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:58.0313971+03:00" endTime="2022-11-03T20:22:58.0313973+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1cb711ce-16cc-4239-b1f0-75c334e4e02e">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bd9ce440-68ec-476c-955d-c91bffbc26e1" testId="30f8e924-9784-0a43-e807-094f70e06567" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:58.0463005+03:00" endTime="2022-11-03T20:22:58.0463006+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bd9ce440-68ec-476c-955d-c91bffbc26e1">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0c6ca7b6-f7b3-4acb-87a4-41545bce5c84" testId="448a8f39-3de0-6a78-7d51-30f7d565f5ce" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 10, LiftID = 43, SlopeID = 60 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.9478660+03:00" endTime="2022-11-03T20:22:57.9478661+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0c6ca7b6-f7b3-4acb-87a4-41545bce5c84">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5ead5731-08b1-44f3-a290-1d45806ceb2a" testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:58.0612033+03:00" endTime="2022-11-03T20:22:58.0612035+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5ead5731-08b1-44f3-a290-1d45806ceb2a">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4bc22753-5dc7-433d-b428-5b49c39b6469" testId="c7ca86a7-e074-a450-a7cf-616b450d15a8" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 179)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:58.0874436+03:00" endTime="2022-11-03T20:22:58.0874438+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4bc22753-5dc7-433d-b428-5b49c39b6469">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="959c804c-d8e8-4632-b02d-07b69e620de3" testId="a7c2bb54-0514-d120-5d9f-d013753c3432" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 208, SlopeName = slopeName4c7e3a16-1e23-4b87-b448-8cf222b607f8, IsOpen = True, DifficultyLevel = 122, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.5460122+03:00" endTime="2022-11-03T20:22:57.5460122+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="959c804c-d8e8-4632-b02d-07b69e620de3">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0d59ad03-526f-44b7-a2ac-5dc0170f7f73" testId="faed91fb-e36f-30f4-b586-bc4d0f07a562" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmail065ec5ab-f691-40e6-b039-44c9164632ff&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.7165102+03:00" endTime="2022-11-03T20:22:57.7165103+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0d59ad03-526f-44b7-a2ac-5dc0170f7f73">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b37e6b87-d825-489b-b2b5-a9dfc269d306" testId="b271c3c9-2b34-ad7c-6334-8f8d73a30614" testName="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 166)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.8996787+03:00" endTime="2022-11-03T20:22:57.8996788+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b37e6b87-d825-489b-b2b5-a9dfc269d306">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="03369eab-9e06-4aaf-a89b-5caffffaa026" testId="486f7a29-db90-4f3a-1652-04c8eb8a73e0" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 249)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:58.1408261+03:00" endTime="2022-11-03T20:22:58.1408263+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="03369eab-9e06-4aaf-a89b-5caffffaa026">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f33ee342-5d94-4527-8d9f-8cac03682b2c" testId="da882158-be09-93f7-8628-495ceb74f1bf" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 167, LiftID = 18, SlopeID = 225 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.9970338+03:00" endTime="2022-11-03T20:22:57.9970340+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f33ee342-5d94-4527-8d9f-8cac03682b2c">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="22059d27-9618-47d5-825c-612e9fc3d0ed" testId="344bfcf5-0e93-17a8-ad74-74eedd3d604a" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 154)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.9815612+03:00" endTime="2022-11-03T20:22:57.9815614+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="22059d27-9618-47d5-825c-612e9fc3d0ed">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5ec3a1da-a54f-4eef-969c-bfc09ab7ac60" testId="3c521313-4ed6-6bce-b4f9-c359411028e7" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:58.1002720+03:00" endTime="2022-11-03T20:22:58.1002722+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5ec3a1da-a54f-4eef-969c-bfc09ab7ac60">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="883e2093-9c4b-4148-918d-f53bc105c851" testId="3741b26d-6ee0-6246-29e4-92009bff37b0" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.6690970+03:00" endTime="2022-11-03T20:22:57.6690971+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="883e2093-9c4b-4148-918d-f53bc105c851">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f500f8b6-20f4-4c93-a8d0-694d9856aab9" testId="c09c4c12-49d1-aa77-027a-88dcb20a6a63" testName="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 18, CardID = 192, UserEmail = UserEmail863f3b07-407c-4521-b16c-f3e04fb4bebd, Password = password05065bdc-bc9a-4545-a661-2d178e0b04ec, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.7867575+03:00" endTime="2022-11-03T20:22:57.7867576+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f500f8b6-20f4-4c93-a8d0-694d9856aab9">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e5d527e9-6dd1-473f-80f2-d24e2e8aa020" testId="1dc6ddff-42be-88e3-3067-27e917bc21cd" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 160, LiftName = liftNameb6d353f2-bec8-47b1-8946-956567b30e7a, IsOpen = True, SeatsAmount = 240, LiftingTime = 77, QueueTime = 65, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.8842215+03:00" endTime="2022-11-03T20:22:57.8842216+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e5d527e9-6dd1-473f-80f2-d24e2e8aa020">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="359a84be-2692-4af0-8861-40ed8ce9bb60" testId="098f34d7-a60b-afa7-b3ec-58ead6b40302" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeName8164c302-04c2-4f53-9516-cf296e9b98b6&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.6291849+03:00" endTime="2022-11-03T20:22:57.6291849+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="359a84be-2692-4af0-8861-40ed8ce9bb60">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="aae8d246-936c-43fb-bd0c-29c1a9002296" testId="10702f1d-956e-bbdd-44ea-2c2c91e598e1" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 151, LiftName = liftName91266bf0-014f-491d-a596-3b4113860b69, IsOpen = True, SeatsAmount = 2, LiftingTime = 150, QueueTime = 24, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.8373194+03:00" endTime="2022-11-03T20:22:57.8373195+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="aae8d246-936c-43fb-bd0c-29c1a9002296">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="57185658-cdcd-4c5b-beb9-94d44eb8f302" testId="8758dd2d-51de-9a9a-f49e-f75b1a012c52" testName="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 115)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.6113348+03:00" endTime="2022-11-03T20:22:57.6113349+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="57185658-cdcd-4c5b-beb9-94d44eb8f302">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fd28b13b-d878-44b6-a07a-7389517f7838" testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.8032198+03:00" endTime="2022-11-03T20:22:57.8032199+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fd28b13b-d878-44b6-a07a-7389517f7838">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="43a97dd5-9308-45b5-b0d2-b41b036c74b2" testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.5632014+03:00" endTime="2022-11-03T20:22:57.5632015+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="43a97dd5-9308-45b5-b0d2-b41b036c74b2">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9da93f38-fdcb-442a-8fe4-da4822e96420" testId="63d70c4a-b1d8-2368-2a18-9c7cc948f642" testName="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 132)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:22:57.7347640+03:00" endTime="2022-11-03T20:22:57.7347640+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9da93f38-fdcb-442a-8fe4-da4822e96420">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 202, LiftID = 117, IsOpen = True })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="19427f52-1e52-4d5d-5dd4-cf50a31932c9">
      <Execution id="a9353a87-d62f-4e34-a448-3033411cb4bf" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmail065ec5ab-f691-40e6-b039-44c9164632ff&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="faed91fb-e36f-30f4-b586-bc4d0f07a562">
      <Execution id="0d59ad03-526f-44b7-a2ac-5dc0170f7f73" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserEmailExistsAsyncFalse" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="3741b26d-6ee0-6246-29e4-92009bff37b0">
      <Execution id="883e2093-9c4b-4148-918d-f53bc105c851" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUsersAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="f9435956-2e34-e52b-c34e-dce53665cf8e">
      <Execution id="9e03d2c7-9486-4a41-a3f8-5b2ef8f71828" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 10, LiftID = 43, SlopeID = 60 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="448a8f39-3de0-6a78-7d51-30f7d565f5ce">
      <Execution id="0c6ca7b6-f7b3-4acb-87a4-41545bce5c84" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestUpdateLiftSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 169, LiftID = 73, SlopeID = 47 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="b645985a-6284-cf02-c289-40cc3a88c50f">
      <Execution id="9df4598b-9d64-4eba-b2a3-e3de659ba7e9" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopesByIDsAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 226, CardID = 250, UserEmail = UserEmail760d5845-33ad-46e0-986e-13f1a6e497e7, Password = passwordb4869f5d-921f-47b0-9bdf-18d4df9189d3, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="74b772bc-e8a1-4525-09d0-9c97a1f1656d">
      <Execution id="da7693b4-17ff-4b84-820c-8a86254d17fd" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserIdExistsAsyncTrue" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 249)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="486f7a29-db90-4f3a-1652-04c8eb8a73e0">
      <Execution id="03369eab-9e06-4aaf-a89b-5caffffaa026" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 145, CardID = 59, UserEmail = UserEmail316e493d-db3c-4c5f-a33d-baf6569e0ee7, Password = password992304de-acfb-44bb-96fe-1febfbeea221, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="70951095-dd15-14db-6f5d-41d10ea1d16d">
      <Execution id="c582365e-f113-4ce8-8407-7bea9589373e" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="4145f44e-b4b1-a618-09e8-c631496e6f1a">
      <Execution id="5ead5731-08b1-44f3-a290-1d45806ceb2a" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 119, CardID = 161, UserEmail = UserEmail19962a7e-d41e-4fb5-9e7d-7a2389899d13, Password = passworded3875a5-9392-4da1-9168-c698941db206, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="d9791764-1cb4-2602-e6e7-6a4db674d77d">
      <Execution id="73294b7d-b120-441c-9843-aab6483cd293" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAsyncFailsWhenUserIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeName8164c302-04c2-4f53-9516-cf296e9b98b6&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="098f34d7-a60b-afa7-b3ec-58ead6b40302">
      <Execution id="359a84be-2692-4af0-8861-40ed8ce9bb60" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 35, LiftID = 227, SlopeID = 11 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="6b955845-0453-9f70-c8d8-60a474be65c7">
      <Execution id="1cb711ce-16cc-4239-b1f0-75c334e4e02e" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="9bbefb83-8311-6e03-307f-415e3495e223">
      <Execution id="e6561025-9a0b-474c-8621-35b8c107631c" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="ec229f70-485a-f91b-53ed-bce655f6cd58">
      <Execution id="1221f4ee-6706-499a-914b-f13cadc56104" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 115)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="8758dd2d-51de-9a9a-f49e-f75b1a012c52">
      <Execution id="57185658-cdcd-4c5b-beb9-94d44eb8f302" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestDeleteSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 190, LiftID = 24, SlopeID = 118 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="84d16a92-bf10-4c15-27d4-63b1c50211ed">
      <Execution id="10b0c701-d0b2-4055-a389-ffa58ea4edb9" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="3c521313-4ed6-6bce-b4f9-c359411028e7">
      <Execution id="5ec3a1da-a54f-4eef-969c-bfc09ab7ac60" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 18, CardID = 192, UserEmail = UserEmail863f3b07-407c-4521-b16c-f3e04fb4bebd, Password = password05065bdc-bc9a-4545-a661-2d178e0b04ec, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="c09c4c12-49d1-aa77-027a-88dcb20a6a63">
      <Execution id="f500f8b6-20f4-4c93-a8d0-694d9856aab9" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestUpdateUserByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 151, LiftName = liftName91266bf0-014f-491d-a596-3b4113860b69, IsOpen = True, SeatsAmount = 2, LiftingTime = 150, QueueTime = 24, ConnectedSlopes =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="10702f1d-956e-bbdd-44ea-2c2c91e598e1">
      <Execution id="aae8d246-936c-43fb-bd0c-29c1a9002296" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftName782a9f57-2d16-483e-9a1e-600481589159&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="d6c279d3-95bb-3362-e9da-4fe1e695f823">
      <Execution id="09336dd3-e645-42f4-90b4-ee2bbd129c69" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="30f8e924-9784-0a43-e807-094f70e06567">
      <Execution id="bd9ce440-68ec-476c-955d-c91bffbc26e1" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 179)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="c7ca86a7-e074-a450-a7cf-616b450d15a8">
      <Execution id="4bc22753-5dc7-433d-b428-5b49c39b6469" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesByLiftIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 208, SlopeName = slopeName4c7e3a16-1e23-4b87-b448-8cf222b607f8, IsOpen = True, DifficultyLevel = 122, ConnectedLifts =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="a7c2bb54-0514-d120-5d9f-d013753c3432">
      <Execution id="959c804c-d8e8-4632-b02d-07b69e620de3" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAsyncFailsWhenSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 167, LiftID = 18, SlopeID = 225 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="da882158-be09-93f7-8628-495ceb74f1bf">
      <Execution id="f33ee342-5d94-4527-8d9f-8cac03682b2c" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 123, SlopeName = slopeNamef6a78b19-0e29-45ed-a2b1-ae4f10c24099, IsOpen = True, DifficultyLevel = 120, ConnectedLifts =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="f5c217d8-38f0-f1a7-b9b0-9885a9d10b15">
      <Execution id="7bbbc46b-9bcf-4483-ad1c-ada2bbb5c3e6" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e">
      <Execution id="fd28b13b-d878-44b6-a07a-7389517f7838" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 132)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="63d70c4a-b1d8-2368-2a18-9c7cc948f642">
      <Execution id="9da93f38-fdcb-442a-8fe4-da4822e96420" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestDeleteUserByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="8f7ba917-f771-0dc5-f9b9-465c34344b12">
      <Execution id="43a97dd5-9308-45b5-b0d2-b41b036c74b2" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 141, LiftName = liftNamebfd79db7-af8c-48e8-a56f-c71727ccf3ed, IsOpen = True, SeatsAmount = 67, LiftingTime = 118, QueueTime = 42, ConnectedSlopes =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="2e1bb497-a85b-e1ba-bfe5-c4c75f7312bb">
      <Execution id="83e47e42-b980-46b3-917b-38b5ae891747" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestUpdateLiftByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;email10dfb83b-a1be-4fa3-86c2-fd5e6a12fc42&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="bdef3105-6168-86ba-b226-8a746ca6b565">
      <Execution id="d77712af-84ed-45df-b7ee-5bb4b616de47" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByEmailAsyncFailsWhenEmailNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 219, SlopeName = slopeName544776f5-0845-427d-b2ce-f1542ad39d62, IsOpen = True, DifficultyLevel = 50, ConnectedLifts =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="747f5763-6250-af3f-eed1-962f7ea6b012">
      <Execution id="b43f2736-a30e-417d-a60f-866e7e73f3e2" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestUpdateSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 160, LiftName = liftNameb6d353f2-bec8-47b1-8946-956567b30e7a, IsOpen = True, SeatsAmount = 240, LiftingTime = 77, QueueTime = 65, ConnectedSlopes =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="1dc6ddff-42be-88e3-3067-27e917bc21cd">
      <Execution id="e5d527e9-6dd1-473f-80f2-d24e2e8aa020" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAsyncFailsWhenLiftIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 155, LiftID = 73, IsOpen = True })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="82ea245f-987a-55a6-3c17-fe787858dec5">
      <Execution id="c3042bff-7af2-44e3-8f61-5a53afff05af" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestUpdateTurnstileByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="607e8298-f113-be33-300e-15a343893443">
      <Execution id="acf264d4-7973-4d43-9721-a3bf9798a45e" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftsAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 154)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="344bfcf5-0e93-17a8-ad74-74eedd3d604a">
      <Execution id="22059d27-9618-47d5-825c-612e9fc3d0ed" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 212, SlopeName = slopeNameeb801c6e-be6c-477f-a42c-7044dca200a6, IsOpen = True, DifficultyLevel = 130, ConnectedLifts =  }, slope2: Slope { SlopeID = 73, SlopeName = slopeName195f4ac8-4044-433c-8c0c-a710c40ac0db, IsOpen = False, DifficultyLevel = 40, ConnectedLifts =  }, lift1: Lift { LiftID = 126, LiftName = liftName4a7948ad-9697-4f9d-9fc7-04c..." storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="df263ba9-499f-98ac-1966-4132993e2701">
      <Execution id="ec2fecfb-e28c-4773-a417-0337b789830b" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftsBySlopeIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 166)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="b271c3c9-2b34-ad7c-6334-8f8d73a30614">
      <Execution id="b37e6b87-d825-489b-b2b5-a9dfc269d306" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestDeleteLiftByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 90, LiftID = 237, IsOpen = True })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="b4b909e7-655f-be2f-91ef-ab789dafd968">
      <Execution id="c85e87fc-0061-4b01-b271-46160e244fb8" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstileByIdAsyncOk" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="70951095-dd15-14db-6f5d-41d10ea1d16d" executionId="c582365e-f113-4ce8-8407-7bea9589373e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="19427f52-1e52-4d5d-5dd4-cf50a31932c9" executionId="a9353a87-d62f-4e34-a448-3033411cb4bf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9bbefb83-8311-6e03-307f-415e3495e223" executionId="e6561025-9a0b-474c-8621-35b8c107631c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ec229f70-485a-f91b-53ed-bce655f6cd58" executionId="1221f4ee-6706-499a-914b-f13cadc56104" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="607e8298-f113-be33-300e-15a343893443" executionId="acf264d4-7973-4d43-9721-a3bf9798a45e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="74b772bc-e8a1-4525-09d0-9c97a1f1656d" executionId="da7693b4-17ff-4b84-820c-8a86254d17fd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="df263ba9-499f-98ac-1966-4132993e2701" executionId="ec2fecfb-e28c-4773-a417-0337b789830b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b645985a-6284-cf02-c289-40cc3a88c50f" executionId="9df4598b-9d64-4eba-b2a3-e3de659ba7e9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="747f5763-6250-af3f-eed1-962f7ea6b012" executionId="b43f2736-a30e-417d-a60f-866e7e73f3e2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bdef3105-6168-86ba-b226-8a746ca6b565" executionId="d77712af-84ed-45df-b7ee-5bb4b616de47" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="82ea245f-987a-55a6-3c17-fe787858dec5" executionId="c3042bff-7af2-44e3-8f61-5a53afff05af" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f5c217d8-38f0-f1a7-b9b0-9885a9d10b15" executionId="7bbbc46b-9bcf-4483-ad1c-ada2bbb5c3e6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2e1bb497-a85b-e1ba-bfe5-c4c75f7312bb" executionId="83e47e42-b980-46b3-917b-38b5ae891747" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d6c279d3-95bb-3362-e9da-4fe1e695f823" executionId="09336dd3-e645-42f4-90b4-ee2bbd129c69" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f9435956-2e34-e52b-c34e-dce53665cf8e" executionId="9e03d2c7-9486-4a41-a3f8-5b2ef8f71828" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="84d16a92-bf10-4c15-27d4-63b1c50211ed" executionId="10b0c701-d0b2-4055-a389-ffa58ea4edb9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d9791764-1cb4-2602-e6e7-6a4db674d77d" executionId="73294b7d-b120-441c-9843-aab6483cd293" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b4b909e7-655f-be2f-91ef-ab789dafd968" executionId="c85e87fc-0061-4b01-b271-46160e244fb8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6b955845-0453-9f70-c8d8-60a474be65c7" executionId="1cb711ce-16cc-4239-b1f0-75c334e4e02e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30f8e924-9784-0a43-e807-094f70e06567" executionId="bd9ce440-68ec-476c-955d-c91bffbc26e1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="448a8f39-3de0-6a78-7d51-30f7d565f5ce" executionId="0c6ca7b6-f7b3-4acb-87a4-41545bce5c84" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" executionId="5ead5731-08b1-44f3-a290-1d45806ceb2a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c7ca86a7-e074-a450-a7cf-616b450d15a8" executionId="4bc22753-5dc7-433d-b428-5b49c39b6469" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a7c2bb54-0514-d120-5d9f-d013753c3432" executionId="959c804c-d8e8-4632-b02d-07b69e620de3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="faed91fb-e36f-30f4-b586-bc4d0f07a562" executionId="0d59ad03-526f-44b7-a2ac-5dc0170f7f73" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b271c3c9-2b34-ad7c-6334-8f8d73a30614" executionId="b37e6b87-d825-489b-b2b5-a9dfc269d306" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="486f7a29-db90-4f3a-1652-04c8eb8a73e0" executionId="03369eab-9e06-4aaf-a89b-5caffffaa026" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="da882158-be09-93f7-8628-495ceb74f1bf" executionId="f33ee342-5d94-4527-8d9f-8cac03682b2c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="344bfcf5-0e93-17a8-ad74-74eedd3d604a" executionId="22059d27-9618-47d5-825c-612e9fc3d0ed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3c521313-4ed6-6bce-b4f9-c359411028e7" executionId="5ec3a1da-a54f-4eef-969c-bfc09ab7ac60" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3741b26d-6ee0-6246-29e4-92009bff37b0" executionId="883e2093-9c4b-4148-918d-f53bc105c851" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c09c4c12-49d1-aa77-027a-88dcb20a6a63" executionId="f500f8b6-20f4-4c93-a8d0-694d9856aab9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1dc6ddff-42be-88e3-3067-27e917bc21cd" executionId="e5d527e9-6dd1-473f-80f2-d24e2e8aa020" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="098f34d7-a60b-afa7-b3ec-58ead6b40302" executionId="359a84be-2692-4af0-8861-40ed8ce9bb60" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="10702f1d-956e-bbdd-44ea-2c2c91e598e1" executionId="aae8d246-936c-43fb-bd0c-29c1a9002296" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8758dd2d-51de-9a9a-f49e-f75b1a012c52" executionId="57185658-cdcd-4c5b-beb9-94d44eb8f302" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" executionId="fd28b13b-d878-44b6-a07a-7389517f7838" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" executionId="43a97dd5-9308-45b5-b0d2-b41b036c74b2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="63d70c4a-b1d8-2368-2a18-9c7cc948f642" executionId="9da93f38-fdcb-442a-8fe4-da4822e96420" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="39" executed="39" passed="0" failed="39" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.5+1caef2f33e (64-bit .NET 6.0.10)
[xUnit.net 00:00:01.23]   Discovering: AccessToDB.Tests
[xUnit.net 00:00:01.34]   Discovered:  AccessToDB.Tests
[xUnit.net 00:00:01.34]   Starting:    AccessToDB.Tests
[xUnit.net 00:00:01.50]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.50]       Stack Trace:
[xUnit.net 00:00:01.50]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.50]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.50]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.50]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.50]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.50]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.50]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.50]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.50]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.50]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.50]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.50]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.54]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.54]       Stack Trace:
[xUnit.net 00:00:01.54]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.54]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.54]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.54]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.54]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.54]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.54]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.54]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.54]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.54]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.54]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.54]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.55]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.55]       Stack Trace:
[xUnit.net 00:00:01.55]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.55]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.55]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.55]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.55]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.55]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.55]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.55]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.55]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.55]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.55]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.55]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.55]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.55]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.55]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.55]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.55]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.55]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.57]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.57]       Stack Trace:
[xUnit.net 00:00:01.57]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.57]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.57]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.57]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.57]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.57]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.57]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.57]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.57]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.57]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.57]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.57]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.59]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.59]       Stack Trace:
[xUnit.net 00:00:01.59]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.59]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.59]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.59]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.59]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.59]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.59]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.59]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.59]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.59]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.59]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.59]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.60]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.60]       Stack Trace:
[xUnit.net 00:00:01.60]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.60]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.60]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.60]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.60]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.60]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.60]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.60]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.60]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.60]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.60]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.60]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.62]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.62]       Stack Trace:
[xUnit.net 00:00:01.62]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.62]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.62]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.62]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.62]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.62]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.62]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.62]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.62]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.62]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.62]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.62]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.64]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.64]       Stack Trace:
[xUnit.net 00:00:01.64]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.64]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.64]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.64]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.64]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.64]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.64]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.64]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.64]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.64]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.64]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.64]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.66]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.66]       Stack Trace:
[xUnit.net 00:00:01.66]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.66]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.66]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.66]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.66]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.66]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.66]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.66]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.66]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.66]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.66]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.66]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.69]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.69]       Stack Trace:
[xUnit.net 00:00:01.69]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.69]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.69]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.69]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.69]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.69]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.69]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.69]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.69]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.69]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.69]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.69]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.71]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.71]       Stack Trace:
[xUnit.net 00:00:01.71]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.71]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.71]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.71]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.71]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.71]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.71]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.71]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.71]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.71]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.71]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.71]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.72]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.72]       Stack Trace:
[xUnit.net 00:00:01.72]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.72]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.72]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.72]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.73]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.73]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.73]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.73]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.73]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.73]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.73]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.73]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.74]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.74]       Stack Trace:
[xUnit.net 00:00:01.74]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.74]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.74]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.74]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.74]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.74]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.74]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.74]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.74]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.74]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.74]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.74]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.76]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.76]       Stack Trace:
[xUnit.net 00:00:01.76]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.76]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.76]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.76]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.76]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.76]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.76]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.76]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.76]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.76]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.76]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.76]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.76]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.76]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.76]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.76]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.76]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.76]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.78]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.78]       Stack Trace:
[xUnit.net 00:00:01.78]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.78]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.78]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.78]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.78]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.78]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.78]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.78]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.78]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.78]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.78]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.78]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.79]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.79]       Stack Trace:
[xUnit.net 00:00:01.79]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.79]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.79]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.79]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.79]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.79]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.79]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.79]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.79]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.79]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.79]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.79]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.81]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.81]       Stack Trace:
[xUnit.net 00:00:01.81]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.81]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.81]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.81]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.81]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.81]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.81]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.81]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.81]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.81]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.81]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.81]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.83]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.83]       Stack Trace:
[xUnit.net 00:00:01.83]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.83]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.83]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.83]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.83]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.83]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.83]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.83]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.83]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.83]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.83]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.83]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.84]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.84]       Stack Trace:
[xUnit.net 00:00:01.84]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.84]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.84]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.84]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.85]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.85]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.85]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.85]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.85]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.85]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.85]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.85]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.85]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.85]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.85]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.85]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.85]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.85]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.86]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.86]       Stack Trace:
[xUnit.net 00:00:01.86]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.86]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.86]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.86]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.86]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.86]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.86]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.86]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.86]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.86]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.86]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.86]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.87]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.87]       Stack Trace:
[xUnit.net 00:00:01.87]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.87]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.87]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.87]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.87]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.87]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.87]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.87]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.87]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.87]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.87]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.88]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.89]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.89]       Stack Trace:
[xUnit.net 00:00:01.89]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.89]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.89]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.89]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.89]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.89]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.89]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.89]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.89]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.89]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.89]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.89]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.91]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.91]       Stack Trace:
[xUnit.net 00:00:01.91]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.91]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.91]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.91]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.91]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.91]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.91]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.91]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.91]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.91]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.91]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.91]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.91]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.91]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.91]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.91]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.91]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.91]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.92]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.92]       Stack Trace:
[xUnit.net 00:00:01.92]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.92]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.92]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.92]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.92]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.92]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.92]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.92]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.92]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.92]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.92]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.92]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.94]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.94]       Stack Trace:
[xUnit.net 00:00:01.94]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.94]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.94]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.94]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.94]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.94]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.94]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.94]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.94]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.94]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.94]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.94]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.95]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.95]       Stack Trace:
[xUnit.net 00:00:01.95]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.95]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.95]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.95]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.95]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.95]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.95]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.95]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.95]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.95]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.95]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.95]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.95]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.95]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.95]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.95]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.95]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.95]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.97]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.97]       Stack Trace:
[xUnit.net 00:00:01.97]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.97]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.97]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.97]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.97]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.97]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.97]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.97]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.97]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.97]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.97]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.97]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.97]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.97]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.97]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.97]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.97]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.97]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.99]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.99]       Stack Trace:
[xUnit.net 00:00:01.99]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.99]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.99]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.99]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.99]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.99]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.99]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.99]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.99]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.99]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.99]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.99]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.99]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.99]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.99]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.99]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.99]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.99]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:02.00]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:02.00]       Stack Trace:
[xUnit.net 00:00:02.00]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:02.00]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:02.00]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:02.00]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.00]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:02.00]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:02.00]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:02.00]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:02.00]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.00]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:02.00]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:02.00]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:02.00]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:02.00]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:02.00]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:02.00]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:02.00]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:02.00]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:02.02]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:02.02]       Stack Trace:
[xUnit.net 00:00:02.02]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:02.02]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:02.02]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:02.02]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.02]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:02.02]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:02.02]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:02.02]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:02.02]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.02]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:02.02]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:02.02]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:02.02]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:02.02]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:02.02]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:02.02]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:02.02]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:02.02]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:02.04]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:02.04]       Stack Trace:
[xUnit.net 00:00:02.04]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:02.04]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:02.04]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:02.04]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.04]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:02.04]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:02.04]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:02.04]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:02.04]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.04]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:02.04]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:02.04]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:02.04]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:02.04]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:02.04]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:02.04]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:02.04]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:02.04]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:02.05]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:02.05]       Stack Trace:
[xUnit.net 00:00:02.05]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:02.05]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:02.05]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:02.05]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.05]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:02.05]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:02.05]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:02.05]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:02.05]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.05]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:02.05]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:02.05]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:02.05]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:02.05]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:02.05]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:02.05]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:02.05]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:02.05]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:02.07]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:02.07]       Stack Trace:
[xUnit.net 00:00:02.07]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:02.07]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:02.07]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:02.07]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.07]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:02.07]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:02.07]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:02.07]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:02.07]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.07]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:02.07]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:02.07]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:02.07]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:02.07]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:02.07]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:02.07]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:02.07]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:02.07]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:02.08]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:02.08]       Stack Trace:
[xUnit.net 00:00:02.08]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:02.08]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:02.08]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:02.08]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.08]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:02.08]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:02.08]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:02.08]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:02.08]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.08]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:02.08]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:02.08]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:02.08]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:02.08]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:02.08]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:02.08]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:02.08]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:02.08]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:02.09]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:02.09]       Stack Trace:
[xUnit.net 00:00:02.09]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:02.09]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:02.09]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:02.09]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.09]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:02.09]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:02.09]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:02.09]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:02.09]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.09]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:02.09]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:02.09]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:02.09]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:02.09]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:02.09]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:02.09]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:02.09]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:02.09]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:02.10]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:02.10]       Stack Trace:
[xUnit.net 00:00:02.10]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:02.10]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:02.10]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:02.10]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.10]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:02.10]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:02.10]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:02.10]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:02.10]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.10]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:02.10]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:02.10]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:02.10]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:02.10]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:02.10]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:02.10]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:02.10]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:02.10]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:02.12]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:02.12]       Stack Trace:
[xUnit.net 00:00:02.12]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:02.12]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:02.12]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:02.12]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.12]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:02.12]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:02.12]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:02.12]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:02.12]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.12]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:02.12]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:02.12]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:02.12]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:02.12]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:02.12]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:02.12]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:02.12]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:02.12]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:02.13]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:02.13]       Stack Trace:
[xUnit.net 00:00:02.13]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:02.13]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:02.13]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:02.13]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.13]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:02.13]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:02.13]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:02.13]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:02.13]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.13]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:02.13]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:02.13]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:02.13]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:02.13]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:02.13]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:02.13]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:02.13]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:02.13]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:02.14]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:02.14]       Stack Trace:
[xUnit.net 00:00:02.14]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:02.14]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:02.14]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:02.14]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.14]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:02.14]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:02.14]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:02.14]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:02.14]         --- End of stack trace from previous location ---
[xUnit.net 00:00:02.14]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:02.14]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:02.14]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:02.14]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:02.14]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:02.14]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:02.14]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:02.14]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:02.14]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:02.15]   Finished:    AccessToDB.Tests
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.5081735+03:00">
        <Text>[xUnit.net 00:00:01.50]     AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 123, SlopeName = slopeNamef6a78b19-0e29-45ed-a2b1-ae4f10c24099, IsOpen = True, DifficultyLevel = 120, ConnectedLifts =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.5454416+03:00">
        <Text>[xUnit.net 00:00:01.54]     AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 208, SlopeName = slopeName4c7e3a16-1e23-4b87-b448-8cf222b607f8, IsOpen = True, DifficultyLevel = 122, ConnectedLifts =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.5628819+03:00">
        <Text>[xUnit.net 00:00:01.55]     AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.5783486+03:00">
        <Text>[xUnit.net 00:00:01.57]     AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 219, SlopeName = slopeName544776f5-0845-427d-b2ce-f1542ad39d62, IsOpen = True, DifficultyLevel = 50, ConnectedLifts =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.5952627+03:00">
        <Text>[xUnit.net 00:00:01.59]     AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.6110287+03:00">
        <Text>[xUnit.net 00:00:01.60]     AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 115) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.6287067+03:00">
        <Text>[xUnit.net 00:00:01.62]     AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: "slopeName8164c302-04c2-4f53-9516-cf296e9b98b6") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.6512171+03:00">
        <Text>[xUnit.net 00:00:01.64]     AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 119, CardID = 161, UserEmail = UserEmail19962a7e-d41e-4fb5-9e7d-7a2389899d13, Password = passworded3875a5-9392-4da1-9168-c698941db206, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.6688023+03:00">
        <Text>[xUnit.net 00:00:01.66]     AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.7317822+03:00">
        <Text>[xUnit.net 00:00:01.69]     AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 145, CardID = 59, UserEmail = UserEmail316e493d-db3c-4c5f-a33d-baf6569e0ee7, Password = password992304de-acfb-44bb-96fe-1febfbeea221, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.7319016+03:00">
        <Text>[xUnit.net 00:00:01.71]     AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: "userEmail065ec5ab-f691-40e6-b039-44c9164632ff") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.7342171+03:00">
        <Text>[xUnit.net 00:00:01.72]     AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 132) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.7507473+03:00">
        <Text>[xUnit.net 00:00:01.74]     AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: "email10dfb83b-a1be-4fa3-86c2-fd5e6a12fc42") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.7669164+03:00">
        <Text>[xUnit.net 00:00:01.76]     AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 226, CardID = 250, UserEmail = UserEmail760d5845-33ad-46e0-986e-13f1a6e497e7, Password = passwordb4869f5d-921f-47b0-9bdf-18d4df9189d3, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.7861578+03:00">
        <Text>[xUnit.net 00:00:01.78]     AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 18, CardID = 192, UserEmail = UserEmail863f3b07-407c-4521-b16c-f3e04fb4bebd, Password = password05065bdc-bc9a-4545-a661-2d178e0b04ec, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.8028690+03:00">
        <Text>[xUnit.net 00:00:01.79]     AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.8198569+03:00">
        <Text>[xUnit.net 00:00:01.81]     AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.8368096+03:00">
        <Text>[xUnit.net 00:00:01.83]     AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 151, LiftName = liftName91266bf0-014f-491d-a596-3b4113860b69, IsOpen = True, SeatsAmount = 2, LiftingTime = 150, QueueTime = 24, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.8588419+03:00">
        <Text>[xUnit.net 00:00:01.84]     AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 141, LiftName = liftNamebfd79db7-af8c-48e8-a56f-c71727ccf3ed, IsOpen = True, SeatsAmount = 67, LiftingTime = 118, QueueTime = 42, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.8687132+03:00">
        <Text>[xUnit.net 00:00:01.86]     AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.8837701+03:00">
        <Text>[xUnit.net 00:00:01.87]     AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 160, LiftName = liftNameb6d353f2-bec8-47b1-8946-956567b30e7a, IsOpen = True, SeatsAmount = 240, LiftingTime = 77, QueueTime = 65, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.8992831+03:00">
        <Text>[xUnit.net 00:00:01.89]     AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 166) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.9149497+03:00">
        <Text>[xUnit.net 00:00:01.91]     AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: "liftName782a9f57-2d16-483e-9a1e-600481589159") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.9310849+03:00">
        <Text>[xUnit.net 00:00:01.92]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 212, SlopeName = slopeNameeb801c6e-be6c-477f-a42c-7044dca200a6, IsOpen = True, DifficultyLevel = 130, ConnectedLifts =  }, slope2: Slope { SlopeID = 73, SlopeName = slopeName195f4ac8-4044-433c-8c0c-a710c40ac0db, IsOpen = False, DifficultyLevel = 40, ConnectedLifts =  }, lift1: Lift { LiftID = 126, LiftName = liftName4a7948ad-9697-4f9d-9fc7-04c5e81faff0, IsOpen = True, SeatsAmount = 15, LiftingTime = 231, QueueTime = 125, ConnectedSlopes =  }, lift2: Lift { LiftID = 139, LiftName = liftName85d36eeb-5ade-4285-82cf-221a81fc49aa, IsOpen = False, SeatsAmount = 74, LiftingTime = 82, QueueTime = 131, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.9470863+03:00">
        <Text>[xUnit.net 00:00:01.94]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 10, LiftID = 43, SlopeID = 60 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.9630582+03:00">
        <Text>[xUnit.net 00:00:01.95]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 190, LiftID = 24, SlopeID = 118 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.9806390+03:00">
        <Text>[xUnit.net 00:00:01.97]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 154) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:57.9987085+03:00">
        <Text>[xUnit.net 00:00:01.99]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 167, LiftID = 18, SlopeID = 225 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:58.0109735+03:00">
        <Text>[xUnit.net 00:00:02.00]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 169, LiftID = 73, SlopeID = 47 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:58.0307180+03:00">
        <Text>[xUnit.net 00:00:02.02]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 35, LiftID = 227, SlopeID = 11 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:58.0460040+03:00">
        <Text>[xUnit.net 00:00:02.04]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:58.0607236+03:00">
        <Text>[xUnit.net 00:00:02.05]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:58.0749829+03:00">
        <Text>[xUnit.net 00:00:02.07]     AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 202, LiftID = 117, IsOpen = True }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:58.0867264+03:00">
        <Text>[xUnit.net 00:00:02.08]     AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 179) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:58.0994876+03:00">
        <Text>[xUnit.net 00:00:02.09]     AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:58.1121674+03:00">
        <Text>[xUnit.net 00:00:02.10]     AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:58.1287200+03:00">
        <Text>[xUnit.net 00:00:02.12]     AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 155, LiftID = 73, IsOpen = True }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:58.1401507+03:00">
        <Text>[xUnit.net 00:00:02.13]     AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 249) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:22:58.1510100+03:00">
        <Text>[xUnit.net 00:00:02.14]     AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 90, LiftID = 237, IsOpen = True }) [FAIL]</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>