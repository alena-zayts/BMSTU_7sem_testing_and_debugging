<?xml version="1.0" encoding="utf-8"?>
<TestRun id="dd25c866-ec95-4837-97b9-637c6fb3a2b0" name="alena@DESKTOP-TJ9D65N 2022-10-15 20:42:44" runUser="DESKTOP-TJ9D65N\alena" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2022-10-15T20:42:44.7175369+03:00" queuing="2022-10-15T20:42:44.7175372+03:00" start="2022-10-15T20:42:42.6494275+03:00" finish="2022-10-15T20:43:05.8329910+03:00" />
  <TestSettings name="default" id="8d26db68-39e0-4095-8cc4-ce504fa40b75">
    <Deployment runDeploymentRoot="alena_DESKTOP-TJ9D65N_2022-10-15_20_42_44" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="7741b406-bcf5-4562-b51c-6857605a1dea" testId="8bfd705f-8f90-7f12-8e0a-c44821547247" testName="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 91)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5565278" startTime="2022-10-15T20:43:02.6958987+03:00" endTime="2022-10-15T20:43:02.6958988+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7741b406-bcf5-4562-b51c-6857605a1dea" />
    <UnitTestResult executionId="d4942d30-8663-4807-aa7b-b80130067832" testId="debbb1cb-7001-dedd-9c0c-66847431a4e9" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 12, CardID = 197, UserEmail = UserEmail9ac0df90-7b9d-4dfd-854b-9e9ec6ac0c9a, Password = passwordfbb4d886-226a-4979-9f5d-28d27fb6cd39, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6033783" startTime="2022-10-15T20:42:45.0990533+03:00" endTime="2022-10-15T20:42:45.0990534+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d4942d30-8663-4807-aa7b-b80130067832" />
    <UnitTestResult executionId="ca421135-3783-4328-84cc-ca70049ce008" testId="84e67388-eadd-bd5e-09de-be72af8b51fd" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 196, CardID = 50, UserEmail = UserEmail7cd1ade4-74a7-4626-b578-0e9d56414f0d, Password = password83242142-8401-4634-812a-01d0bcfce70d, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5972588" startTime="2022-10-15T20:42:46.9178411+03:00" endTime="2022-10-15T20:42:46.9178413+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ca421135-3783-4328-84cc-ca70049ce008" />
    <UnitTestResult executionId="4516c842-fc45-4191-bee7-a9b563c4a63a" testId="4e68bedb-89ab-d0b9-e9e4-f11fbbcf87c6" testName="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 166, LiftName = liftName152fae92-6354-4010-a123-35018d2cdb54, IsOpen = True, SeatsAmount = 161, LiftingTime = 83, QueueTime = 146, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6183275" startTime="2022-10-15T20:43:04.5495186+03:00" endTime="2022-10-15T20:43:04.5495187+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4516c842-fc45-4191-bee7-a9b563c4a63a" />
    <UnitTestResult executionId="40c34b80-41b4-48ae-8df3-842340d7bbd5" testId="27141a03-0d0a-f28e-a959-6d35f01b99dc" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeName4071dafc-8769-49fb-bdc3-b1b0b6c70dbe&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5686595" startTime="2022-10-15T20:42:59.6288962+03:00" endTime="2022-10-15T20:42:59.6288966+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="40c34b80-41b4-48ae-8df3-842340d7bbd5" />
    <UnitTestResult executionId="4e746ed7-50c3-469f-8a1f-2c4a1b611756" testId="d3785245-ddaa-f602-5e18-ecbaad5b1e1a" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 186)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.7546116" startTime="2022-10-15T20:42:50.6195159+03:00" endTime="2022-10-15T20:42:50.6195161+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4e746ed7-50c3-469f-8a1f-2c4a1b611756" />
    <UnitTestResult executionId="a5c06154-c530-42d0-acc3-8786b2eb3fed" testId="cbb4f12b-d5d0-50fa-2263-cbdb85270bd7" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 141)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5644743" startTime="2022-10-15T20:42:51.7992324+03:00" endTime="2022-10-15T20:42:51.7992330+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a5c06154-c530-42d0-acc3-8786b2eb3fed" />
    <UnitTestResult executionId="5468c8eb-3726-4ae0-bcfa-0746e8c70d4d" testId="3c521313-4ed6-6bce-b4f9-c359411028e7" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5574631" startTime="2022-10-15T20:42:52.3606733+03:00" endTime="2022-10-15T20:42:52.3606736+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5468c8eb-3726-4ae0-bcfa-0746e8c70d4d" />
    <UnitTestResult executionId="121aecc6-2762-4122-bc22-d63052c467f5" testId="5dae6bb1-ca87-8010-b325-afa6990fab2a" testName="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 24)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5555797" startTime="2022-10-15T20:42:47.4775832+03:00" endTime="2022-10-15T20:42:47.4775833+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="121aecc6-2762-4122-bc22-d63052c467f5" />
    <UnitTestResult executionId="51287dbc-7210-4054-9c0c-04b734115ea2" testId="c3f24f79-2f41-ded1-ad65-cdb608d9e2e9" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;email8270a08f-8a28-48b3-97d0-d006f3e0eee6&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5609096" startTime="2022-10-15T20:42:48.6099491+03:00" endTime="2022-10-15T20:42:48.6099494+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="51287dbc-7210-4054-9c0c-04b734115ea2" />
    <UnitTestResult executionId="272bf4ee-f024-4f2a-83ca-ed2120749095" testId="46d9962e-6cc5-e66c-89e6-4ba6f97c4be0" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 61, LiftID = 151, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6076374" startTime="2022-10-15T20:42:51.2314180+03:00" endTime="2022-10-15T20:42:51.2314181+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="272bf4ee-f024-4f2a-83ca-ed2120749095" />
    <UnitTestResult executionId="35b18830-348c-4abd-89b2-37498182ebc3" testId="1e4eb899-e066-0889-7781-d2b3b5d01d56" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmail89201006-5f81-42f5-89a4-2dfb8137a3c8&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5634875" startTime="2022-10-15T20:42:48.0442882+03:00" endTime="2022-10-15T20:42:48.0442883+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="35b18830-348c-4abd-89b2-37498182ebc3" />
    <UnitTestResult executionId="1dbf7e38-f865-4b55-9fb1-7ae5609c8a7c" testId="3193562c-5489-1c08-6d4c-7719935c26c4" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 99, LiftID = 155, SlopeID = 38 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6094652" startTime="2022-10-15T20:42:57.2817842+03:00" endTime="2022-10-15T20:42:57.2817845+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1dbf7e38-f865-4b55-9fb1-7ae5609c8a7c" />
    <UnitTestResult executionId="9ba43ff5-bbd0-4dac-b84e-5aa79d94c140" testId="1aa448dd-c0ca-9ac6-179e-eee0bc6ee238" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 88, CardID = 149, UserEmail = UserEmail67ff5aba-46db-489b-8860-d65cb6821699, Password = passwordbe503147-3cdd-414d-a47a-4c901919e8e4, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5966119" startTime="2022-10-15T20:42:46.3167935+03:00" endTime="2022-10-15T20:42:46.3167938+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9ba43ff5-bbd0-4dac-b84e-5aa79d94c140" />
    <UnitTestResult executionId="7271a25c-b599-4374-9a52-ac464ac35f83" testId="c6f0213a-c15d-5e8b-ad23-336db8fc7e1c" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 149, LiftID = 171, SlopeID = 183 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5949912" startTime="2022-10-15T20:42:56.0563432+03:00" endTime="2022-10-15T20:42:56.0563434+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7271a25c-b599-4374-9a52-ac464ac35f83" />
    <UnitTestResult executionId="e67969ed-826d-4ad3-9aec-5b89a4a1cde6" testId="30f8e924-9784-0a43-e807-094f70e06567" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6060581" startTime="2022-10-15T20:42:57.8927967+03:00" endTime="2022-10-15T20:42:57.8927969+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e67969ed-826d-4ad3-9aec-5b89a4a1cde6" />
    <UnitTestResult executionId="a9b8ec98-a142-4196-b319-129d1a2e75aa" testId="c244a57e-0b7e-97f4-691f-30737180add2" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 166, LiftID = 66, SlopeID = 123 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5853070" startTime="2022-10-15T20:42:59.0483214+03:00" endTime="2022-10-15T20:42:59.0483221+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a9b8ec98-a142-4196-b319-129d1a2e75aa" />
    <UnitTestResult executionId="05ac5bb8-c283-42cd-8c17-b2c014de90aa" testId="ec229f70-485a-f91b-53ed-bce655f6cd58" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6046302" startTime="2022-10-15T20:43:03.9199489+03:00" endTime="2022-10-15T20:43:03.9199492+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="05ac5bb8-c283-42cd-8c17-b2c014de90aa" />
    <UnitTestResult executionId="cdb7d5b5-7cc5-4f2b-a472-ce17e24f1072" testId="24bbd0ce-8712-5a5d-78f3-f45714f1de70" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftNamee50ba8d3-d424-41be-a079-12ee21ce6723&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-10-15T20:43:05.7497555+03:00" endTime="2022-10-15T20:43:05.7497559+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cdb7d5b5-7cc5-4f2b-a472-ce17e24f1072">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.</Message>
          <StackTrace>   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadList(IMsgPackReader reader, UInt32 length)&#xD;
   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadArray(IMsgPackReader reader, UInt32 length)&#xD;
   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.Read(IMsgPackReader reader)&#xD;
   at ProGaudi.Tarantool.Client.Converters.SpaceConverter.Read(IMsgPackReader reader)&#xD;
   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadArray(IMsgPackReader reader, UInt32 length)&#xD;
   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.Read(IMsgPackReader reader)&#xD;
   at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.ProGaudi.MsgPack.Light.IMsgPackConverter&lt;ProGaudi.Tarantool.Client.Model.Responses.DataResponse&lt;T&gt;&gt;.Read(IMsgPackReader reader)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.Schema.Select[T](UInt32 spaceId, Iterator iterator, UInt32 id)&#xD;
   at ProGaudi.Tarantool.Client.Schema.Reload()&#xD;
   at ProGaudi.Tarantool.Client.Box.Connect()&#xD;
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)&#xD;
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs:line 52&#xD;
   at AccessToDB.TarantoolContext..ctor(String connection_string) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs:line 32&#xD;
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsRepositoryTests.cs:line 28&#xD;
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8a8e4d59-7968-47b9-a3e8-9e84dd0823c3" testId="1de0f0e8-30ca-c0b4-ea12-ab61a56c6b70" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 170, SlopeName = slopeNamed83496df-a51b-425f-b40f-08dae528afc6, IsOpen = True, DifficultyLevel = 44, ConnectedLifts =  }, slope2: Slope { SlopeID = 151, SlopeName = slopeNamefbe1c63b-8a9b-4979-8cf3-c52add63b936, IsOpen = False, DifficultyLevel = 249, ConnectedLifts =  }, lift1: Lift { LiftID = 74, LiftName = liftNameef5ce81e-8a6d-4954-96b8-5891c7b8f863, IsOpen = True, SeatsAmount = 241, LiftingTime = 49, QueueTime = 181, ConnectedSlopes =  }, lift2: Lift { LiftID = 3, LiftName = liftName320d5fe7-7a6d-40ed-9c10-f2bf1b19c9b6, IsOpen = False, SeatsAmount = 60, LiftingTime = 178, QueueTime = 220, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6660348" startTime="2022-10-15T20:42:55.4574840+03:00" endTime="2022-10-15T20:42:55.4574842+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8a8e4d59-7968-47b9-a3e8-9e84dd0823c3" />
    <UnitTestResult executionId="4d2d89e8-30a7-46c1-94f6-317e159ec453" testId="af17f7c3-7d84-4b28-aeaa-62fb7130a937" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 79, LiftID = 165, SlopeID = 116 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6189823" startTime="2022-10-15T20:42:54.7812103+03:00" endTime="2022-10-15T20:42:54.7812111+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4d2d89e8-30a7-46c1-94f6-317e159ec453" />
    <UnitTestResult executionId="c075c25e-35b4-4893-bae6-95118e5f6c0b" testId="607e8298-f113-be33-300e-15a343893443" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5619079" startTime="2022-10-15T20:43:05.7139848+03:00" endTime="2022-10-15T20:43:05.7139849+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c075c25e-35b4-4893-bae6-95118e5f6c0b" />
    <UnitTestResult executionId="26007a2d-b856-43f8-a78e-9dba78c15fcd" testId="b0fda516-472d-3363-e212-4b1af367163b" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 246, SlopeName = slopeName25e0fba5-6ced-4194-ac2f-338a51f16c15, IsOpen = True, DifficultyLevel = 95, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6087834" startTime="2022-10-15T20:43:01.5325969+03:00" endTime="2022-10-15T20:43:01.5325985+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="26007a2d-b856-43f8-a78e-9dba78c15fcd" />
    <UnitTestResult executionId="978c9970-8312-48ec-85b7-7c616ecda4cc" testId="f9435956-2e34-e52b-c34e-dce53665cf8e" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6037643" startTime="2022-10-15T20:42:52.9717755+03:00" endTime="2022-10-15T20:42:52.9717756+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="978c9970-8312-48ec-85b7-7c616ecda4cc" />
    <UnitTestResult executionId="1d24ce2d-007f-4bce-ab3b-d74b13b5c987" testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6199936" startTime="2022-10-15T20:42:49.2341350+03:00" endTime="2022-10-15T20:42:49.2341355+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1d24ce2d-007f-4bce-ab3b-d74b13b5c987" />
    <UnitTestResult executionId="8c514975-818f-4abc-b1c2-5d74d97a129d" testId="716903a7-46d8-a1bb-7f98-e47f48dbf0a0" testName="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 95)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5565073" startTime="2022-10-15T20:43:00.1954773+03:00" endTime="2022-10-15T20:43:00.1954774+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8c514975-818f-4abc-b1c2-5d74d97a129d" />
    <UnitTestResult executionId="8f23ceee-9fb6-420b-ac80-236954f2dbda" testId="581d28f1-f116-07f3-6241-0ab32cba16d0" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 220, LiftID = 122, SlopeID = 157 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6061515" startTime="2022-10-15T20:42:56.6687261+03:00" endTime="2022-10-15T20:42:56.6687263+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8f23ceee-9fb6-420b-ac80-236954f2dbda" />
    <UnitTestResult executionId="2f034ace-f4d1-4a7c-806c-23e2a58f9cac" testId="f866447c-ef94-257d-162a-4e5a55164b89" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 60, LiftID = 122, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6056181" startTime="2022-10-15T20:42:49.8613884+03:00" endTime="2022-10-15T20:42:49.8613886+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2f034ace-f4d1-4a7c-806c-23e2a58f9cac" />
    <UnitTestResult executionId="df428d00-3fa0-4d9a-ae96-e0c108d92356" testId="9bbefb83-8311-6e03-307f-415e3495e223" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-10-15T20:43:00.9225315+03:00" endTime="2022-10-15T20:43:00.9225317+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="df428d00-3fa0-4d9a-ae96-e0c108d92356">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.</Message>
          <StackTrace>   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadList(IMsgPackReader reader, UInt32 length)&#xD;
   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadArray(IMsgPackReader reader, UInt32 length)&#xD;
   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.Read(IMsgPackReader reader)&#xD;
   at ProGaudi.Tarantool.Client.Converters.SpaceConverter.Read(IMsgPackReader reader)&#xD;
   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadArray(IMsgPackReader reader, UInt32 length)&#xD;
   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.Read(IMsgPackReader reader)&#xD;
   at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.ProGaudi.MsgPack.Light.IMsgPackConverter&lt;ProGaudi.Tarantool.Client.Model.Responses.DataResponse&lt;T&gt;&gt;.Read(IMsgPackReader reader)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.Schema.Select[T](UInt32 spaceId, Iterator iterator, UInt32 id)&#xD;
   at ProGaudi.Tarantool.Client.Schema.Reload()&#xD;
   at ProGaudi.Tarantool.Client.Box.Connect()&#xD;
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)&#xD;
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs:line 52&#xD;
   at AccessToDB.TarantoolContext..ctor(String connection_string) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs:line 32&#xD;
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\SlopesRepositoryTests.cs:line 28&#xD;
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0b873f10-9aa2-4997-9d43-dfdb8a2328c2" testId="3741b26d-6ee0-6246-29e4-92009bff37b0" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5911012" startTime="2022-10-15T20:42:44.4714568+03:00" endTime="2022-10-15T20:42:44.4714792+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0b873f10-9aa2-4997-9d43-dfdb8a2328c2" />
    <UnitTestResult executionId="adc5bf8c-daa5-424a-8a1d-1204f60e9953" testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5615597" startTime="2022-10-15T20:42:58.4576147+03:00" endTime="2022-10-15T20:42:58.4576149+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="adc5bf8c-daa5-424a-8a1d-1204f60e9953" />
    <UnitTestResult executionId="aab4101d-8a33-4098-9615-c9d315f14382" testId="66d9ceb4-8c5d-4146-1d9b-779e5630cade" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 213, LiftID = 10, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5919903" startTime="2022-10-15T20:42:53.5677192+03:00" endTime="2022-10-15T20:42:53.5677196+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="aab4101d-8a33-4098-9615-c9d315f14382" />
    <UnitTestResult executionId="dc2a93e7-de41-4806-aba8-1d933d18e847" testId="a91bd0bf-c665-8d78-3dd3-3630f17dd8aa" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 112)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5776273" startTime="2022-10-15T20:42:54.1522552+03:00" endTime="2022-10-15T20:42:54.1522559+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dc2a93e7-de41-4806-aba8-1d933d18e847" />
    <UnitTestResult executionId="f7b59afd-dcce-4a18-b402-6bed27c1b487" testId="6a12562c-b229-6eab-ce8a-134746095010" testName="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 197, SlopeName = slopeName581b8cdd-70b3-4f69-ad31-4073ca1c44ea, IsOpen = True, DifficultyLevel = 13, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6114225" startTime="2022-10-15T20:43:00.8099238+03:00" endTime="2022-10-15T20:43:00.8099240+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f7b59afd-dcce-4a18-b402-6bed27c1b487" />
    <UnitTestResult executionId="6278e971-27b3-4571-b4e2-cb83b0ec3b8a" testId="8990d097-1525-fce9-138a-eec8fb5dd9d5" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 5, SlopeName = slopeName167498f9-4895-432d-9adb-7f9476148d34, IsOpen = True, DifficultyLevel = 224, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5933103" startTime="2022-10-15T20:43:02.1349997+03:00" endTime="2022-10-15T20:43:02.1349999+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6278e971-27b3-4571-b4e2-cb83b0ec3b8a" />
    <UnitTestResult executionId="72427efb-5056-4043-993e-6887c5fe3e4f" testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-10-15T20:43:00.9092386+03:00" endTime="2022-10-15T20:43:00.9092389+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="72427efb-5056-4043-993e-6887c5fe3e4f">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.</Message>
          <StackTrace>   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadList(IMsgPackReader reader, UInt32 length)&#xD;
   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadArray(IMsgPackReader reader, UInt32 length)&#xD;
   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.Read(IMsgPackReader reader)&#xD;
   at ProGaudi.Tarantool.Client.Converters.SpaceConverter.Read(IMsgPackReader reader)&#xD;
   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadArray(IMsgPackReader reader, UInt32 length)&#xD;
   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.Read(IMsgPackReader reader)&#xD;
   at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.ProGaudi.MsgPack.Light.IMsgPackConverter&lt;ProGaudi.Tarantool.Client.Model.Responses.DataResponse&lt;T&gt;&gt;.Read(IMsgPackReader reader)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.Schema.Select[T](UInt32 spaceId, Iterator iterator, UInt32 id)&#xD;
   at ProGaudi.Tarantool.Client.Schema.Reload()&#xD;
   at ProGaudi.Tarantool.Client.Box.Connect()&#xD;
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)&#xD;
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs:line 52&#xD;
   at AccessToDB.TarantoolContext..ctor(String connection_string) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs:line 32&#xD;
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\SlopesRepositoryTests.cs:line 28&#xD;
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="488ef116-2cab-421f-b7c0-b782db48c297" testId="1538bb98-34f2-3b35-41ed-c58161a5ee45" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 225, LiftName = liftName1320b04d-8dbe-4bc0-91de-51042d13d016, IsOpen = True, SeatsAmount = 187, LiftingTime = 148, QueueTime = 50, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6105056" startTime="2022-10-15T20:43:03.3101438+03:00" endTime="2022-10-15T20:43:03.3101439+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="488ef116-2cab-421f-b7c0-b782db48c297" />
    <UnitTestResult executionId="53a2b9dc-1717-4539-9c5d-b3efd7bc5f0f" testId="6596b17b-5d18-ec7e-d0a1-16ddfbef0b58" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 72, LiftName = liftNamef5bbfdcf-f3e3-4198-b0a3-720623f558bb, IsOpen = True, SeatsAmount = 209, LiftingTime = 199, QueueTime = 8, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.5943024" startTime="2022-10-15T20:43:05.1469251+03:00" endTime="2022-10-15T20:43:05.1469252+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="53a2b9dc-1717-4539-9c5d-b3efd7bc5f0f" />
    <UnitTestResult executionId="81f90baf-87af-40a1-b38e-40c097609b26" testId="37c61844-8295-d2b3-39e5-dc90cdc2d50e" testName="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 107, CardID = 145, UserEmail = UserEmailf11a3eaa-b688-410a-9cfd-38fd3ef6a879, Password = passwordb17ccb89-37ef-4ed0-9e29-1e255ee3df7f, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.6137572" startTime="2022-10-15T20:42:45.7163738+03:00" endTime="2022-10-15T20:42:45.7163739+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="81f90baf-87af-40a1-b38e-40c097609b26" />
  </Results>
  <TestDefinitions>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 225, LiftName = liftName1320b04d-8dbe-4bc0-91de-51042d13d016, IsOpen = True, SeatsAmount = 187, LiftingTime = 148, QueueTime = 50, ConnectedSlopes =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="1538bb98-34f2-3b35-41ed-c58161a5ee45">
      <Execution id="488ef116-2cab-421f-b7c0-b782db48c297" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAsyncFailsWhenLiftIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;email8270a08f-8a28-48b3-97d0-d006f3e0eee6&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="c3f24f79-2f41-ded1-ad65-cdb608d9e2e9">
      <Execution id="51287dbc-7210-4054-9c0c-04b734115ea2" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByEmailAsyncFailsWhenEmailNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="3741b26d-6ee0-6246-29e4-92009bff37b0">
      <Execution id="0b873f10-9aa2-4997-9d43-dfdb8a2328c2" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUsersAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 166, LiftName = liftName152fae92-6354-4010-a123-35018d2cdb54, IsOpen = True, SeatsAmount = 161, LiftingTime = 83, QueueTime = 146, ConnectedSlopes =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="4e68bedb-89ab-d0b9-e9e4-f11fbbcf87c6">
      <Execution id="4516c842-fc45-4191-bee7-a9b563c4a63a" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestUpdateLiftByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 196, CardID = 50, UserEmail = UserEmail7cd1ade4-74a7-4626-b578-0e9d56414f0d, Password = password83242142-8401-4634-812a-01d0bcfce70d, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="84e67388-eadd-bd5e-09de-be72af8b51fd">
      <Execution id="ca421135-3783-4328-84cc-ca70049ce008" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserIdExistsAsyncTrue" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 91)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="8bfd705f-8f90-7f12-8e0a-c44821547247">
      <Execution id="7741b406-bcf5-4562-b51c-6857605a1dea" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestDeleteLiftByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="f9435956-2e34-e52b-c34e-dce53665cf8e">
      <Execution id="978c9970-8312-48ec-85b7-7c616ecda4cc" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 166, LiftID = 66, SlopeID = 123 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="c244a57e-0b7e-97f4-691f-30737180add2">
      <Execution id="a9b8ec98-a142-4196-b319-129d1a2e75aa" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 112)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="a91bd0bf-c665-8d78-3dd3-3630f17dd8aa">
      <Execution id="dc2a93e7-de41-4806-aba8-1d933d18e847" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="4145f44e-b4b1-a618-09e8-c631496e6f1a">
      <Execution id="adc5bf8c-daa5-424a-8a1d-1204f60e9953" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 79, LiftID = 165, SlopeID = 116 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="af17f7c3-7d84-4b28-aeaa-62fb7130a937">
      <Execution id="4d2d89e8-30a7-46c1-94f6-317e159ec453" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopesByIDsAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 186)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="d3785245-ddaa-f602-5e18-ecbaad5b1e1a">
      <Execution id="4e746ed7-50c3-469f-8a1f-2c4a1b611756" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesByLiftIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 213, LiftID = 10, IsOpen = True })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="66d9ceb4-8c5d-4146-1d9b-779e5630cade">
      <Execution id="aab4101d-8a33-4098-9615-c9d315f14382" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstileByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 99, LiftID = 155, SlopeID = 38 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="3193562c-5489-1c08-6d4c-7719935c26c4">
      <Execution id="1dbf7e38-f865-4b55-9fb1-7ae5609c8a7c" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 60, LiftID = 122, IsOpen = True })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="f866447c-ef94-257d-162a-4e5a55164b89">
      <Execution id="2f034ace-f4d1-4a7c-806c-23e2a58f9cac" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestUpdateTurnstileByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 246, SlopeName = slopeName25e0fba5-6ced-4194-ac2f-338a51f16c15, IsOpen = True, DifficultyLevel = 95, ConnectedLifts =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="b0fda516-472d-3363-e212-4b1af367163b">
      <Execution id="26007a2d-b856-43f8-a78e-9dba78c15fcd" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAsyncFailsWhenSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeName4071dafc-8769-49fb-bdc3-b1b0b6c70dbe&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="27141a03-0d0a-f28e-a959-6d35f01b99dc">
      <Execution id="40c34b80-41b4-48ae-8df3-842340d7bbd5" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="9bbefb83-8311-6e03-307f-415e3495e223">
      <Execution id="df428d00-3fa0-4d9a-ae96-e0c108d92356" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="ec229f70-485a-f91b-53ed-bce655f6cd58">
      <Execution id="05ac5bb8-c283-42cd-8c17-b2c014de90aa" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 95)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="716903a7-46d8-a1bb-7f98-e47f48dbf0a0">
      <Execution id="8c514975-818f-4abc-b1c2-5d74d97a129d" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestDeleteSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="3c521313-4ed6-6bce-b4f9-c359411028e7">
      <Execution id="5468c8eb-3726-4ae0-bcfa-0746e8c70d4d" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 197, SlopeName = slopeName581b8cdd-70b3-4f69-ad31-4073ca1c44ea, IsOpen = True, DifficultyLevel = 13, ConnectedLifts =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="6a12562c-b229-6eab-ce8a-134746095010">
      <Execution id="f7b59afd-dcce-4a18-b402-6bed27c1b487" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestUpdateSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="30f8e924-9784-0a43-e807-094f70e06567">
      <Execution id="e67969ed-826d-4ad3-9aec-5b89a4a1cde6" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 5, SlopeName = slopeName167498f9-4895-432d-9adb-7f9476148d34, IsOpen = True, DifficultyLevel = 224, ConnectedLifts =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="8990d097-1525-fce9-138a-eec8fb5dd9d5">
      <Execution id="6278e971-27b3-4571-b4e2-cb83b0ec3b8a" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 149, LiftID = 171, SlopeID = 183 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="c6f0213a-c15d-5e8b-ad23-336db8fc7e1c">
      <Execution id="7271a25c-b599-4374-9a52-ac464ac35f83" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 61, LiftID = 151, IsOpen = True })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="46d9962e-6cc5-e66c-89e6-4ba6f97c4be0">
      <Execution id="272bf4ee-f024-4f2a-83ca-ed2120749095" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 88, CardID = 149, UserEmail = UserEmail67ff5aba-46db-489b-8860-d65cb6821699, Password = passwordbe503147-3cdd-414d-a47a-4c901919e8e4, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="1aa448dd-c0ca-9ac6-179e-eee0bc6ee238">
      <Execution id="9ba43ff5-bbd0-4dac-b84e-5aa79d94c140" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 107, CardID = 145, UserEmail = UserEmailf11a3eaa-b688-410a-9cfd-38fd3ef6a879, Password = passwordb17ccb89-37ef-4ed0-9e29-1e255ee3df7f, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="37c61844-8295-d2b3-39e5-dc90cdc2d50e">
      <Execution id="81f90baf-87af-40a1-b38e-40c097609b26" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestUpdateUserByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e">
      <Execution id="1d24ce2d-007f-4bce-ab3b-d74b13b5c987" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 170, SlopeName = slopeNamed83496df-a51b-425f-b40f-08dae528afc6, IsOpen = True, DifficultyLevel = 44, ConnectedLifts =  }, slope2: Slope { SlopeID = 151, SlopeName = slopeNamefbe1c63b-8a9b-4979-8cf3-c52add63b936, IsOpen = False, DifficultyLevel = 249, ConnectedLifts =  }, lift1: Lift { LiftID = 74, LiftName = liftNameef5ce81e-8a6d-4954-96b8-589..." storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="1de0f0e8-30ca-c0b4-ea12-ab61a56c6b70">
      <Execution id="8a8e4d59-7968-47b9-a3e8-9e84dd0823c3" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftsBySlopeIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="8f7ba917-f771-0dc5-f9b9-465c34344b12">
      <Execution id="72427efb-5056-4043-993e-6887c5fe3e4f" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 24)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="5dae6bb1-ca87-8010-b325-afa6990fab2a">
      <Execution id="121aecc6-2762-4122-bc22-d63052c467f5" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestDeleteUserByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 72, LiftName = liftNamef5bbfdcf-f3e3-4198-b0a3-720623f558bb, IsOpen = True, SeatsAmount = 209, LiftingTime = 199, QueueTime = 8, ConnectedSlopes =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="6596b17b-5d18-ec7e-d0a1-16ddfbef0b58">
      <Execution id="53a2b9dc-1717-4539-9c5d-b3efd7bc5f0f" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmail89201006-5f81-42f5-89a4-2dfb8137a3c8&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="1e4eb899-e066-0889-7781-d2b3b5d01d56">
      <Execution id="35b18830-348c-4abd-89b2-37498182ebc3" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserEmailExistsAsyncFalse" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="607e8298-f113-be33-300e-15a343893443">
      <Execution id="c075c25e-35b4-4893-bae6-95118e5f6c0b" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftsAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftNamee50ba8d3-d424-41be-a079-12ee21ce6723&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="24bbd0ce-8712-5a5d-78f3-f45714f1de70">
      <Execution id="cdb7d5b5-7cc5-4f2b-a472-ce17e24f1072" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 141)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="cbb4f12b-d5d0-50fa-2263-cbdb85270bd7">
      <Execution id="a5c06154-c530-42d0-acc3-8786b2eb3fed" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 220, LiftID = 122, SlopeID = 157 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="581d28f1-f116-07f3-6241-0ab32cba16d0">
      <Execution id="8f23ceee-9fb6-420b-ac80-236954f2dbda" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestUpdateLiftSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 12, CardID = 197, UserEmail = UserEmail9ac0df90-7b9d-4dfd-854b-9e9ec6ac0c9a, Password = passwordfbb4d886-226a-4979-9f5d-28d27fb6cd39, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="debbb1cb-7001-dedd-9c0c-66847431a4e9">
      <Execution id="d4942d30-8663-4807-aa7b-b80130067832" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAsyncFailsWhenUserIdRepeats" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="8bfd705f-8f90-7f12-8e0a-c44821547247" executionId="7741b406-bcf5-4562-b51c-6857605a1dea" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="debbb1cb-7001-dedd-9c0c-66847431a4e9" executionId="d4942d30-8663-4807-aa7b-b80130067832" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="84e67388-eadd-bd5e-09de-be72af8b51fd" executionId="ca421135-3783-4328-84cc-ca70049ce008" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4e68bedb-89ab-d0b9-e9e4-f11fbbcf87c6" executionId="4516c842-fc45-4191-bee7-a9b563c4a63a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="27141a03-0d0a-f28e-a959-6d35f01b99dc" executionId="40c34b80-41b4-48ae-8df3-842340d7bbd5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d3785245-ddaa-f602-5e18-ecbaad5b1e1a" executionId="4e746ed7-50c3-469f-8a1f-2c4a1b611756" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cbb4f12b-d5d0-50fa-2263-cbdb85270bd7" executionId="a5c06154-c530-42d0-acc3-8786b2eb3fed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3c521313-4ed6-6bce-b4f9-c359411028e7" executionId="5468c8eb-3726-4ae0-bcfa-0746e8c70d4d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5dae6bb1-ca87-8010-b325-afa6990fab2a" executionId="121aecc6-2762-4122-bc22-d63052c467f5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c3f24f79-2f41-ded1-ad65-cdb608d9e2e9" executionId="51287dbc-7210-4054-9c0c-04b734115ea2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="46d9962e-6cc5-e66c-89e6-4ba6f97c4be0" executionId="272bf4ee-f024-4f2a-83ca-ed2120749095" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1e4eb899-e066-0889-7781-d2b3b5d01d56" executionId="35b18830-348c-4abd-89b2-37498182ebc3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3193562c-5489-1c08-6d4c-7719935c26c4" executionId="1dbf7e38-f865-4b55-9fb1-7ae5609c8a7c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1aa448dd-c0ca-9ac6-179e-eee0bc6ee238" executionId="9ba43ff5-bbd0-4dac-b84e-5aa79d94c140" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c6f0213a-c15d-5e8b-ad23-336db8fc7e1c" executionId="7271a25c-b599-4374-9a52-ac464ac35f83" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30f8e924-9784-0a43-e807-094f70e06567" executionId="e67969ed-826d-4ad3-9aec-5b89a4a1cde6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c244a57e-0b7e-97f4-691f-30737180add2" executionId="a9b8ec98-a142-4196-b319-129d1a2e75aa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ec229f70-485a-f91b-53ed-bce655f6cd58" executionId="05ac5bb8-c283-42cd-8c17-b2c014de90aa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="24bbd0ce-8712-5a5d-78f3-f45714f1de70" executionId="cdb7d5b5-7cc5-4f2b-a472-ce17e24f1072" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1de0f0e8-30ca-c0b4-ea12-ab61a56c6b70" executionId="8a8e4d59-7968-47b9-a3e8-9e84dd0823c3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="af17f7c3-7d84-4b28-aeaa-62fb7130a937" executionId="4d2d89e8-30a7-46c1-94f6-317e159ec453" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="607e8298-f113-be33-300e-15a343893443" executionId="c075c25e-35b4-4893-bae6-95118e5f6c0b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b0fda516-472d-3363-e212-4b1af367163b" executionId="26007a2d-b856-43f8-a78e-9dba78c15fcd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f9435956-2e34-e52b-c34e-dce53665cf8e" executionId="978c9970-8312-48ec-85b7-7c616ecda4cc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" executionId="1d24ce2d-007f-4bce-ab3b-d74b13b5c987" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="716903a7-46d8-a1bb-7f98-e47f48dbf0a0" executionId="8c514975-818f-4abc-b1c2-5d74d97a129d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="581d28f1-f116-07f3-6241-0ab32cba16d0" executionId="8f23ceee-9fb6-420b-ac80-236954f2dbda" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f866447c-ef94-257d-162a-4e5a55164b89" executionId="2f034ace-f4d1-4a7c-806c-23e2a58f9cac" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9bbefb83-8311-6e03-307f-415e3495e223" executionId="df428d00-3fa0-4d9a-ae96-e0c108d92356" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3741b26d-6ee0-6246-29e4-92009bff37b0" executionId="0b873f10-9aa2-4997-9d43-dfdb8a2328c2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" executionId="adc5bf8c-daa5-424a-8a1d-1204f60e9953" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="66d9ceb4-8c5d-4146-1d9b-779e5630cade" executionId="aab4101d-8a33-4098-9615-c9d315f14382" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a91bd0bf-c665-8d78-3dd3-3630f17dd8aa" executionId="dc2a93e7-de41-4806-aba8-1d933d18e847" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6a12562c-b229-6eab-ce8a-134746095010" executionId="f7b59afd-dcce-4a18-b402-6bed27c1b487" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8990d097-1525-fce9-138a-eec8fb5dd9d5" executionId="6278e971-27b3-4571-b4e2-cb83b0ec3b8a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" executionId="72427efb-5056-4043-993e-6887c5fe3e4f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1538bb98-34f2-3b35-41ed-c58161a5ee45" executionId="488ef116-2cab-421f-b7c0-b782db48c297" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6596b17b-5d18-ec7e-d0a1-16ddfbef0b58" executionId="53a2b9dc-1717-4539-9c5d-b3efd7bc5f0f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="37c61844-8295-d2b3-39e5-dc90cdc2d50e" executionId="81f90baf-87af-40a1-b38e-40c097609b26" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Список результатов" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="Все загруженные результаты" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="39" executed="39" passed="36" failed="3" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.5+1caef2f33e (64-bit .NET 6.0.3)&#xD;
[xUnit.net 00:00:00.47]   Discovering: AccessToDB.Tests&#xD;
[xUnit.net 00:00:00.58]   Discovered:  AccessToDB.Tests&#xD;
[xUnit.net 00:00:00.58]   Starting:    AccessToDB.Tests&#xD;
[xUnit.net 00:00:17.68]       System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
[xUnit.net 00:00:17.68]       Stack Trace:&#xD;
[xUnit.net 00:00:17.69]            at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
[xUnit.net 00:00:17.69]            at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
[xUnit.net 00:00:17.69]            at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
[xUnit.net 00:00:17.69]            at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadList(IMsgPackReader reader, UInt32 length)&#xD;
[xUnit.net 00:00:17.69]            at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadArray(IMsgPackReader reader, UInt32 length)&#xD;
[xUnit.net 00:00:17.69]            at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.Read(IMsgPackReader reader)&#xD;
[xUnit.net 00:00:17.69]            at ProGaudi.Tarantool.Client.Converters.SpaceConverter.Read(IMsgPackReader reader)&#xD;
[xUnit.net 00:00:17.69]            at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadArray(IMsgPackReader reader, UInt32 length)&#xD;
[xUnit.net 00:00:17.69]            at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.Read(IMsgPackReader reader)&#xD;
[xUnit.net 00:00:17.69]            at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.ProGaudi.MsgPack.Light.IMsgPackConverter&lt;ProGaudi.Tarantool.Client.Model.Responses.DataResponse&lt;T&gt;&gt;.Read(IMsgPackReader reader)&#xD;
[xUnit.net 00:00:17.69]            at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
[xUnit.net 00:00:17.69]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:17.69]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:17.69]            at ProGaudi.Tarantool.Client.Schema.Select[T](UInt32 spaceId, Iterator iterator, UInt32 id)&#xD;
[xUnit.net 00:00:17.69]            at ProGaudi.Tarantool.Client.Schema.Reload()&#xD;
[xUnit.net 00:00:17.69]            at ProGaudi.Tarantool.Client.Box.Connect()&#xD;
[xUnit.net 00:00:17.69]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)&#xD;
[xUnit.net 00:00:17.69]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs(52,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)&#xD;
[xUnit.net 00:00:17.69]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)&#xD;
[xUnit.net 00:00:17.69]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()&#xD;
[xUnit.net 00:00:17.69]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)&#xD;
[xUnit.net 00:00:17.70]       System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
[xUnit.net 00:00:17.70]       Stack Trace:&#xD;
[xUnit.net 00:00:17.70]            at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
[xUnit.net 00:00:17.70]            at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
[xUnit.net 00:00:17.70]            at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
[xUnit.net 00:00:17.70]            at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadList(IMsgPackReader reader, UInt32 length)&#xD;
[xUnit.net 00:00:17.70]            at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadArray(IMsgPackReader reader, UInt32 length)&#xD;
[xUnit.net 00:00:17.70]            at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.Read(IMsgPackReader reader)&#xD;
[xUnit.net 00:00:17.70]            at ProGaudi.Tarantool.Client.Converters.SpaceConverter.Read(IMsgPackReader reader)&#xD;
[xUnit.net 00:00:17.70]            at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadArray(IMsgPackReader reader, UInt32 length)&#xD;
[xUnit.net 00:00:17.70]            at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.Read(IMsgPackReader reader)&#xD;
[xUnit.net 00:00:17.70]            at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.ProGaudi.MsgPack.Light.IMsgPackConverter&lt;ProGaudi.Tarantool.Client.Model.Responses.DataResponse&lt;T&gt;&gt;.Read(IMsgPackReader reader)&#xD;
[xUnit.net 00:00:17.70]            at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
[xUnit.net 00:00:17.70]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:17.70]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:17.70]            at ProGaudi.Tarantool.Client.Schema.Select[T](UInt32 spaceId, Iterator iterator, UInt32 id)&#xD;
[xUnit.net 00:00:17.70]            at ProGaudi.Tarantool.Client.Schema.Reload()&#xD;
[xUnit.net 00:00:17.70]            at ProGaudi.Tarantool.Client.Box.Connect()&#xD;
[xUnit.net 00:00:17.70]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)&#xD;
[xUnit.net 00:00:17.70]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs(52,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)&#xD;
[xUnit.net 00:00:17.70]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)&#xD;
[xUnit.net 00:00:17.70]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()&#xD;
[xUnit.net 00:00:17.70]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)&#xD;
[xUnit.net 00:00:22.53]       System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
[xUnit.net 00:00:22.53]       Stack Trace:&#xD;
[xUnit.net 00:00:22.53]            at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
[xUnit.net 00:00:22.53]            at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
[xUnit.net 00:00:22.53]            at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
[xUnit.net 00:00:22.53]            at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadList(IMsgPackReader reader, UInt32 length)&#xD;
[xUnit.net 00:00:22.53]            at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadArray(IMsgPackReader reader, UInt32 length)&#xD;
[xUnit.net 00:00:22.53]            at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.Read(IMsgPackReader reader)&#xD;
[xUnit.net 00:00:22.53]            at ProGaudi.Tarantool.Client.Converters.SpaceConverter.Read(IMsgPackReader reader)&#xD;
[xUnit.net 00:00:22.53]            at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadArray(IMsgPackReader reader, UInt32 length)&#xD;
[xUnit.net 00:00:22.53]            at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.Read(IMsgPackReader reader)&#xD;
[xUnit.net 00:00:22.53]            at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.ProGaudi.MsgPack.Light.IMsgPackConverter&lt;ProGaudi.Tarantool.Client.Model.Responses.DataResponse&lt;T&gt;&gt;.Read(IMsgPackReader reader)&#xD;
[xUnit.net 00:00:22.53]            at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
[xUnit.net 00:00:22.53]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:22.53]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:22.53]            at ProGaudi.Tarantool.Client.Schema.Select[T](UInt32 spaceId, Iterator iterator, UInt32 id)&#xD;
[xUnit.net 00:00:22.53]            at ProGaudi.Tarantool.Client.Schema.Reload()&#xD;
[xUnit.net 00:00:22.53]            at ProGaudi.Tarantool.Client.Box.Connect()&#xD;
[xUnit.net 00:00:22.53]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)&#xD;
[xUnit.net 00:00:22.53]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs(52,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)&#xD;
[xUnit.net 00:00:22.53]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)&#xD;
[xUnit.net 00:00:22.53]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()&#xD;
[xUnit.net 00:00:22.53]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)&#xD;
[xUnit.net 00:00:22.53]   Finished:    AccessToDB.Tests&#xD;
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-10-15T20:43:00.9028340+03:00">
        <Text>[xUnit.net 00:00:17.68]     AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-10-15T20:43:00.9208936+03:00">
        <Text>[xUnit.net 00:00:17.70]     AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-10-15T20:43:05.7481941+03:00">
        <Text>[xUnit.net 00:00:22.53]     AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: "liftNamee50ba8d3-d424-41be-a079-12ee21ce6723") [FAIL]</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>