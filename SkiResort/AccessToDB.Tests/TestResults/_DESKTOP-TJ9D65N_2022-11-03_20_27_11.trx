<?xml version="1.0" encoding="utf-8"?>
<TestRun id="91b2387b-5403-4504-9c40-66f56b1a3dbe" name="@DESKTOP-TJ9D65N 2022-11-03 20:27:11" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2022-11-03T20:27:11.4749252+03:00" queuing="2022-11-03T20:27:11.4749253+03:00" start="2022-11-03T20:27:09.1382484+03:00" finish="2022-11-03T20:27:12.0771094+03:00" />
  <TestSettings name="default" id="b384f070-1a50-44dd-92d3-07f52ea12a29">
    <Deployment runDeploymentRoot="_DESKTOP-TJ9D65N_2022-11-03_20_27_11" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="3ebf4349-e2db-4e9d-8e49-77efd5558464" testId="b596f33c-cbf3-2d0f-f0cd-c5cb95fd70ca" testName="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 160, CardID = 22, UserEmail = UserEmaila27533ae-555d-4e02-a1b1-717ba7a80b27, Password = passwordad349c13-08eb-42bc-a9f1-898793af4ee3, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.5554568+03:00" endTime="2022-11-03T20:27:11.5554569+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3ebf4349-e2db-4e9d-8e49-77efd5558464">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="679bd02a-c1b9-4940-b2c8-a65891183c11" testId="0ea6e593-b784-b4b8-10c5-105fafd8f09e" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 60, LiftID = 7, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.4892649+03:00" endTime="2022-11-03T20:27:11.4892649+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="679bd02a-c1b9-4940-b2c8-a65891183c11">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="01feaaf1-1b61-497b-a1f7-7788692f7290" testId="7bb2fa44-311c-7157-a160-0d81aaecf4ed" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 95, LiftID = 143, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.4410016+03:00" endTime="2022-11-03T20:27:11.4410017+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="01feaaf1-1b61-497b-a1f7-7788692f7290">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="370af822-9862-45f8-88e5-1317cee2a4ff" testId="d4a650aa-882b-cc70-26f7-94359c51019d" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmailc5621c10-7feb-4b29-a6d6-d7fd7de5031c&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.5398213+03:00" endTime="2022-11-03T20:27:11.5398214+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="370af822-9862-45f8-88e5-1317cee2a4ff">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="887e5fe7-5120-4a3b-b305-f805cc6294bd" testId="21c64f5f-604e-78fa-61e0-4d672c3c9efe" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 232)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.4735249+03:00" endTime="2022-11-03T20:27:11.4735250+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="887e5fe7-5120-4a3b-b305-f805cc6294bd">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="eb1259eb-2d0f-40cc-ad3f-e189b53861c4" testId="63f88348-2e93-e702-a98b-11993f226528" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 133)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.7733120+03:00" endTime="2022-11-03T20:27:11.7733122+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eb1259eb-2d0f-40cc-ad3f-e189b53861c4">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5a58c948-9a66-494b-825d-f209494090ef" testId="bd183c0e-8588-5597-cfc8-396362092885" testName="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 211)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.9851448+03:00" endTime="2022-11-03T20:27:11.9851458+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5a58c948-9a66-494b-825d-f209494090ef">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d5fac62b-36c1-4c9b-817c-0e6afd5b843a" testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.7416771+03:00" endTime="2022-11-03T20:27:11.7416771+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d5fac62b-36c1-4c9b-817c-0e6afd5b843a">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3b534702-5fce-4507-8ccf-e1b064b007ab" testId="9bbefb83-8311-6e03-307f-415e3495e223" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.8678289+03:00" endTime="2022-11-03T20:27:11.8678290+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3b534702-5fce-4507-8ccf-e1b064b007ab">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6641bad9-3092-448e-8ee1-b8d3c855762b" testId="3741b26d-6ee0-6246-29e4-92009bff37b0" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.5102547+03:00" endTime="2022-11-03T20:27:11.5102548+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6641bad9-3092-448e-8ee1-b8d3c855762b">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="98d5615b-2740-48dd-8f29-2892ebcb7370" testId="3c521313-4ed6-6bce-b4f9-c359411028e7" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.4415341+03:00" endTime="2022-11-03T20:27:11.4415342+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="98d5615b-2740-48dd-8f29-2892ebcb7370">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="76a59a2e-2226-4b8c-ae33-d462a9430646" testId="57eab3af-f21e-33f4-b9b2-efdd10c3e675" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 131, SlopeName = slopeName838f3832-75bc-4ca8-9ac6-824be3d9d5d8, IsOpen = True, DifficultyLevel = 194, ConnectedLifts =  }, slope2: Slope { SlopeID = 97, SlopeName = slopeName192659d6-39a7-4fb4-982a-5623140ad664, IsOpen = False, DifficultyLevel = 249, ConnectedLifts =  }, lift1: Lift { LiftID = 20, LiftName = liftNameef4cf3ec-b716-4fc6-975f-05de2dcdb617, IsOpen = True, SeatsAmount = 126, LiftingTime = 151, QueueTime = 33, ConnectedSlopes =  }, lift2: Lift { LiftID = 234, LiftName = liftName27cc5961-c765-4a93-a47c-e78a62c90377, IsOpen = False, SeatsAmount = 219, LiftingTime = 195, QueueTime = 81, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.6946038+03:00" endTime="2022-11-03T20:27:11.6946038+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="76a59a2e-2226-4b8c-ae33-d462a9430646">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3080f345-092c-4766-a582-1bcbddbad495" testId="607e8298-f113-be33-300e-15a343893443" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.9686780+03:00" endTime="2022-11-03T20:27:11.9686781+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3080f345-092c-4766-a582-1bcbddbad495">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e14fa943-c678-4905-8fab-dad9b06a0d80" testId="9eac929a-ebee-45f1-3cbd-2b3ad027527e" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 98, LiftID = 153, SlopeID = 86 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.7119471+03:00" endTime="2022-11-03T20:27:11.7119472+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e14fa943-c678-4905-8fab-dad9b06a0d80">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="556230cb-643a-42d2-bd15-d1feb71b27ac" testId="e5a6b45a-8b3a-b407-1ee8-1831773e138d" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 253, LiftID = 138, SlopeID = 235 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.6791729+03:00" endTime="2022-11-03T20:27:11.6791730+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="556230cb-643a-42d2-bd15-d1feb71b27ac">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="280233bb-aed7-45bd-a7e7-bf2e072bffec" testId="ea9d8cc3-0ef0-335e-f0d4-1a311d405654" testName="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 30, SlopeName = slopeName5bf612b2-dcbd-465b-9c0a-9173cc88e73f, IsOpen = True, DifficultyLevel = 235, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.8329632+03:00" endTime="2022-11-03T20:27:11.8329633+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="280233bb-aed7-45bd-a7e7-bf2e072bffec">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2d4ffc11-dee5-4da2-8ec3-8c5921a648b0" testId="75e50a72-dd14-2a7a-a8ad-63a9f2ceb21d" testName="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 89, LiftName = liftNamefc48b425-1840-48ed-8244-bf763b2370ad, IsOpen = True, SeatsAmount = 2, LiftingTime = 211, QueueTime = 185, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.9279819+03:00" endTime="2022-11-03T20:27:11.9279820+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2d4ffc11-dee5-4da2-8ec3-8c5921a648b0">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d653ae8f-4251-4cd1-a77d-e9c5b6e2f161" testId="f074b022-6ab1-2a60-6f5c-5915f3653186" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 59, LiftID = 55, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.3619242+03:00" endTime="2022-11-03T20:27:11.3619495+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d653ae8f-4251-4cd1-a77d-e9c5b6e2f161">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="47f90065-78f1-4ac5-b06f-b2f74cbbe540" testId="7c1623ba-60b9-d035-de02-083790aa0bab" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 7, SlopeName = slopeName829347e3-e85d-4822-a1c3-e83c4b4ecfa1, IsOpen = True, DifficultyLevel = 1, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.7877847+03:00" endTime="2022-11-03T20:27:11.7877848+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="47f90065-78f1-4ac5-b06f-b2f74cbbe540">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b2333d5f-cefb-402a-b78f-4d90aaf5ea79" testId="a00f9744-5b5f-71bf-617b-773947f4da27" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 242, CardID = 62, UserEmail = UserEmail26ae291e-baaf-4dd8-acf5-ac3647882a36, Password = password3ec818c6-5693-4e35-8ecc-c4762cec6ee1, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.5258019+03:00" endTime="2022-11-03T20:27:11.5258019+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b2333d5f-cefb-402a-b78f-4d90aaf5ea79">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="88e8033f-7c62-45a1-8225-cb5433da1e84" testId="30f8e924-9784-0a43-e807-094f70e06567" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.7264728+03:00" endTime="2022-11-03T20:27:11.7264729+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="88e8033f-7c62-45a1-8225-cb5433da1e84">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9ba23c30-7e14-4bb6-961a-8e66b044804a" testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.8535765+03:00" endTime="2022-11-03T20:27:11.8535766+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9ba23c30-7e14-4bb6-961a-8e66b044804a">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1481097c-e4bd-47ef-81e2-1cc00ee08316" testId="58ae7d15-ba36-5ed9-81e7-d5f7ff414457" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;email3a931dae-e3e2-4794-816c-19e7ef89754c&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.5713824+03:00" endTime="2022-11-03T20:27:11.5713825+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1481097c-e4bd-47ef-81e2-1cc00ee08316">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9de3e169-5558-4a83-988d-f36ba402ad65" testId="ec229f70-485a-f91b-53ed-bce655f6cd58" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.8980994+03:00" endTime="2022-11-03T20:27:11.8980994+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9de3e169-5558-4a83-988d-f36ba402ad65">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="668819c1-13f3-4922-a6a6-2a0f5187008e" testId="b5d39220-c8d6-2fa0-4072-d04c5e81bfbf" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 72, SlopeName = slopeName915ff274-c718-460f-a9f6-414e6e0cbbc6, IsOpen = True, DifficultyLevel = 170, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.8019291+03:00" endTime="2022-11-03T20:27:11.8019292+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="668819c1-13f3-4922-a6a6-2a0f5187008e">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c868e674-f861-40d3-8850-afee43e41a8b" testId="0ae1a50b-2ada-6ef7-4afc-08ed6f2fd6be" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 208, CardID = 125, UserEmail = UserEmail7df8e6be-e999-4fe3-800c-be623802cef5, Password = passwordfe10cea9-9137-4a60-8969-fca16a767225, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.5865914+03:00" endTime="2022-11-03T20:27:11.5865915+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c868e674-f861-40d3-8850-afee43e41a8b">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="04a789b9-b092-419f-a4c8-01489b89b684" testId="f2c4c322-8818-3bcc-c091-020747ff1ae9" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftName85355cc0-b58f-4744-9a0a-2ab3f76a54d7&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.9546244+03:00" endTime="2022-11-03T20:27:11.9546245+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="04a789b9-b092-419f-a4c8-01489b89b684">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9ae6a0a0-ce5c-4bcc-b0dc-8fedd774b40a" testId="8dfb886c-62f5-60a6-bc79-3425c6e67066" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 156, LiftID = 159, SlopeID = 217 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.7577088+03:00" endTime="2022-11-03T20:27:11.7577089+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9ae6a0a0-ce5c-4bcc-b0dc-8fedd774b40a">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c76aced1-2b2c-43ed-82c8-42fce6819373" testId="3d4b4cce-6f38-05bc-fb37-fe035fc44149" testName="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 131)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.6171399+03:00" endTime="2022-11-03T20:27:11.6171400+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c76aced1-2b2c-43ed-82c8-42fce6819373">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bda58499-3a22-441e-8f5a-9e38c2c4d714" testId="2724c0ef-32a4-fae2-f3ac-a4cb06bbb7fb" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 12, LiftID = 15, SlopeID = 225 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.6485198+03:00" endTime="2022-11-03T20:27:11.6485199+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bda58499-3a22-441e-8f5a-9e38c2c4d714">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8c47f456-dee2-45b5-8ed9-b4713c216a36" testId="f75e4b17-1c22-0ad1-0837-2f4fed0ddc36" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 254)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.3953186+03:00" endTime="2022-11-03T20:27:11.3953187+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8c47f456-dee2-45b5-8ed9-b4713c216a36">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c994963f-f678-4e9c-8b52-acc0bead836c" testId="5771739b-4e83-37ce-797f-0892ad19a67b" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 244, CardID = 23, UserEmail = UserEmaila3bcfe2d-148e-4b76-a5c6-9091037215af, Password = password413c1748-383d-4102-9469-3ff56c9a404a, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.6032135+03:00" endTime="2022-11-03T20:27:11.6032136+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c994963f-f678-4e9c-8b52-acc0bead836c">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="02324387-6829-4249-b57d-40569346f6c7" testId="b8b9bb93-0b74-e838-9435-f83a3ea27042" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeNamefcf98096-5654-4593-a0a4-5773cc3d7663&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.8831069+03:00" endTime="2022-11-03T20:27:11.8831070+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="02324387-6829-4249-b57d-40569346f6c7">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fbd52c36-13aa-4223-842b-d642bdcb252a" testId="ce210b50-b103-f175-7525-d3761b43d5a8" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 13, LiftName = liftName4ec0078f-7c14-4ba2-83de-f3da41128842, IsOpen = True, SeatsAmount = 11, LiftingTime = 42, QueueTime = 29, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.9120788+03:00" endTime="2022-11-03T20:27:11.9120789+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fbd52c36-13aa-4223-842b-d642bdcb252a">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="662334c0-2722-4d60-b6a2-a7f3b8728953" testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.6323215+03:00" endTime="2022-11-03T20:27:11.6323216+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="662334c0-2722-4d60-b6a2-a7f3b8728953">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4a908e15-db71-4d59-97f6-076718274633" testId="82b48667-7e60-fc1b-ccc3-a233fe660208" testName="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 10)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.8170108+03:00" endTime="2022-11-03T20:27:11.8170108+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4a908e15-db71-4d59-97f6-076718274633">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4897022b-867e-4bf8-9606-2c17655d9327" testId="f9435956-2e34-e52b-c34e-dce53665cf8e" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.4613476+03:00" endTime="2022-11-03T20:27:11.4613476+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4897022b-867e-4bf8-9606-2c17655d9327">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4fceaf01-8a98-47ee-b4ad-0f7903936a20" testId="85973cd9-25a1-295c-278f-924741f11be7" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 221, LiftID = 107, SlopeID = 214 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.6635718+03:00" endTime="2022-11-03T20:27:11.6635719+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4fceaf01-8a98-47ee-b4ad-0f7903936a20">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="934f80c7-0b76-4505-ace6-26d664b02cea" testId="f20a4c25-7f60-54d2-5816-65a98afb316c" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 43, LiftName = liftNamefae6caaf-31ef-4114-bb28-78d2c9f99d3f, IsOpen = True, SeatsAmount = 54, LiftingTime = 7, QueueTime = 198, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:27:11.9406596+03:00" endTime="2022-11-03T20:27:11.9406597+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="934f80c7-0b76-4505-ace6-26d664b02cea">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 30, SlopeName = slopeName5bf612b2-dcbd-465b-9c0a-9173cc88e73f, IsOpen = True, DifficultyLevel = 235, ConnectedLifts =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="ea9d8cc3-0ef0-335e-f0d4-1a311d405654">
      <Execution id="280233bb-aed7-45bd-a7e7-bf2e072bffec" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestUpdateSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="f9435956-2e34-e52b-c34e-dce53665cf8e">
      <Execution id="4897022b-867e-4bf8-9606-2c17655d9327" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 95, LiftID = 143, IsOpen = True })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="7bb2fa44-311c-7157-a160-0d81aaecf4ed">
      <Execution id="01feaaf1-1b61-497b-a1f7-7788692f7290" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestUpdateTurnstileByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;email3a931dae-e3e2-4794-816c-19e7ef89754c&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="58ae7d15-ba36-5ed9-81e7-d5f7ff414457">
      <Execution id="1481097c-e4bd-47ef-81e2-1cc00ee08316" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByEmailAsyncFailsWhenEmailNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="607e8298-f113-be33-300e-15a343893443">
      <Execution id="3080f345-092c-4766-a582-1bcbddbad495" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftsAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 43, LiftName = liftNamefae6caaf-31ef-4114-bb28-78d2c9f99d3f, IsOpen = True, SeatsAmount = 54, LiftingTime = 7, QueueTime = 198, ConnectedSlopes =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="f20a4c25-7f60-54d2-5816-65a98afb316c">
      <Execution id="934f80c7-0b76-4505-ace6-26d664b02cea" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmailc5621c10-7feb-4b29-a6d6-d7fd7de5031c&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="d4a650aa-882b-cc70-26f7-94359c51019d">
      <Execution id="370af822-9862-45f8-88e5-1317cee2a4ff" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserEmailExistsAsyncFalse" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="8f7ba917-f771-0dc5-f9b9-465c34344b12">
      <Execution id="9ba23c30-7e14-4bb6-961a-8e66b044804a" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 12, LiftID = 15, SlopeID = 225 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="2724c0ef-32a4-fae2-f3ac-a4cb06bbb7fb">
      <Execution id="bda58499-3a22-441e-8f5a-9e38c2c4d714" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 98, LiftID = 153, SlopeID = 86 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="9eac929a-ebee-45f1-3cbd-2b3ad027527e">
      <Execution id="e14fa943-c678-4905-8fab-dad9b06a0d80" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="30f8e924-9784-0a43-e807-094f70e06567">
      <Execution id="88e8033f-7c62-45a1-8225-cb5433da1e84" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 253, LiftID = 138, SlopeID = 235 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="e5a6b45a-8b3a-b407-1ee8-1831773e138d">
      <Execution id="556230cb-643a-42d2-bd15-d1feb71b27ac" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 72, SlopeName = slopeName915ff274-c718-460f-a9f6-414e6e0cbbc6, IsOpen = True, DifficultyLevel = 170, ConnectedLifts =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="b5d39220-c8d6-2fa0-4072-d04c5e81bfbf">
      <Execution id="668819c1-13f3-4922-a6a6-2a0f5187008e" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAsyncFailsWhenSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 59, LiftID = 55, IsOpen = True })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="f074b022-6ab1-2a60-6f5c-5915f3653186">
      <Execution id="d653ae8f-4251-4cd1-a77d-e9c5b6e2f161" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstileByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="3741b26d-6ee0-6246-29e4-92009bff37b0">
      <Execution id="6641bad9-3092-448e-8ee1-b8d3c855762b" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUsersAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 221, LiftID = 107, SlopeID = 214 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="85973cd9-25a1-295c-278f-924741f11be7">
      <Execution id="4fceaf01-8a98-47ee-b4ad-0f7903936a20" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopesByIDsAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 89, LiftName = liftNamefc48b425-1840-48ed-8244-bf763b2370ad, IsOpen = True, SeatsAmount = 2, LiftingTime = 211, QueueTime = 185, ConnectedSlopes =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="75e50a72-dd14-2a7a-a8ad-63a9f2ceb21d">
      <Execution id="2d4ffc11-dee5-4da2-8ec3-8c5921a648b0" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestUpdateLiftByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="4145f44e-b4b1-a618-09e8-c631496e6f1a">
      <Execution id="d5fac62b-36c1-4c9b-817c-0e6afd5b843a" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 242, CardID = 62, UserEmail = UserEmail26ae291e-baaf-4dd8-acf5-ac3647882a36, Password = password3ec818c6-5693-4e35-8ecc-c4762cec6ee1, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="a00f9744-5b5f-71bf-617b-773947f4da27">
      <Execution id="b2333d5f-cefb-402a-b78f-4d90aaf5ea79" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAsyncFailsWhenUserIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 208, CardID = 125, UserEmail = UserEmail7df8e6be-e999-4fe3-800c-be623802cef5, Password = passwordfe10cea9-9137-4a60-8969-fca16a767225, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="0ae1a50b-2ada-6ef7-4afc-08ed6f2fd6be">
      <Execution id="c868e674-f861-40d3-8850-afee43e41a8b" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserIdExistsAsyncTrue" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 156, LiftID = 159, SlopeID = 217 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="8dfb886c-62f5-60a6-bc79-3425c6e67066">
      <Execution id="9ae6a0a0-ce5c-4bcc-b0dc-8fedd774b40a" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestUpdateLiftSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 131)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="3d4b4cce-6f38-05bc-fb37-fe035fc44149">
      <Execution id="c76aced1-2b2c-43ed-82c8-42fce6819373" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestDeleteUserByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="ec229f70-485a-f91b-53ed-bce655f6cd58">
      <Execution id="9de3e169-5558-4a83-988d-f36ba402ad65" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 160, CardID = 22, UserEmail = UserEmaila27533ae-555d-4e02-a1b1-717ba7a80b27, Password = passwordad349c13-08eb-42bc-a9f1-898793af4ee3, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="b596f33c-cbf3-2d0f-f0cd-c5cb95fd70ca">
      <Execution id="3ebf4349-e2db-4e9d-8e49-77efd5558464" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestUpdateUserByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 232)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="21c64f5f-604e-78fa-61e0-4d672c3c9efe">
      <Execution id="887e5fe7-5120-4a3b-b305-f805cc6294bd" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 211)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="bd183c0e-8588-5597-cfc8-396362092885">
      <Execution id="5a58c948-9a66-494b-825d-f209494090ef" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestDeleteLiftByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 254)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="f75e4b17-1c22-0ad1-0837-2f4fed0ddc36">
      <Execution id="8c47f456-dee2-45b5-8ed9-b4713c216a36" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesByLiftIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 133)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="63f88348-2e93-e702-a98b-11993f226528">
      <Execution id="eb1259eb-2d0f-40cc-ad3f-e189b53861c4" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftName85355cc0-b58f-4744-9a0a-2ab3f76a54d7&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="f2c4c322-8818-3bcc-c091-020747ff1ae9">
      <Execution id="04a789b9-b092-419f-a4c8-01489b89b684" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 13, LiftName = liftName4ec0078f-7c14-4ba2-83de-f3da41128842, IsOpen = True, SeatsAmount = 11, LiftingTime = 42, QueueTime = 29, ConnectedSlopes =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="ce210b50-b103-f175-7525-d3761b43d5a8">
      <Execution id="fbd52c36-13aa-4223-842b-d642bdcb252a" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAsyncFailsWhenLiftIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 10)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="82b48667-7e60-fc1b-ccc3-a233fe660208">
      <Execution id="4a908e15-db71-4d59-97f6-076718274633" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestDeleteSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 131, SlopeName = slopeName838f3832-75bc-4ca8-9ac6-824be3d9d5d8, IsOpen = True, DifficultyLevel = 194, ConnectedLifts =  }, slope2: Slope { SlopeID = 97, SlopeName = slopeName192659d6-39a7-4fb4-982a-5623140ad664, IsOpen = False, DifficultyLevel = 249, ConnectedLifts =  }, lift1: Lift { LiftID = 20, LiftName = liftNameef4cf3ec-b716-4fc6-975f-05d..." storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="57eab3af-f21e-33f4-b9b2-efdd10c3e675">
      <Execution id="76a59a2e-2226-4b8c-ae33-d462a9430646" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftsBySlopeIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeNamefcf98096-5654-4593-a0a4-5773cc3d7663&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="b8b9bb93-0b74-e838-9435-f83a3ea27042">
      <Execution id="02324387-6829-4249-b57d-40569346f6c7" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 7, SlopeName = slopeName829347e3-e85d-4822-a1c3-e83c4b4ecfa1, IsOpen = True, DifficultyLevel = 1, ConnectedLifts =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="7c1623ba-60b9-d035-de02-083790aa0bab">
      <Execution id="47f90065-78f1-4ac5-b06f-b2f74cbbe540" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e">
      <Execution id="662334c0-2722-4d60-b6a2-a7f3b8728953" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 244, CardID = 23, UserEmail = UserEmaila3bcfe2d-148e-4b76-a5c6-9091037215af, Password = password413c1748-383d-4102-9469-3ff56c9a404a, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="5771739b-4e83-37ce-797f-0892ad19a67b">
      <Execution id="c994963f-f678-4e9c-8b52-acc0bead836c" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="3c521313-4ed6-6bce-b4f9-c359411028e7">
      <Execution id="98d5615b-2740-48dd-8f29-2892ebcb7370" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 60, LiftID = 7, IsOpen = True })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="0ea6e593-b784-b4b8-10c5-105fafd8f09e">
      <Execution id="679bd02a-c1b9-4940-b2c8-a65891183c11" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="9bbefb83-8311-6e03-307f-415e3495e223">
      <Execution id="3b534702-5fce-4507-8ccf-e1b064b007ab" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopesAsyncEmpty" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="b596f33c-cbf3-2d0f-f0cd-c5cb95fd70ca" executionId="3ebf4349-e2db-4e9d-8e49-77efd5558464" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0ea6e593-b784-b4b8-10c5-105fafd8f09e" executionId="679bd02a-c1b9-4940-b2c8-a65891183c11" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7bb2fa44-311c-7157-a160-0d81aaecf4ed" executionId="01feaaf1-1b61-497b-a1f7-7788692f7290" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d4a650aa-882b-cc70-26f7-94359c51019d" executionId="370af822-9862-45f8-88e5-1317cee2a4ff" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="21c64f5f-604e-78fa-61e0-4d672c3c9efe" executionId="887e5fe7-5120-4a3b-b305-f805cc6294bd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="63f88348-2e93-e702-a98b-11993f226528" executionId="eb1259eb-2d0f-40cc-ad3f-e189b53861c4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bd183c0e-8588-5597-cfc8-396362092885" executionId="5a58c948-9a66-494b-825d-f209494090ef" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" executionId="d5fac62b-36c1-4c9b-817c-0e6afd5b843a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9bbefb83-8311-6e03-307f-415e3495e223" executionId="3b534702-5fce-4507-8ccf-e1b064b007ab" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3741b26d-6ee0-6246-29e4-92009bff37b0" executionId="6641bad9-3092-448e-8ee1-b8d3c855762b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3c521313-4ed6-6bce-b4f9-c359411028e7" executionId="98d5615b-2740-48dd-8f29-2892ebcb7370" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="57eab3af-f21e-33f4-b9b2-efdd10c3e675" executionId="76a59a2e-2226-4b8c-ae33-d462a9430646" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="607e8298-f113-be33-300e-15a343893443" executionId="3080f345-092c-4766-a582-1bcbddbad495" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9eac929a-ebee-45f1-3cbd-2b3ad027527e" executionId="e14fa943-c678-4905-8fab-dad9b06a0d80" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e5a6b45a-8b3a-b407-1ee8-1831773e138d" executionId="556230cb-643a-42d2-bd15-d1feb71b27ac" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ea9d8cc3-0ef0-335e-f0d4-1a311d405654" executionId="280233bb-aed7-45bd-a7e7-bf2e072bffec" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="75e50a72-dd14-2a7a-a8ad-63a9f2ceb21d" executionId="2d4ffc11-dee5-4da2-8ec3-8c5921a648b0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f074b022-6ab1-2a60-6f5c-5915f3653186" executionId="d653ae8f-4251-4cd1-a77d-e9c5b6e2f161" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7c1623ba-60b9-d035-de02-083790aa0bab" executionId="47f90065-78f1-4ac5-b06f-b2f74cbbe540" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a00f9744-5b5f-71bf-617b-773947f4da27" executionId="b2333d5f-cefb-402a-b78f-4d90aaf5ea79" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30f8e924-9784-0a43-e807-094f70e06567" executionId="88e8033f-7c62-45a1-8225-cb5433da1e84" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" executionId="9ba23c30-7e14-4bb6-961a-8e66b044804a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="58ae7d15-ba36-5ed9-81e7-d5f7ff414457" executionId="1481097c-e4bd-47ef-81e2-1cc00ee08316" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ec229f70-485a-f91b-53ed-bce655f6cd58" executionId="9de3e169-5558-4a83-988d-f36ba402ad65" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b5d39220-c8d6-2fa0-4072-d04c5e81bfbf" executionId="668819c1-13f3-4922-a6a6-2a0f5187008e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0ae1a50b-2ada-6ef7-4afc-08ed6f2fd6be" executionId="c868e674-f861-40d3-8850-afee43e41a8b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f2c4c322-8818-3bcc-c091-020747ff1ae9" executionId="04a789b9-b092-419f-a4c8-01489b89b684" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8dfb886c-62f5-60a6-bc79-3425c6e67066" executionId="9ae6a0a0-ce5c-4bcc-b0dc-8fedd774b40a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3d4b4cce-6f38-05bc-fb37-fe035fc44149" executionId="c76aced1-2b2c-43ed-82c8-42fce6819373" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2724c0ef-32a4-fae2-f3ac-a4cb06bbb7fb" executionId="bda58499-3a22-441e-8f5a-9e38c2c4d714" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f75e4b17-1c22-0ad1-0837-2f4fed0ddc36" executionId="8c47f456-dee2-45b5-8ed9-b4713c216a36" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5771739b-4e83-37ce-797f-0892ad19a67b" executionId="c994963f-f678-4e9c-8b52-acc0bead836c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b8b9bb93-0b74-e838-9435-f83a3ea27042" executionId="02324387-6829-4249-b57d-40569346f6c7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ce210b50-b103-f175-7525-d3761b43d5a8" executionId="fbd52c36-13aa-4223-842b-d642bdcb252a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" executionId="662334c0-2722-4d60-b6a2-a7f3b8728953" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="82b48667-7e60-fc1b-ccc3-a233fe660208" executionId="4a908e15-db71-4d59-97f6-076718274633" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f9435956-2e34-e52b-c34e-dce53665cf8e" executionId="4897022b-867e-4bf8-9606-2c17655d9327" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="85973cd9-25a1-295c-278f-924741f11be7" executionId="4fceaf01-8a98-47ee-b4ad-0f7903936a20" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f20a4c25-7f60-54d2-5816-65a98afb316c" executionId="934f80c7-0b76-4505-ace6-26d664b02cea" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="39" executed="39" passed="0" failed="39" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.5+1caef2f33e (64-bit .NET 6.0.10)
[xUnit.net 00:00:01.05]   Discovering: AccessToDB.Tests
[xUnit.net 00:00:01.18]   Discovered:  AccessToDB.Tests
[xUnit.net 00:00:01.18]   Starting:    AccessToDB.Tests
[xUnit.net 00:00:01.34]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.34]       Stack Trace:
[xUnit.net 00:00:01.35]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.35]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.35]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.35]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.35]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.35]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.35]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.35]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.35]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.35]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.35]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.35]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.35]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.35]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.35]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.35]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.35]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.35]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.38]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.38]       Stack Trace:
[xUnit.net 00:00:01.38]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.38]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.38]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.38]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.38]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.38]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.38]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.38]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.38]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.38]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.38]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.38]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.38]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.38]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.38]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.38]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.38]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.38]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.43]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.43]       Stack Trace:
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.43]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.43]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.43]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.43]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.43]       Stack Trace:
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.43]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.43]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.43]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.45]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.45]       Stack Trace:
[xUnit.net 00:00:01.45]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.45]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.45]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.45]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.45]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.45]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.45]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.45]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.45]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.45]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.45]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.45]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.46]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.46]       Stack Trace:
[xUnit.net 00:00:01.46]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.46]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.46]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.46]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.46]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.46]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.46]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.46]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.46]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.46]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.46]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.46]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.46]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.46]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.46]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.46]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.46]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.46]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.48]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.48]       Stack Trace:
[xUnit.net 00:00:01.48]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.48]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.48]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.48]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.48]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.48]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.48]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.48]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.48]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.48]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.48]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.48]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.48]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.48]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.48]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.48]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.48]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.48]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.50]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.50]       Stack Trace:
[xUnit.net 00:00:01.50]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.50]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.50]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.50]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.50]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.50]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.50]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.50]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.50]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.50]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.50]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.50]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.51]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.51]       Stack Trace:
[xUnit.net 00:00:01.51]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.51]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.51]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.51]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.51]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.51]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.51]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.51]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.51]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.51]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.51]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.51]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.53]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.53]       Stack Trace:
[xUnit.net 00:00:01.53]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.53]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.53]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.53]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.53]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.53]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.53]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.53]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.53]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.53]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.53]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.53]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.53]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.53]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.53]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.53]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.53]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.53]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.54]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.54]       Stack Trace:
[xUnit.net 00:00:01.54]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.54]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.54]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.54]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.54]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.54]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.54]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.54]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.54]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.54]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.54]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.54]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.54]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.56]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.56]       Stack Trace:
[xUnit.net 00:00:01.56]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.56]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.56]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.56]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.56]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.56]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.56]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.56]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.56]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.56]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.56]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.56]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.57]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.57]       Stack Trace:
[xUnit.net 00:00:01.57]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.57]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.57]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.57]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.57]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.57]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.57]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.57]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.57]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.57]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.57]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.57]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.59]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.59]       Stack Trace:
[xUnit.net 00:00:01.59]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.59]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.59]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.59]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.59]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.59]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.59]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.59]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.59]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.59]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.59]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.59]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.60]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.60]       Stack Trace:
[xUnit.net 00:00:01.60]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.60]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.60]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.60]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.60]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.60]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.60]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.60]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.61]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.61]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.61]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.61]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.61]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.61]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.61]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.62]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.62]       Stack Trace:
[xUnit.net 00:00:01.62]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.62]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.62]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.62]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.62]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.62]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.62]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.62]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.62]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.62]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.62]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.62]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.64]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.64]       Stack Trace:
[xUnit.net 00:00:01.64]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.64]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.64]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.64]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.64]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.64]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.64]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.64]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.64]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.64]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.64]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.64]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.64]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.65]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.65]       Stack Trace:
[xUnit.net 00:00:01.65]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.65]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.65]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.65]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.65]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.65]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.65]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.65]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.65]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.65]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.65]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.65]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.65]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.65]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.65]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.65]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.65]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.65]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.67]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.67]       Stack Trace:
[xUnit.net 00:00:01.67]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.67]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.67]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.67]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.67]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.67]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.67]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.67]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.67]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.67]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.67]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.67]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.67]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.67]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.67]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.67]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.67]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.67]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.68]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.68]       Stack Trace:
[xUnit.net 00:00:01.68]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.68]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.68]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.68]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.68]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.68]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.68]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.68]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.68]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.68]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.68]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.68]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.68]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.68]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.68]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.68]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.68]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.68]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.70]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.70]       Stack Trace:
[xUnit.net 00:00:01.70]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.70]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.70]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.70]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.70]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.70]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.70]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.70]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.70]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.70]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.70]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.70]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.71]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.71]       Stack Trace:
[xUnit.net 00:00:01.71]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.71]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.71]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.71]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.71]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.71]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.71]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.71]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.71]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.71]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.71]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.71]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.73]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.73]       Stack Trace:
[xUnit.net 00:00:01.73]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.73]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.73]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.73]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.73]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.73]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.73]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.73]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.73]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.73]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.73]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.73]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.74]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.74]       Stack Trace:
[xUnit.net 00:00:01.75]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.75]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.75]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.75]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.75]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.75]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.75]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.75]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.75]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.75]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.75]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.75]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.76]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.76]       Stack Trace:
[xUnit.net 00:00:01.76]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.76]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.76]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.76]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.76]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.76]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.76]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.76]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.76]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.76]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.76]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.76]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.76]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.76]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.76]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.76]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.76]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.76]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.78]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.78]       Stack Trace:
[xUnit.net 00:00:01.78]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.78]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.78]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.78]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.78]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.78]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.78]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.78]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.78]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.78]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.78]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.78]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.79]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.79]       Stack Trace:
[xUnit.net 00:00:01.79]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.79]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.79]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.79]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.79]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.79]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.79]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.79]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.79]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.79]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.79]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.79]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.79]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.80]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.80]       Stack Trace:
[xUnit.net 00:00:01.80]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.80]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.80]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.80]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.80]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.80]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.80]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.80]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.80]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.80]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.80]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.80]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.80]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.81]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.81]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.81]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.81]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.82]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.82]       Stack Trace:
[xUnit.net 00:00:01.82]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.82]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.82]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.82]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.82]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.82]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.82]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.82]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.82]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.82]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.82]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.82]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.82]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.82]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.82]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.82]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.82]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.82]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.84]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.84]       Stack Trace:
[xUnit.net 00:00:01.84]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.84]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.84]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.84]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.84]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.84]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.84]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.84]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.84]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.84]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.84]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.84]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.84]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.84]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.84]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.84]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.84]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.84]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.86]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.86]       Stack Trace:
[xUnit.net 00:00:01.86]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.86]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.86]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.86]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.86]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.86]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.86]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.86]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.86]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.86]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.86]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.86]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.87]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.87]       Stack Trace:
[xUnit.net 00:00:01.87]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.87]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.87]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.87]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.87]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.87]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.87]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.87]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.87]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.87]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.87]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.87]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.89]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.89]       Stack Trace:
[xUnit.net 00:00:01.89]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.89]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.89]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.89]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.89]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.89]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.89]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.89]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.89]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.89]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.89]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.89]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.90]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.90]       Stack Trace:
[xUnit.net 00:00:01.90]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.90]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.90]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.90]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.90]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.90]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.90]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.90]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.90]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.90]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.90]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.90]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.90]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.90]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.90]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.90]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.90]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.90]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.92]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.92]       Stack Trace:
[xUnit.net 00:00:01.92]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.92]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.92]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.92]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.92]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.92]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.92]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.92]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.92]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.92]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.92]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.92]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.93]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.93]       Stack Trace:
[xUnit.net 00:00:01.93]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.93]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.93]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.93]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.93]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.93]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.93]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.93]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.93]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.93]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.93]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.93]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.93]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.93]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.93]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.93]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.93]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.93]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.94]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.94]       Stack Trace:
[xUnit.net 00:00:01.94]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.94]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.94]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.94]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.94]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.94]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.94]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.94]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.94]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.94]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.94]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.94]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.96]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.96]       Stack Trace:
[xUnit.net 00:00:01.96]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.96]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.96]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.96]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.96]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.96]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.96]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.96]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.96]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.96]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.96]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.96]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.96]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.96]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.96]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.96]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.96]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.96]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.97]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.97]       Stack Trace:
[xUnit.net 00:00:01.97]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.97]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.97]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.97]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.97]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.97]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.97]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.97]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.97]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.97]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.97]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.97]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.97]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.97]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.97]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.97]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.97]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.97]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.99]   Finished:    AccessToDB.Tests
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.3544618+03:00">
        <Text>[xUnit.net 00:00:01.34]     AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 59, LiftID = 55, IsOpen = True }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.3947191+03:00">
        <Text>[xUnit.net 00:00:01.38]     AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 254) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.4873557+03:00">
        <Text>[xUnit.net 00:00:01.43]     AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 95, LiftID = 143, IsOpen = True }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.4874874+03:00">
        <Text>[xUnit.net 00:00:01.43]     AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.4876672+03:00">
        <Text>[xUnit.net 00:00:01.45]     AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.4878089+03:00">
        <Text>[xUnit.net 00:00:01.46]     AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 232) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.4888076+03:00">
        <Text>[xUnit.net 00:00:01.48]     AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 60, LiftID = 7, IsOpen = True }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.5098460+03:00">
        <Text>[xUnit.net 00:00:01.50]     AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.5254213+03:00">
        <Text>[xUnit.net 00:00:01.51]     AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 242, CardID = 62, UserEmail = UserEmail26ae291e-baaf-4dd8-acf5-ac3647882a36, Password = password3ec818c6-5693-4e35-8ecc-c4762cec6ee1, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.5392902+03:00">
        <Text>[xUnit.net 00:00:01.53]     AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: "userEmailc5621c10-7feb-4b29-a6d6-d7fd7de5031c") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.5546313+03:00">
        <Text>[xUnit.net 00:00:01.54]     AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 160, CardID = 22, UserEmail = UserEmaila27533ae-555d-4e02-a1b1-717ba7a80b27, Password = passwordad349c13-08eb-42bc-a9f1-898793af4ee3, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.5776540+03:00">
        <Text>[xUnit.net 00:00:01.56]     AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: "email3a931dae-e3e2-4794-816c-19e7ef89754c") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.5855713+03:00">
        <Text>[xUnit.net 00:00:01.57]     AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 208, CardID = 125, UserEmail = UserEmail7df8e6be-e999-4fe3-800c-be623802cef5, Password = passwordfe10cea9-9137-4a60-8969-fca16a767225, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.5990806+03:00">
        <Text>[xUnit.net 00:00:01.59]     AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 244, CardID = 23, UserEmail = UserEmaila3bcfe2d-148e-4b76-a5c6-9091037215af, Password = password413c1748-383d-4102-9469-3ff56c9a404a, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.6166144+03:00">
        <Text>[xUnit.net 00:00:01.60]     AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 131) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.6318410+03:00">
        <Text>[xUnit.net 00:00:01.62]     AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.6479828+03:00">
        <Text>[xUnit.net 00:00:01.64]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 12, LiftID = 15, SlopeID = 225 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.6631509+03:00">
        <Text>[xUnit.net 00:00:01.65]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 221, LiftID = 107, SlopeID = 214 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.6787073+03:00">
        <Text>[xUnit.net 00:00:01.67]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 253, LiftID = 138, SlopeID = 235 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.6941605+03:00">
        <Text>[xUnit.net 00:00:01.68]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 131, SlopeName = slopeName838f3832-75bc-4ca8-9ac6-824be3d9d5d8, IsOpen = True, DifficultyLevel = 194, ConnectedLifts =  }, slope2: Slope { SlopeID = 97, SlopeName = slopeName192659d6-39a7-4fb4-982a-5623140ad664, IsOpen = False, DifficultyLevel = 249, ConnectedLifts =  }, lift1: Lift { LiftID = 20, LiftName = liftNameef4cf3ec-b716-4fc6-975f-05de2dcdb617, IsOpen = True, SeatsAmount = 126, LiftingTime = 151, QueueTime = 33, ConnectedSlopes =  }, lift2: Lift { LiftID = 234, LiftName = liftName27cc5961-c765-4a93-a47c-e78a62c90377, IsOpen = False, SeatsAmount = 219, LiftingTime = 195, QueueTime = 81, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.7133327+03:00">
        <Text>[xUnit.net 00:00:01.70]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 98, LiftID = 153, SlopeID = 86 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.7259714+03:00">
        <Text>[xUnit.net 00:00:01.71]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.7410642+03:00">
        <Text>[xUnit.net 00:00:01.73]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.7569506+03:00">
        <Text>[xUnit.net 00:00:01.74]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 156, LiftID = 159, SlopeID = 217 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.7729211+03:00">
        <Text>[xUnit.net 00:00:01.76]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 133) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.7874295+03:00">
        <Text>[xUnit.net 00:00:01.78]     AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 7, SlopeName = slopeName829347e3-e85d-4822-a1c3-e83c4b4ecfa1, IsOpen = True, DifficultyLevel = 1, ConnectedLifts =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.8010644+03:00">
        <Text>[xUnit.net 00:00:01.79]     AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 72, SlopeName = slopeName915ff274-c718-460f-a9f6-414e6e0cbbc6, IsOpen = True, DifficultyLevel = 170, ConnectedLifts =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.8165930+03:00">
        <Text>[xUnit.net 00:00:01.80]     AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 10) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.8322151+03:00">
        <Text>[xUnit.net 00:00:01.82]     AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 30, SlopeName = slopeName5bf612b2-dcbd-465b-9c0a-9173cc88e73f, IsOpen = True, DifficultyLevel = 235, ConnectedLifts =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.8574366+03:00">
        <Text>[xUnit.net 00:00:01.84]     AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.8671831+03:00">
        <Text>[xUnit.net 00:00:01.86]     AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.8823475+03:00">
        <Text>[xUnit.net 00:00:01.87]     AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: "slopeNamefcf98096-5654-4593-a0a4-5773cc3d7663") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.8978552+03:00">
        <Text>[xUnit.net 00:00:01.89]     AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.9116754+03:00">
        <Text>[xUnit.net 00:00:01.90]     AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 13, LiftName = liftName4ec0078f-7c14-4ba2-83de-f3da41128842, IsOpen = True, SeatsAmount = 11, LiftingTime = 42, QueueTime = 29, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.9273260+03:00">
        <Text>[xUnit.net 00:00:01.92]     AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 89, LiftName = liftNamefc48b425-1840-48ed-8244-bf763b2370ad, IsOpen = True, SeatsAmount = 2, LiftingTime = 211, QueueTime = 185, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.9403513+03:00">
        <Text>[xUnit.net 00:00:01.93]     AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 43, LiftName = liftNamefae6caaf-31ef-4114-bb28-78d2c9f99d3f, IsOpen = True, SeatsAmount = 54, LiftingTime = 7, QueueTime = 198, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.9542884+03:00">
        <Text>[xUnit.net 00:00:01.94]     AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: "liftName85355cc0-b58f-4744-9a0a-2ab3f76a54d7") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.9678799+03:00">
        <Text>[xUnit.net 00:00:01.96]     AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:27:11.9881339+03:00">
        <Text>[xUnit.net 00:00:01.97]     AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 211) [FAIL]</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>