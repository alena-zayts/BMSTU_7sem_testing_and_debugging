<?xml version="1.0" encoding="utf-8"?>
<TestRun id="94f1264c-7d3c-4540-89f4-a8014f0b281e" name="alena@DESKTOP-TJ9D65N 2022-10-15 21:23:07" runUser="DESKTOP-TJ9D65N\alena" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2022-10-15T21:23:07.2124530+03:00" queuing="2022-10-15T21:23:07.2124534+03:00" start="2022-10-15T21:23:03.5931080+03:00" finish="2022-10-15T21:24:02.6387578+03:00" />
  <TestSettings name="default" id="658920fd-dab3-4ba3-9ba5-470d4c595cc4">
    <Deployment runDeploymentRoot="alena_DESKTOP-TJ9D65N_2022-10-15_21_23_07" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="259733f6-a549-40e5-b6d9-9babf87e385f" testId="61330dfb-c2c6-a0fb-9579-ae0f1b74e2a5" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 245, CardID = 90, UserEmail = UserEmailcb720a69-19a0-46d6-91ba-6c551430aecb, Password = passwordec6c9316-026d-4772-9a67-35e30563a610, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6193552" startTime="2022-10-15T21:23:44.1943445+03:00" endTime="2022-10-15T21:23:44.1943455+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="259733f6-a549-40e5-b6d9-9babf87e385f" />
    <UnitTestResult executionId="edb17519-2f89-40ae-bb23-de2b5486f216" testId="f6d7c572-1a23-cb59-8721-f379a0070632" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 174, CardID = 160, UserEmail = UserEmail048e6193-6808-4974-aeca-61d514ee1411, Password = passwordc0e8bfd2-6f10-416e-9683-563cc63c8a66, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.5874371" startTime="2022-10-15T21:23:45.8039001+03:00" endTime="2022-10-15T21:23:45.8039004+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="edb17519-2f89-40ae-bb23-de2b5486f216" />
    <UnitTestResult executionId="3bb0761b-49da-4104-85fb-735171ad6de0" testId="763e86ba-d00f-c6c8-8fc3-4d930399d878" testName="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 240)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-10-15T21:23:31.4943337+03:00" endTime="2022-10-15T21:23:31.4943343+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3bb0761b-49da-4104-85fb-735171ad6de0">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.</Message>
          <StackTrace>   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.Schema.Select[T](UInt32 spaceId, Iterator iterator, UInt32 id)&#xD;
   at ProGaudi.Tarantool.Client.Schema.Reload()&#xD;
   at ProGaudi.Tarantool.Client.Box.Connect()&#xD;
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)&#xD;
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs:line 52&#xD;
   at AccessToDB.TarantoolContext..ctor(String connection_string) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs:line 32&#xD;
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\SlopesRepositoryTests.cs:line 28&#xD;
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dcd10085-b2e5-4881-86ee-be69f951a2c8" testId="00108a47-5fa2-56f4-2039-353848a208b3" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeName6ce65121-476e-42a7-b76a-bc80aa63500d&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:01.5804042" startTime="2022-10-15T21:23:33.0735291+03:00" endTime="2022-10-15T21:23:33.0735292+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dcd10085-b2e5-4881-86ee-be69f951a2c8" />
    <UnitTestResult executionId="ee5074d1-cbcc-48b0-9502-5715f1bac0cc" testId="9bbefb83-8311-6e03-307f-415e3495e223" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:01.5784549" startTime="2022-10-15T21:23:36.2770044+03:00" endTime="2022-10-15T21:23:36.2770045+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ee5074d1-cbcc-48b0-9502-5715f1bac0cc" />
    <UnitTestResult executionId="ae20bfd5-c9d4-415b-a570-0b944f45c543" testId="610005a1-3a12-92e2-b6ab-0217eae4ffef" testName="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 35, SlopeName = slopeNamef54ea5c5-211d-4b81-b608-6a593187af55, IsOpen = True, DifficultyLevel = 28, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6226704" startTime="2022-10-15T21:23:31.4162563+03:00" endTime="2022-10-15T21:23:31.4162571+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ae20bfd5-c9d4-415b-a570-0b944f45c543" />
    <UnitTestResult executionId="7799ad55-0723-40c3-937c-a71455a06a0c" testId="995e2c09-4052-84dc-b70c-c871dcd69cd1" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 112, LiftID = 87, SlopeID = 165 })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6000117" startTime="2022-10-15T21:23:59.3066109+03:00" endTime="2022-10-15T21:23:59.3066113+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7799ad55-0723-40c3-937c-a71455a06a0c" />
    <UnitTestResult executionId="9b335293-18cf-47d1-80c9-2b644d3d3adf" testId="7f3be15e-ac61-d59e-6cc0-bc402980dc15" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 165)" computerName="DESKTOP-TJ9D65N" duration="00:00:01.7472433" startTime="2022-10-15T21:23:17.9470667+03:00" endTime="2022-10-15T21:23:17.9470669+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9b335293-18cf-47d1-80c9-2b644d3d3adf" />
    <UnitTestResult executionId="3c57bdc7-f36a-4c50-8a56-d19da14f3386" testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:01.5680348" startTime="2022-10-15T21:24:02.5018922+03:00" endTime="2022-10-15T21:24:02.5018926+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3c57bdc7-f36a-4c50-8a56-d19da14f3386" />
    <UnitTestResult executionId="91062c55-2d45-4935-b551-834cdf07bfa9" testId="88e80ad5-e674-0bdf-1fa5-36e4f0c155b9" testName="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 80)" computerName="DESKTOP-TJ9D65N" duration="00:00:01.5688136" startTime="2022-10-15T21:23:09.7344801+03:00" endTime="2022-10-15T21:23:09.7344804+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="91062c55-2d45-4935-b551-834cdf07bfa9" />
    <UnitTestResult executionId="3a281712-294e-4a80-b906-3deca618d20b" testId="7d7062db-e86e-6d76-fefc-df8ab6e326ad" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 241)" computerName="DESKTOP-TJ9D65N" duration="00:00:01.5570284" startTime="2022-10-15T21:23:25.9638493+03:00" endTime="2022-10-15T21:23:25.9638497+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3a281712-294e-4a80-b906-3deca618d20b" />
    <UnitTestResult executionId="b9e6100c-0c0e-4f56-a38b-ff1fcc802b92" testId="4b90b21d-bc85-cbd4-ad74-d1655c8f0ca3" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 141, LiftID = 16, SlopeID = 239 })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6253648" startTime="2022-10-15T21:23:52.2940046+03:00" endTime="2022-10-15T21:23:52.2940099+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b9e6100c-0c0e-4f56-a38b-ff1fcc802b92" />
    <UnitTestResult executionId="7879b2b5-bb21-4035-9a13-68afd14f7f91" testId="a16480ff-462b-437f-9fce-24c5100df52a" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;email83a2d6fe-fb8b-40ef-b14f-fc15f316e432&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:01.5571976" startTime="2022-10-15T21:23:42.5635201+03:00" endTime="2022-10-15T21:23:42.5635210+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7879b2b5-bb21-4035-9a13-68afd14f7f91" />
    <UnitTestResult executionId="ffe051fe-c341-4afc-a928-1ea6baf4f7d6" testId="30f8e924-9784-0a43-e807-094f70e06567" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6167950" startTime="2022-10-15T21:24:00.9305133+03:00" endTime="2022-10-15T21:24:00.9305134+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ffe051fe-c341-4afc-a928-1ea6baf4f7d6" />
    <UnitTestResult executionId="ce5a7ccb-4968-461d-968a-337b6abfe31d" testId="2a5206c0-dab1-317d-c00e-2bafd7004ec0" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 239, LiftID = 127, SlopeID = 27 })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6026579" startTime="2022-10-15T21:23:53.9082445+03:00" endTime="2022-10-15T21:23:53.9082447+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ce5a7ccb-4968-461d-968a-337b6abfe31d" />
    <UnitTestResult executionId="72f3ce15-b83e-4659-9c95-28fee3bf003a" testId="ec229f70-485a-f91b-53ed-bce655f6cd58" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6609849" startTime="2022-10-15T21:23:06.5752636+03:00" endTime="2022-10-15T21:23:06.5752847+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="72f3ce15-b83e-4659-9c95-28fee3bf003a" />
    <UnitTestResult executionId="f8adfe7a-7cd0-464e-b63f-1d30ba64feed" testId="ae33c35f-1d3c-cd70-9d55-c7ebb379cd02" testName="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 140, CardID = 239, UserEmail = UserEmail2dd69147-c018-4c87-aa20-de55f3193b4d, Password = password39ad0985-f607-4ab0-9abe-496b1725bac4, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6054166" startTime="2022-10-15T21:23:47.4138634+03:00" endTime="2022-10-15T21:23:47.4138638+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f8adfe7a-7cd0-464e-b63f-1d30ba64feed" />
    <UnitTestResult executionId="a6f634af-ed8c-4e8b-85a4-50e3aa92cb8d" testId="ca71010d-75aa-36ec-7c92-84e1a02298e7" testName="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 239, LiftName = liftName7765e7a4-92c8-4de6-ad83-b4e2a954b0de, IsOpen = True, SeatsAmount = 232, LiftingTime = 255, QueueTime = 39, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6250903" startTime="2022-10-15T21:23:11.3644771+03:00" endTime="2022-10-15T21:23:11.3644777+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a6f634af-ed8c-4e8b-85a4-50e3aa92cb8d" />
    <UnitTestResult executionId="c5918470-ac56-42fe-98c7-27f108b3c318" testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6092374" startTime="2022-10-15T21:23:34.6866745+03:00" endTime="2022-10-15T21:23:34.6866749+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c5918470-ac56-42fe-98c7-27f108b3c318" />
    <UnitTestResult executionId="676351e3-6b39-4734-bdf7-b5cadf460947" testId="0e2c08ac-bfd2-f146-710f-526bf0c5d078" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 99, LiftID = 222, SlopeID = 100 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-10-15T21:23:57.7050321+03:00" endTime="2022-10-15T21:23:57.7050324+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="676351e3-6b39-4734-bdf7-b5cadf460947">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.</Message>
          <StackTrace>   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass24_0.&lt;TryGenerateConverterFromGenericConverter&gt;b__0(Type x)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
   at AccessToDB.RepositoriesTarantool.TarantoolLiftsSlopesRepository.GetLiftsSlopesAsync(UInt32 offset, UInt32 limit) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsSlopesRepository.cs:line 43&#xD;
   at AccessToDB.Tests.LiftsSlopesRepositoryTests.CleanLiftsSlopesTable() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs:line 48&#xD;
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs:line 38&#xD;
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="28a8b22c-b784-432a-b6b9-6c902ba4aee2" testId="a547e23a-95d2-8652-2514-d9b3143bde43" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 75, LiftID = 161, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6057374" startTime="2022-10-15T21:23:27.5746267+03:00" endTime="2022-10-15T21:23:27.5746272+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="28a8b22c-b784-432a-b6b9-6c902ba4aee2" />
    <UnitTestResult executionId="448dcd9c-21b7-45d1-bd1e-c59257111adb" testId="dcd6f3a5-e3fd-62bf-8e6b-9f6c262fadab" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 233, SlopeName = slopeNamecd80a21c-ba57-4ab7-bec1-ee3927437ab6, IsOpen = True, DifficultyLevel = 210, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6647459" startTime="2022-10-15T21:23:29.2431391+03:00" endTime="2022-10-15T21:23:29.2431394+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="448dcd9c-21b7-45d1-bd1e-c59257111adb" />
    <UnitTestResult executionId="e808730b-0f00-4285-a904-8f2c013932f1" testId="3741b26d-6ee0-6246-29e4-92009bff37b0" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:01.5712174" startTime="2022-10-15T21:23:40.9990062+03:00" endTime="2022-10-15T21:23:40.9990068+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e808730b-0f00-4285-a904-8f2c013932f1" />
    <UnitTestResult executionId="d1ee9412-2639-4612-938c-f0fdf44dfe90" testId="8ce0c08a-9f34-2833-f6d2-be2fa56d457b" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 111, SlopeName = slopeName3c1ad917-e683-46c2-b080-a38bfc6e8e24, IsOpen = True, DifficultyLevel = 219, ConnectedLifts =  }, slope2: Slope { SlopeID = 187, SlopeName = slopeNamee9949e3f-ece3-48c3-8b34-ea5fd10352b0, IsOpen = False, DifficultyLevel = 152, ConnectedLifts =  }, lift1: Lift { LiftID = 142, LiftName = liftNamec9dd180f-2b1a-4b9c-9562-59346dd15ec0, IsOpen = True, SeatsAmount = 50, LiftingTime = 87, QueueTime = 238, ConnectedSlopes =  }, lift2: Lift { LiftID = 24, LiftName = liftNamed671b6ab-c5b3-45a8-a5d2-0539a96dd6ce, IsOpen = False, SeatsAmount = 11, LiftingTime = 179, QueueTime = 125, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6599449" startTime="2022-10-15T21:23:55.5719665+03:00" endTime="2022-10-15T21:23:55.5719668+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d1ee9412-2639-4612-938c-f0fdf44dfe90" />
    <UnitTestResult executionId="332fb697-284c-4eb0-a3f0-5421cf843d40" testId="e1b6fdef-0601-28ce-6c9a-faca299e04a4" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 92, LiftID = 144, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6225733" startTime="2022-10-15T21:23:21.1439546+03:00" endTime="2022-10-15T21:23:21.1439558+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="332fb697-284c-4eb0-a3f0-5421cf843d40" />
    <UnitTestResult executionId="7529d4ac-e1f8-4342-a953-8dbc72e2ec30" testId="9cf76ae7-4fe0-b011-6b78-508c99f0716f" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 120, SlopeName = slopeNamed7dc9164-7cac-4e82-b315-c07f88766dd2, IsOpen = True, DifficultyLevel = 123, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-10-15T21:23:29.8022677+03:00" endTime="2022-10-15T21:23:29.8022681+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7529d4ac-e1f8-4342-a953-8dbc72e2ec30">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.</Message>
          <StackTrace>   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
   at AccessToDB.RepositoriesTarantool.TarantoolSlopesRepository.GetSlopesAsync(UInt32 offset, UInt32 limit) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolSlopesRepository.cs:line 36&#xD;
   at AccessToDB.Tests.SlopesRepositoryTests.CleanSlopesTable() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\SlopesRepositoryTests.cs:line 40&#xD;
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\SlopesRepositoryTests.cs:line 30&#xD;
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a5392042-4efc-42a6-a4c8-379d3f065071" testId="462a5c13-b0ae-4c49-0d0e-40e5810b679d" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 173, LiftID = 172, SlopeID = 123 })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6083511" startTime="2022-10-15T21:23:57.1873011+03:00" endTime="2022-10-15T21:23:57.1873013+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a5392042-4efc-42a6-a4c8-379d3f065071" />
    <UnitTestResult executionId="098b18db-4c72-411f-b546-5ee3a22fa8fc" testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6323399" startTime="2022-10-15T21:23:50.6621909+03:00" endTime="2022-10-15T21:23:50.6621916+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="098b18db-4c72-411f-b546-5ee3a22fa8fc" />
    <UnitTestResult executionId="86297afb-f0f4-4e68-90b2-6ff09991dedc" testId="6bd738e6-a6f4-60a9-74d3-bbd77b103140" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 6)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-10-15T21:24:02.5561146+03:00" endTime="2022-10-15T21:24:02.5561148+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="86297afb-f0f4-4e68-90b2-6ff09991dedc">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.</Message>
          <StackTrace>   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
   at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
   at ProGaudi.Tarantool.Client.Schema.Select[T](UInt32 spaceId, Iterator iterator, UInt32 id)&#xD;
   at ProGaudi.Tarantool.Client.Schema.Reload()&#xD;
   at ProGaudi.Tarantool.Client.Box.Connect()&#xD;
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)&#xD;
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs:line 52&#xD;
   at AccessToDB.TarantoolContext..ctor(String connection_string) in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs:line 32&#xD;
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs:line 34&#xD;
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9952304a-a75f-4b48-b925-680d0a0ab061" testId="06048cb5-7b23-99a1-8bf2-496d19e5d42d" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 22, LiftName = liftNameceffee12-de24-4e3a-8577-7d3c610fcdcb, IsOpen = True, SeatsAmount = 7, LiftingTime = 128, QueueTime = 180, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6056814" startTime="2022-10-15T21:23:14.5541787+03:00" endTime="2022-10-15T21:23:14.5541790+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9952304a-a75f-4b48-b925-680d0a0ab061" />
    <UnitTestResult executionId="90df5279-4a3d-4c6f-a0d8-fded09f4a971" testId="ba72977c-f3bc-a459-6e4a-14a3b3a7121c" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 109, LiftID = 49, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6212973" startTime="2022-10-15T21:23:22.7763729+03:00" endTime="2022-10-15T21:23:22.7763732+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="90df5279-4a3d-4c6f-a0d8-fded09f4a971" />
    <UnitTestResult executionId="63aadffb-c555-4fb2-8f54-02ffc419c1bf" testId="3a064424-4ecd-7214-542c-7d2f9a6f51e1" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftName0af405fb-901b-40e3-83d9-8d9d32ddf5fb&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:01.5624102" startTime="2022-10-15T21:23:08.1597428+03:00" endTime="2022-10-15T21:23:08.1597432+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="63aadffb-c555-4fb2-8f54-02ffc419c1bf" />
    <UnitTestResult executionId="6d5003c9-4f8b-477b-8df3-35cd79652578" testId="93594747-2659-3dec-765e-4195ab51419d" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmail9edd9a3b-350d-41b3-92c9-2b336c6cdee7&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:01.5654208" startTime="2022-10-15T21:23:37.8465106+03:00" endTime="2022-10-15T21:23:37.8465106+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6d5003c9-4f8b-477b-8df3-35cd79652578" />
    <UnitTestResult executionId="1cc59b24-e269-404b-aa0d-f658cf1ee7f3" testId="be925beb-9a0f-2849-4af3-afc1f1ff29aa" testName="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 65)" computerName="DESKTOP-TJ9D65N" duration="00:00:01.5722771" startTime="2022-10-15T21:23:39.4227587+03:00" endTime="2022-10-15T21:23:39.4227591+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1cc59b24-e269-404b-aa0d-f658cf1ee7f3" />
    <UnitTestResult executionId="f54e1368-72c2-48e8-be0c-cc9674397b35" testId="3c521313-4ed6-6bce-b4f9-c359411028e7" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:01.5666758" startTime="2022-10-15T21:23:19.5172227+03:00" endTime="2022-10-15T21:23:19.5172229+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f54e1368-72c2-48e8-be0c-cc9674397b35" />
    <UnitTestResult executionId="de3b1163-b404-425e-be2a-fbf5e5e4b8cd" testId="552b3f56-1f5c-9a4c-f52a-54c265bf6e00" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 68, CardID = 159, UserEmail = UserEmail1d5ec854-0901-4814-acb2-398b5379711d, Password = password33c0edc6-0f74-4c66-9d5c-d038b8726ac9, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6071831" startTime="2022-10-15T21:23:49.0257414+03:00" endTime="2022-10-15T21:23:49.0257416+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="de3b1163-b404-425e-be2a-fbf5e5e4b8cd" />
    <UnitTestResult executionId="64f57024-92ed-4b9c-ac2e-b37eed909f2c" testId="f9435956-2e34-e52b-c34e-dce53665cf8e" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6186505" startTime="2022-10-15T21:23:24.3989711+03:00" endTime="2022-10-15T21:23:24.3989716+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="64f57024-92ed-4b9c-ac2e-b37eed909f2c" />
    <UnitTestResult executionId="940f3f5a-3947-4b15-aedb-ddcb8a87a9a5" testId="f445a7ef-1ec0-05e6-132b-897177ca53d9" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 39, LiftName = liftName66f274c3-cee4-4f1a-bf53-662a28c65bfa, IsOpen = True, SeatsAmount = 195, LiftingTime = 160, QueueTime = 8, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:01.6170469" startTime="2022-10-15T21:23:16.1772231+03:00" endTime="2022-10-15T21:23:16.1772233+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="940f3f5a-3947-4b15-aedb-ddcb8a87a9a5" />
    <UnitTestResult executionId="95f1c3f2-6d8e-47d4-9bd4-212ba18db86a" testId="607e8298-f113-be33-300e-15a343893443" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:01.5733556" startTime="2022-10-15T21:23:12.9447340+03:00" endTime="2022-10-15T21:23:12.9447342+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="95f1c3f2-6d8e-47d4-9bd4-212ba18db86a" />
  </Results>
  <TestDefinitions>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 241)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="7d7062db-e86e-6d76-fefc-df8ab6e326ad">
      <Execution id="3a281712-294e-4a80-b906-3deca618d20b" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftName0af405fb-901b-40e3-83d9-8d9d32ddf5fb&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="3a064424-4ecd-7214-542c-7d2f9a6f51e1">
      <Execution id="63aadffb-c555-4fb2-8f54-02ffc419c1bf" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 233, SlopeName = slopeNamecd80a21c-ba57-4ab7-bec1-ee3927437ab6, IsOpen = True, DifficultyLevel = 210, ConnectedLifts =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="dcd6f3a5-e3fd-62bf-8e6b-9f6c262fadab">
      <Execution id="448dcd9c-21b7-45d1-bd1e-c59257111adb" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAsyncFailsWhenSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="3741b26d-6ee0-6246-29e4-92009bff37b0">
      <Execution id="e808730b-0f00-4285-a904-8f2c013932f1" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUsersAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 245, CardID = 90, UserEmail = UserEmailcb720a69-19a0-46d6-91ba-6c551430aecb, Password = passwordec6c9316-026d-4772-9a67-35e30563a610, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="61330dfb-c2c6-a0fb-9579-ae0f1b74e2a5">
      <Execution id="259733f6-a549-40e5-b6d9-9babf87e385f" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAsyncFailsWhenUserIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 22, LiftName = liftNameceffee12-de24-4e3a-8577-7d3c610fcdcb, IsOpen = True, SeatsAmount = 7, LiftingTime = 128, QueueTime = 180, ConnectedSlopes =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="06048cb5-7b23-99a1-8bf2-496d19e5d42d">
      <Execution id="9952304a-a75f-4b48-b925-680d0a0ab061" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 35, SlopeName = slopeNamef54ea5c5-211d-4b81-b608-6a593187af55, IsOpen = True, DifficultyLevel = 28, ConnectedLifts =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="610005a1-3a12-92e2-b6ab-0217eae4ffef">
      <Execution id="ae20bfd5-c9d4-415b-a570-0b944f45c543" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestUpdateSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 239, LiftID = 127, SlopeID = 27 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="2a5206c0-dab1-317d-c00e-2bafd7004ec0">
      <Execution id="ce5a7ccb-4968-461d-968a-337b6abfe31d" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeName6ce65121-476e-42a7-b76a-bc80aa63500d&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="00108a47-5fa2-56f4-2039-353848a208b3">
      <Execution id="dcd10085-b2e5-4881-86ee-be69f951a2c8" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="f9435956-2e34-e52b-c34e-dce53665cf8e">
      <Execution id="64f57024-92ed-4b9c-ac2e-b37eed909f2c" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 240)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="763e86ba-d00f-c6c8-8fc3-4d930399d878">
      <Execution id="3bb0761b-49da-4104-85fb-735171ad6de0" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestDeleteSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 6)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="6bd738e6-a6f4-60a9-74d3-bbd77b103140">
      <Execution id="86297afb-f0f4-4e68-90b2-6ff09991dedc" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 111, SlopeName = slopeName3c1ad917-e683-46c2-b080-a38bfc6e8e24, IsOpen = True, DifficultyLevel = 219, ConnectedLifts =  }, slope2: Slope { SlopeID = 187, SlopeName = slopeNamee9949e3f-ece3-48c3-8b34-ea5fd10352b0, IsOpen = False, DifficultyLevel = 152, ConnectedLifts =  }, lift1: Lift { LiftID = 142, LiftName = liftNamec9dd180f-2b1a-4b9c-9562-5..." storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="8ce0c08a-9f34-2833-f6d2-be2fa56d457b">
      <Execution id="d1ee9412-2639-4612-938c-f0fdf44dfe90" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftsBySlopeIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="4145f44e-b4b1-a618-09e8-c631496e6f1a">
      <Execution id="3c57bdc7-f36a-4c50-8a56-d19da14f3386" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;email83a2d6fe-fb8b-40ef-b14f-fc15f316e432&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="a16480ff-462b-437f-9fce-24c5100df52a">
      <Execution id="7879b2b5-bb21-4035-9a13-68afd14f7f91" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByEmailAsyncFailsWhenEmailNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="9bbefb83-8311-6e03-307f-415e3495e223">
      <Execution id="ee5074d1-cbcc-48b0-9502-5715f1bac0cc" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="ec229f70-485a-f91b-53ed-bce655f6cd58">
      <Execution id="72f3ce15-b83e-4659-9c95-28fee3bf003a" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 75, LiftID = 161, IsOpen = True })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="a547e23a-95d2-8652-2514-d9b3143bde43">
      <Execution id="28a8b22c-b784-432a-b6b9-6c902ba4aee2" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstileByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="3c521313-4ed6-6bce-b4f9-c359411028e7">
      <Execution id="f54e1368-72c2-48e8-be0c-cc9674397b35" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 39, LiftName = liftName66f274c3-cee4-4f1a-bf53-662a28c65bfa, IsOpen = True, SeatsAmount = 195, LiftingTime = 160, QueueTime = 8, ConnectedSlopes =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="f445a7ef-1ec0-05e6-132b-897177ca53d9">
      <Execution id="940f3f5a-3947-4b15-aedb-ddcb8a87a9a5" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAsyncFailsWhenLiftIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmail9edd9a3b-350d-41b3-92c9-2b336c6cdee7&quot;)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="93594747-2659-3dec-765e-4195ab51419d">
      <Execution id="6d5003c9-4f8b-477b-8df3-35cd79652578" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserEmailExistsAsyncFalse" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="30f8e924-9784-0a43-e807-094f70e06567">
      <Execution id="ffe051fe-c341-4afc-a928-1ea6baf4f7d6" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 141, LiftID = 16, SlopeID = 239 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="4b90b21d-bc85-cbd4-ad74-d1655c8f0ca3">
      <Execution id="b9e6100c-0c0e-4f56-a38b-ff1fcc802b92" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 92, LiftID = 144, IsOpen = True })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="e1b6fdef-0601-28ce-6c9a-faca299e04a4">
      <Execution id="332fb697-284c-4eb0-a3f0-5421cf843d40" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 173, LiftID = 172, SlopeID = 123 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="462a5c13-b0ae-4c49-0d0e-40e5810b679d">
      <Execution id="a5392042-4efc-42a6-a4c8-379d3f065071" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestUpdateLiftSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 65)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="be925beb-9a0f-2849-4af3-afc1f1ff29aa">
      <Execution id="1cc59b24-e269-404b-aa0d-f658cf1ee7f3" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestDeleteUserByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e">
      <Execution id="098b18db-4c72-411f-b546-5ee3a22fa8fc" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="8f7ba917-f771-0dc5-f9b9-465c34344b12">
      <Execution id="c5918470-ac56-42fe-98c7-27f108b3c318" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 99, LiftID = 222, SlopeID = 100 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="0e2c08ac-bfd2-f146-710f-526bf0c5d078">
      <Execution id="676351e3-6b39-4734-bdf7-b5cadf460947" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopesByIDsAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 120, SlopeName = slopeNamed7dc9164-7cac-4e82-b315-c07f88766dd2, IsOpen = True, DifficultyLevel = 123, ConnectedLifts =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="9cf76ae7-4fe0-b011-6b78-508c99f0716f">
      <Execution id="7529d4ac-e1f8-4342-a953-8dbc72e2ec30" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 140, CardID = 239, UserEmail = UserEmail2dd69147-c018-4c87-aa20-de55f3193b4d, Password = password39ad0985-f607-4ab0-9abe-496b1725bac4, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="ae33c35f-1d3c-cd70-9d55-c7ebb379cd02">
      <Execution id="f8adfe7a-7cd0-464e-b63f-1d30ba64feed" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestUpdateUserByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 174, CardID = 160, UserEmail = UserEmail048e6193-6808-4974-aeca-61d514ee1411, Password = passwordc0e8bfd2-6f10-416e-9683-563cc63c8a66, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="f6d7c572-1a23-cb59-8721-f379a0070632">
      <Execution id="edb17519-2f89-40ae-bb23-de2b5486f216" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="607e8298-f113-be33-300e-15a343893443">
      <Execution id="95f1c3f2-6d8e-47d4-9bd4-212ba18db86a" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftsAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 68, CardID = 159, UserEmail = UserEmail1d5ec854-0901-4814-acb2-398b5379711d, Password = password33c0edc6-0f74-4c66-9d5c-d038b8726ac9, Permissions = UNAUTHORIZED })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="552b3f56-1f5c-9a4c-f52a-54c265bf6e00">
      <Execution id="de3b1163-b404-425e-be2a-fbf5e5e4b8cd" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserIdExistsAsyncTrue" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 239, LiftName = liftName7765e7a4-92c8-4de6-ad83-b4e2a954b0de, IsOpen = True, SeatsAmount = 232, LiftingTime = 255, QueueTime = 39, ConnectedSlopes =  })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="ca71010d-75aa-36ec-7c92-84e1a02298e7">
      <Execution id="a6f634af-ed8c-4e8b-85a4-50e3aa92cb8d" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestUpdateLiftByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 165)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="7f3be15e-ac61-d59e-6cc0-bc402980dc15">
      <Execution id="9b335293-18cf-47d1-80c9-2b644d3d3adf" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesByLiftIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 112, LiftID = 87, SlopeID = 165 })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="995e2c09-4052-84dc-b70c-c871dcd69cd1">
      <Execution id="7799ad55-0723-40c3-937c-a71455a06a0c" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 80)" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="88e80ad5-e674-0bdf-1fa5-36e4f0c155b9">
      <Execution id="91062c55-2d45-4935-b551-834cdf07bfa9" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestDeleteLiftByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 109, LiftID = 49, IsOpen = True })" storage="c:\users\alena\desktop\7_sem\testing_and_debugging\skiresort\accesstodb.tests\bin\debug\net6.0\accesstodb.tests.dll" id="ba72977c-f3bc-a459-6e4a-14a3b3a7121c">
      <Execution id="90df5279-4a3d-4c6f-a0d8-fded09f4a971" />
      <TestMethod codeBase="C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\bin\Debug\net6.0\AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestUpdateTurnstileByIDAsyncOk" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="61330dfb-c2c6-a0fb-9579-ae0f1b74e2a5" executionId="259733f6-a549-40e5-b6d9-9babf87e385f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f6d7c572-1a23-cb59-8721-f379a0070632" executionId="edb17519-2f89-40ae-bb23-de2b5486f216" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="763e86ba-d00f-c6c8-8fc3-4d930399d878" executionId="3bb0761b-49da-4104-85fb-735171ad6de0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="00108a47-5fa2-56f4-2039-353848a208b3" executionId="dcd10085-b2e5-4881-86ee-be69f951a2c8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9bbefb83-8311-6e03-307f-415e3495e223" executionId="ee5074d1-cbcc-48b0-9502-5715f1bac0cc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="610005a1-3a12-92e2-b6ab-0217eae4ffef" executionId="ae20bfd5-c9d4-415b-a570-0b944f45c543" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="995e2c09-4052-84dc-b70c-c871dcd69cd1" executionId="7799ad55-0723-40c3-937c-a71455a06a0c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7f3be15e-ac61-d59e-6cc0-bc402980dc15" executionId="9b335293-18cf-47d1-80c9-2b644d3d3adf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" executionId="3c57bdc7-f36a-4c50-8a56-d19da14f3386" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="88e80ad5-e674-0bdf-1fa5-36e4f0c155b9" executionId="91062c55-2d45-4935-b551-834cdf07bfa9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7d7062db-e86e-6d76-fefc-df8ab6e326ad" executionId="3a281712-294e-4a80-b906-3deca618d20b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4b90b21d-bc85-cbd4-ad74-d1655c8f0ca3" executionId="b9e6100c-0c0e-4f56-a38b-ff1fcc802b92" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a16480ff-462b-437f-9fce-24c5100df52a" executionId="7879b2b5-bb21-4035-9a13-68afd14f7f91" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30f8e924-9784-0a43-e807-094f70e06567" executionId="ffe051fe-c341-4afc-a928-1ea6baf4f7d6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2a5206c0-dab1-317d-c00e-2bafd7004ec0" executionId="ce5a7ccb-4968-461d-968a-337b6abfe31d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ec229f70-485a-f91b-53ed-bce655f6cd58" executionId="72f3ce15-b83e-4659-9c95-28fee3bf003a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ae33c35f-1d3c-cd70-9d55-c7ebb379cd02" executionId="f8adfe7a-7cd0-464e-b63f-1d30ba64feed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ca71010d-75aa-36ec-7c92-84e1a02298e7" executionId="a6f634af-ed8c-4e8b-85a4-50e3aa92cb8d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" executionId="c5918470-ac56-42fe-98c7-27f108b3c318" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0e2c08ac-bfd2-f146-710f-526bf0c5d078" executionId="676351e3-6b39-4734-bdf7-b5cadf460947" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a547e23a-95d2-8652-2514-d9b3143bde43" executionId="28a8b22c-b784-432a-b6b9-6c902ba4aee2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dcd6f3a5-e3fd-62bf-8e6b-9f6c262fadab" executionId="448dcd9c-21b7-45d1-bd1e-c59257111adb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3741b26d-6ee0-6246-29e4-92009bff37b0" executionId="e808730b-0f00-4285-a904-8f2c013932f1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8ce0c08a-9f34-2833-f6d2-be2fa56d457b" executionId="d1ee9412-2639-4612-938c-f0fdf44dfe90" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e1b6fdef-0601-28ce-6c9a-faca299e04a4" executionId="332fb697-284c-4eb0-a3f0-5421cf843d40" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9cf76ae7-4fe0-b011-6b78-508c99f0716f" executionId="7529d4ac-e1f8-4342-a953-8dbc72e2ec30" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="462a5c13-b0ae-4c49-0d0e-40e5810b679d" executionId="a5392042-4efc-42a6-a4c8-379d3f065071" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" executionId="098b18db-4c72-411f-b546-5ee3a22fa8fc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6bd738e6-a6f4-60a9-74d3-bbd77b103140" executionId="86297afb-f0f4-4e68-90b2-6ff09991dedc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="06048cb5-7b23-99a1-8bf2-496d19e5d42d" executionId="9952304a-a75f-4b48-b925-680d0a0ab061" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ba72977c-f3bc-a459-6e4a-14a3b3a7121c" executionId="90df5279-4a3d-4c6f-a0d8-fded09f4a971" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3a064424-4ecd-7214-542c-7d2f9a6f51e1" executionId="63aadffb-c555-4fb2-8f54-02ffc419c1bf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="93594747-2659-3dec-765e-4195ab51419d" executionId="6d5003c9-4f8b-477b-8df3-35cd79652578" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="be925beb-9a0f-2849-4af3-afc1f1ff29aa" executionId="1cc59b24-e269-404b-aa0d-f658cf1ee7f3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3c521313-4ed6-6bce-b4f9-c359411028e7" executionId="f54e1368-72c2-48e8-be0c-cc9674397b35" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="552b3f56-1f5c-9a4c-f52a-54c265bf6e00" executionId="de3b1163-b404-425e-be2a-fbf5e5e4b8cd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f9435956-2e34-e52b-c34e-dce53665cf8e" executionId="64f57024-92ed-4b9c-ac2e-b37eed909f2c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f445a7ef-1ec0-05e6-132b-897177ca53d9" executionId="940f3f5a-3947-4b15-aedb-ddcb8a87a9a5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="607e8298-f113-be33-300e-15a343893443" executionId="95f1c3f2-6d8e-47d4-9bd4-212ba18db86a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Список результатов" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="Все загруженные результаты" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="39" executed="39" passed="35" failed="4" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.5+1caef2f33e (64-bit .NET 6.0.3)&#xD;
[xUnit.net 00:00:00.56]   Discovering: AccessToDB.Tests&#xD;
[xUnit.net 00:00:00.67]   Discovered:  AccessToDB.Tests&#xD;
[xUnit.net 00:00:00.67]   Starting:    AccessToDB.Tests&#xD;
[xUnit.net 00:00:25.64]       System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
[xUnit.net 00:00:25.64]       Stack Trace:&#xD;
[xUnit.net 00:00:25.64]            at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
[xUnit.net 00:00:25.64]            at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
[xUnit.net 00:00:25.64]            at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
[xUnit.net 00:00:25.64]            at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
[xUnit.net 00:00:25.64]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
[xUnit.net 00:00:25.64]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:25.64]            at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
[xUnit.net 00:00:25.64]            at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
[xUnit.net 00:00:25.64]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
[xUnit.net 00:00:25.64]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:25.64]            at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
[xUnit.net 00:00:25.64]            at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
[xUnit.net 00:00:25.64]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:25.64]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:25.64]            at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
[xUnit.net 00:00:25.64]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolSlopesRepository.cs(36,0): at AccessToDB.RepositoriesTarantool.TarantoolSlopesRepository.GetSlopesAsync(UInt32 offset, UInt32 limit)&#xD;
[xUnit.net 00:00:25.64]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\SlopesRepositoryTests.cs(40,0): at AccessToDB.Tests.SlopesRepositoryTests.CleanSlopesTable()&#xD;
[xUnit.net 00:00:25.64]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\SlopesRepositoryTests.cs(30,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()&#xD;
[xUnit.net 00:00:25.64]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)&#xD;
[xUnit.net 00:00:27.33]       System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
[xUnit.net 00:00:27.33]       Stack Trace:&#xD;
[xUnit.net 00:00:27.33]            at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
[xUnit.net 00:00:27.33]            at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.Tarantool.Client.Schema.Select[T](UInt32 spaceId, Iterator iterator, UInt32 id)&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.Tarantool.Client.Schema.Reload()&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.Tarantool.Client.Box.Connect()&#xD;
[xUnit.net 00:00:27.33]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)&#xD;
[xUnit.net 00:00:27.33]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs(52,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)&#xD;
[xUnit.net 00:00:27.33]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)&#xD;
[xUnit.net 00:00:27.33]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()&#xD;
[xUnit.net 00:00:27.34]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)&#xD;
[xUnit.net 00:00:53.54]       System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
[xUnit.net 00:00:53.54]       Stack Trace:&#xD;
[xUnit.net 00:00:53.54]            at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
[xUnit.net 00:00:53.54]            at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
[xUnit.net 00:00:53.54]            at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
[xUnit.net 00:00:53.54]            at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass24_0.&lt;TryGenerateConverterFromGenericConverter&gt;b__0(Type x)&#xD;
[xUnit.net 00:00:53.54]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
[xUnit.net 00:00:53.55]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:53.55]            at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
[xUnit.net 00:00:53.55]            at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
[xUnit.net 00:00:53.55]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:53.55]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:53.55]            at ProGaudi.Tarantool.Client.Index.Select[TKey,TTuple](TKey key, SelectOptions options)&#xD;
[xUnit.net 00:00:53.55]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolRepositories\TarantoolLiftsSlopesRepository.cs(43,0): at AccessToDB.RepositoriesTarantool.TarantoolLiftsSlopesRepository.GetLiftsSlopesAsync(UInt32 offset, UInt32 limit)&#xD;
[xUnit.net 00:00:53.55]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs(48,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests.CleanLiftsSlopesTable()&#xD;
[xUnit.net 00:00:53.55]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs(38,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()&#xD;
[xUnit.net 00:00:53.55]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)&#xD;
[xUnit.net 00:00:58.40]       System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.&#xD;
[xUnit.net 00:00:58.40]       Stack Trace:&#xD;
[xUnit.net 00:00:58.40]            at System.Collections.Generic.Dictionary`2.FindValue(TKey key)&#xD;
[xUnit.net 00:00:58.40]            at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.MsgPack.Light.MsgPackContext.&lt;&gt;c__DisplayClass27_0.&lt;TryGenerateArrayConverter&gt;b__0(Type x)&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateArrayConverter(Type type)&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.Initialize(MsgPackContext context)&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.MsgPack.Light.MsgPackContext.CreateAndInializeConverter(Func`1 converterActivator)&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.Tarantool.Client.Schema.Select[T](UInt32 spaceId, Iterator iterator, UInt32 id)&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.Tarantool.Client.Schema.Reload()&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.Tarantool.Client.Box.Connect()&#xD;
[xUnit.net 00:00:58.40]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)&#xD;
[xUnit.net 00:00:58.40]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs(52,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)&#xD;
[xUnit.net 00:00:58.40]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB\TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)&#xD;
[xUnit.net 00:00:58.40]         C:\Users\alena\Desktop\7_sem\testing_and_debugging\SkiResort\AccessToDB.Tests\LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()&#xD;
[xUnit.net 00:00:58.40]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)&#xD;
[xUnit.net 00:00:58.40]   Finished:    AccessToDB.Tests&#xD;
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-10-15T21:23:29.7958126+03:00">
        <Text>[xUnit.net 00:00:25.64]     AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 120, SlopeName = slopeNamed7dc9164-7cac-4e82-b315-c07f88766dd2, IsOpen = True, DifficultyLevel = 123, ConnectedLifts =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-10-15T21:23:31.4877886+03:00">
        <Text>[xUnit.net 00:00:27.33]     AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 240) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-10-15T21:23:57.7034375+03:00">
        <Text>[xUnit.net 00:00:53.54]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 99, LiftID = 222, SlopeID = 100 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-10-15T21:24:02.5545392+03:00">
        <Text>[xUnit.net 00:00:58.39]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 6) [FAIL]</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>