<?xml version="1.0" encoding="utf-8"?>
<TestRun id="0e11bcab-5197-441e-8289-ed8fed0ccb94" name="@DESKTOP-TJ9D65N 2022-11-03 20:25:48" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2022-11-03T20:25:48.6300558+03:00" queuing="2022-11-03T20:25:48.6300559+03:00" start="2022-11-03T20:25:46.1579810+03:00" finish="2022-11-03T20:25:49.0923597+03:00" />
  <TestSettings name="default" id="943b3abe-63f1-4de9-9b75-b89d80fead64">
    <Deployment runDeploymentRoot="_DESKTOP-TJ9D65N_2022-11-03_20_25_48" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="0fdbdf88-beec-43b2-9e82-8891e165aedb" testId="2d4f4c38-7712-5cbb-f2bd-0daec8ec27e3" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 141, LiftID = 66, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.7257354+03:00" endTime="2022-11-03T20:25:48.7257354+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0fdbdf88-beec-43b2-9e82-8891e165aedb">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f6329e57-10e7-4826-900c-7e3868efd8c5" testId="023f97fb-edd9-a456-5ba2-82206cbc8079" testName="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 196)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.6852169+03:00" endTime="2022-11-03T20:25:48.6852170+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f6329e57-10e7-4826-900c-7e3868efd8c5">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6df54df7-d75b-4f38-8880-034906c71afa" testId="f0ecc513-d945-be0d-1b5d-ca8cb1b97d0f" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 203, SlopeName = slopeName40ab5677-c545-404e-b5ca-93bf3a1c2e64, IsOpen = True, DifficultyLevel = 103, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:49.0052129+03:00" endTime="2022-11-03T20:25:49.0052131+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6df54df7-d75b-4f38-8880-034906c71afa">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f93de089-cf15-4bf4-9886-d88540f09ac2" testId="eed465eb-7999-88a4-64e5-4716ee411881" testName="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 73, CardID = 69, UserEmail = UserEmail57cc6eec-be9d-4da5-ae1e-dea79e2ae738, Password = password1e666710-d958-49f2-8506-30944cbaff03, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.7945760+03:00" endTime="2022-11-03T20:25:48.7945760+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f93de089-cf15-4bf4-9886-d88540f09ac2">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f05118cc-0148-4d83-b8da-51ebd3c1cab9" testId="607e8298-f113-be33-300e-15a343893443" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.6416859+03:00" endTime="2022-11-03T20:25:48.6416860+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f05118cc-0148-4d83-b8da-51ebd3c1cab9">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="08c7836d-6eaa-4e75-a69d-a62be51407b9" testId="0a7bd4e3-231a-19c6-2ce4-1b235948bc8d" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 38, SlopeName = slopeNamed72d5c9f-529f-43f5-acb9-9ebfe6099521, IsOpen = True, DifficultyLevel = 141, ConnectedLifts =  }, slope2: Slope { SlopeID = 33, SlopeName = slopeName205c815e-044a-4c56-9203-4a0149cd8ec7, IsOpen = False, DifficultyLevel = 42, ConnectedLifts =  }, lift1: Lift { LiftID = 126, LiftName = liftName77bc2e47-d992-481b-ab8a-350f5ec3e70e, IsOpen = True, SeatsAmount = 251, LiftingTime = 43, QueueTime = 162, ConnectedSlopes =  }, lift2: Lift { LiftID = 209, LiftName = liftName9f7c9c9f-b32a-4bab-a386-a78a65a1210a, IsOpen = False, SeatsAmount = 101, LiftingTime = 152, QueueTime = 112, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.5000565+03:00" endTime="2022-11-03T20:25:48.5000566+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="08c7836d-6eaa-4e75-a69d-a62be51407b9">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b815ab35-e6b9-494c-81a1-4503c1918baa" testId="3c521313-4ed6-6bce-b4f9-c359411028e7" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.7411772+03:00" endTime="2022-11-03T20:25:48.7411773+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b815ab35-e6b9-494c-81a1-4503c1918baa">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a9093083-4d75-4986-a789-b62bbd1e4e0c" testId="30331529-5fba-6c4c-b082-c73b41820b04" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 215, LiftName = liftNamea7e310f6-4c98-441f-b057-b10bf13511ef, IsOpen = True, SeatsAmount = 94, LiftingTime = 51, QueueTime = 8, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.6565746+03:00" endTime="2022-11-03T20:25:48.6565746+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a9093083-4d75-4986-a789-b62bbd1e4e0c">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="daffef4e-00e0-4206-956b-06be270180b1" testId="30f8e924-9784-0a43-e807-094f70e06567" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.5265879+03:00" endTime="2022-11-03T20:25:48.5265880+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="daffef4e-00e0-4206-956b-06be270180b1">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="da35ba74-3129-4df4-a854-6ac7bb47a159" testId="7b112fc7-6de3-e6d3-ba89-2149340ba068" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftName216473e4-a349-481b-a004-e1782251b8f0&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.6138189+03:00" endTime="2022-11-03T20:25:48.6138190+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="da35ba74-3129-4df4-a854-6ac7bb47a159">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bc03a08d-eb76-4427-9cee-3a0987013628" testId="faa4bebd-33e4-8909-c377-b5b3b614f955" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 99, LiftID = 20, SlopeID = 139 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.4511606+03:00" endTime="2022-11-03T20:25:48.4511914+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bc03a08d-eb76-4427-9cee-3a0987013628">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="eab8e692-d2db-44a5-836d-f944c45e4ad3" testId="f9435956-2e34-e52b-c34e-dce53665cf8e" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.7821932+03:00" endTime="2022-11-03T20:25:48.7821932+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eab8e692-d2db-44a5-836d-f944c45e4ad3">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6934e37f-5854-4faa-92aa-54c26d07258a" testId="ef817a91-2730-b493-c17f-f39f02e564ca" testName="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 190)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.9265888+03:00" endTime="2022-11-03T20:25:48.9265888+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6934e37f-5854-4faa-92aa-54c26d07258a">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5c8b57da-8678-4604-8ba1-7645dea2720d" testId="7089e092-36b2-b763-8468-78d9ee374a9c" testName="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 170)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.8239866+03:00" endTime="2022-11-03T20:25:48.8239867+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5c8b57da-8678-4604-8ba1-7645dea2720d">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9ecdc18e-028c-4c67-ba62-bd41fafd732e" testId="881d064b-a5c2-eda8-4f9a-0a06de71135c" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 63, CardID = 54, UserEmail = UserEmaila3f81e58-3594-47fe-95ea-58751c1a877f, Password = passworda25ee2f5-6f46-4804-b23f-d4e263440d09, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.8367957+03:00" endTime="2022-11-03T20:25:48.8367958+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9ecdc18e-028c-4c67-ba62-bd41fafd732e">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6db43ead-37c7-475b-a668-7edd24ae1881" testId="df85e9d8-4ce7-bb6a-cd03-75ed7263cfd0" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 219, CardID = 227, UserEmail = UserEmail3d0a3dde-bcce-499d-94c2-353d61fb1e86, Password = passworde29ed26a-5855-4aee-b513-8704240e0f70, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.8997461+03:00" endTime="2022-11-03T20:25:48.8997462+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6db43ead-37c7-475b-a668-7edd24ae1881">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0958fd65-17f5-47a1-b5cc-91c17fbf3ef3" testId="eefe43db-66b6-6fb7-4bb4-c88e073bb9f1" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 57, LiftID = 30, SlopeID = 34 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.4863746+03:00" endTime="2022-11-03T20:25:48.4863746+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0958fd65-17f5-47a1-b5cc-91c17fbf3ef3">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="262c1470-3036-48f1-a113-8807c2456ff0" testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" testName="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.9658971+03:00" endTime="2022-11-03T20:25:48.9658972+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="262c1470-3036-48f1-a113-8807c2456ff0">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="aa1fe93d-b121-4f26-a01e-556cce816005" testId="a647a564-373c-d218-eceb-5f1dfddeab9a" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 160, CardID = 224, UserEmail = UserEmaile9618603-1cdc-41fd-aaaf-38c4936b795d, Password = passwordfe021a55-7d0a-4a97-850a-f86a568a4ced, Permissions = UNAUTHORIZED })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.8507826+03:00" endTime="2022-11-03T20:25:48.8507827+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="aa1fe93d-b121-4f26-a01e-556cce816005">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="80094f71-2711-494e-a074-180b71120a5b" testId="3741b26d-6ee0-6246-29e4-92009bff37b0" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.8087268+03:00" endTime="2022-11-03T20:25:48.8087269+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="80094f71-2711-494e-a074-180b71120a5b">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7cb38c78-88bd-4f38-ba9e-be87731be7b9" testId="5d38c1df-c33b-14b6-e14d-b2bc26f8eb8a" testName="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 241, SlopeName = slopeName99bfd0b1-f1c4-4fac-9380-7703e403f25c, IsOpen = True, DifficultyLevel = 46, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.9510188+03:00" endTime="2022-11-03T20:25:48.9510189+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7cb38c78-88bd-4f38-ba9e-be87731be7b9">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0253c321-63d2-4f2a-9e81-d6073c2e668e" testId="119c8373-cdcf-ceb4-a3a7-ccd68816a9a4" testName="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmail231ed12a-0049-431b-a8bd-b371949e6505&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.8685689+03:00" endTime="2022-11-03T20:25:48.8685690+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0253c321-63d2-4f2a-9e81-d6073c2e668e">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="aa9789a6-b90d-405e-babe-5a0c68838322" testId="30095e6b-1aac-9cb8-05c8-71797ae4b06b" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 217, LiftID = 131, SlopeID = 123 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.5513276+03:00" endTime="2022-11-03T20:25:48.5513277+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="aa9789a6-b90d-405e-babe-5a0c68838322">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e82fa37b-222e-40b9-a5ca-37a8cbc4582c" testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.5394734+03:00" endTime="2022-11-03T20:25:48.5394735+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e82fa37b-222e-40b9-a5ca-37a8cbc4582c">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4bb90ce6-6f9f-4817-b6d7-1e35c5d66f21" testId="9bbefb83-8311-6e03-307f-415e3495e223" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.9940311+03:00" endTime="2022-11-03T20:25:48.9940312+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4bb90ce6-6f9f-4817-b6d7-1e35c5d66f21">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4749f75a-e9dc-4173-88b5-c111b6912d29" testId="63f88348-2e93-e702-a98b-11993f226528" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 133)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.5783121+03:00" endTime="2022-11-03T20:25:48.5783122+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4749f75a-e9dc-4173-88b5-c111b6912d29">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="042fbaf7-6275-458e-a330-3f3b67281033" testId="4f61eaa4-8035-dd56-93b8-3a4389ec0484" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 48, LiftID = 180, SlopeID = 220 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.5134231+03:00" endTime="2022-11-03T20:25:48.5134232+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="042fbaf7-6275-458e-a330-3f3b67281033">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c4acae4e-4295-4483-a4e6-3be89b6b6d36" testId="86591471-d7da-2c56-2f26-676b14136efb" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 111)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.6998241+03:00" endTime="2022-11-03T20:25:48.6998242+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c4acae4e-4295-4483-a4e6-3be89b6b6d36">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0ea8904b-59ac-43aa-a675-d63840430aeb" testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" testName="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.9142346+03:00" endTime="2022-11-03T20:25:48.9142347+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0ea8904b-59ac-43aa-a675-d63840430aeb">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="76243d84-d8c0-4b3e-b737-e9d989816dde" testId="ee3cbb6d-49ca-ee71-dd68-a973050365b5" testName="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 35, LiftID = 223, SlopeID = 250 })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.5641190+03:00" endTime="2022-11-03T20:25:48.5641191+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="76243d84-d8c0-4b3e-b737-e9d989816dde">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs:line 34
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1f375f1d-f98f-4ce8-add2-488b49147eb6" testId="ca15c78c-15f5-c2f4-dcba-784cda612d3b" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 173, SlopeName = slopeName5f2c6be6-aaa0-413f-a0f2-1fb04e207ae3, IsOpen = True, DifficultyLevel = 254, ConnectedLifts =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.9396624+03:00" endTime="2022-11-03T20:25:48.9396625+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1f375f1d-f98f-4ce8-add2-488b49147eb6">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="50806044-3e53-4695-b154-850c77b2f295" testId="ec229f70-485a-f91b-53ed-bce655f6cd58" testName="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.6081379+03:00" endTime="2022-11-03T20:25:48.6081379+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="50806044-3e53-4695-b154-850c77b2f295">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a83d684f-8337-423a-b1b9-ca4d031619d1" testId="3585dbc8-8571-595a-b608-b04b7eaa1e3f" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 98)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.7687531+03:00" endTime="2022-11-03T20:25:48.7687532+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a83d684f-8337-423a-b1b9-ca4d031619d1">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bdfe18ef-110c-4842-9570-ddeeed2bddb9" testId="9b14f32a-85c6-683a-fabb-ea3ad247a334" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 76, LiftID = 22, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.7128513+03:00" endTime="2022-11-03T20:25:48.7128514+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bdfe18ef-110c-4842-9570-ddeeed2bddb9">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9c539c8c-486f-44b6-8c10-69620abe6a8b" testId="e1e8c799-3dc1-6416-713d-e10b7a15472f" testName="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 81, LiftName = liftNamef7a14320-6948-47d0-9f1b-95cdb7beba52, IsOpen = True, SeatsAmount = 230, LiftingTime = 38, QueueTime = 40, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.6724125+03:00" endTime="2022-11-03T20:25:48.6724126+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9c539c8c-486f-44b6-8c10-69620abe6a8b">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5ccede4f-98ad-4434-96c0-91b5f0be25a6" testId="44c6cef8-8699-460d-6475-19da209d97d4" testName="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;email4bd6d7c6-c0eb-49a6-b0ae-fb03d7a918f1&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.8872369+03:00" endTime="2022-11-03T20:25:48.8872370+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5ccede4f-98ad-4434-96c0-91b5f0be25a6">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.UsersRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b648917f-8780-4873-9264-1fd25cbe2a20" testId="7ddfa7d3-7bb6-7463-5b90-53e5731a18a7" testName="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 49, LiftID = 78, IsOpen = True })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.7553951+03:00" endTime="2022-11-03T20:25:48.7553952+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b648917f-8780-4873-9264-1fd25cbe2a20">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs:line 29
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8bf9280a-22c9-4d6e-8b9d-8f7b5f283e91" testId="b17f8b58-c556-2ddd-976b-44502db34397" testName="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeName15337547-9372-42d6-9a27-0a1ad6b089bd&quot;)" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.9780375+03:00" endTime="2022-11-03T20:25:48.9780376+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8bf9280a-22c9-4d6e-8b9d-8f7b5f283e91">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ad0a45a7-b8d9-4892-959b-e9dfe9b833f9" testId="6f3d713e-798a-a648-38ae-f4e1693da0df" testName="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 166, LiftName = liftName8702ad60-3b90-4dfe-9e06-11cd9c2059b7, IsOpen = True, SeatsAmount = 68, LiftingTime = 32, QueueTime = 239, ConnectedSlopes =  })" computerName="DESKTOP-TJ9D65N" duration="00:00:00.0010000" startTime="2022-11-03T20:25:48.6268449+03:00" endTime="2022-11-03T20:25:48.6268449+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ad0a45a7-b8d9-4892-959b-e9dfe9b833f9">
      <Output>
        <ErrorInfo>
          <Message>System.Net.Sockets.SocketException : Connection refused</Message>
          <StackTrace>   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
--- End of stack trace from previous location ---
   at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location ---
   at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect()
   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
   at AccessToDB.TarantoolContext.Initialize(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 51
   at AccessToDB.TarantoolContext..ctor(String connection_string) in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs:line 32
   at AccessToDB.Tests.LiftsRepositoryTests..ctor() in /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs:line 28
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: &quot;slopeName15337547-9372-42d6-9a27-0a1ad6b089bd&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="b17f8b58-c556-2ddd-976b-44502db34397">
      <Execution id="8bf9280a-22c9-4d6e-8b9d-8f7b5f283e91" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 141, LiftID = 66, IsOpen = True })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="2d4f4c38-7712-5cbb-f2bd-0daec8ec27e3">
      <Execution id="0fdbdf88-beec-43b2-9e82-8891e165aedb" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestUpdateTurnstileByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="3741b26d-6ee0-6246-29e4-92009bff37b0">
      <Execution id="80094f71-2711-494e-a074-180b71120a5b" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUsersAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 173, SlopeName = slopeName5f2c6be6-aaa0-413f-a0f2-1fb04e207ae3, IsOpen = True, DifficultyLevel = 254, ConnectedLifts =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="ca15c78c-15f5-c2f4-dcba-784cda612d3b">
      <Execution id="1f375f1d-f98f-4ce8-add2-488b49147eb6" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 190)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="ef817a91-2730-b493-c17f-f39f02e564ca">
      <Execution id="6934e37f-5854-4faa-92aa-54c26d07258a" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestDeleteSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="f9435956-2e34-e52b-c34e-dce53665cf8e">
      <Execution id="eab8e692-d2db-44a5-836d-f944c45e4ad3" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 35, LiftID = 223, SlopeID = 250 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="ee3cbb6d-49ca-ee71-dd68-a973050365b5">
      <Execution id="76243d84-d8c0-4b3e-b737-e9d989816dde" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: &quot;userEmail231ed12a-0049-431b-a8bd-b371949e6505&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="119c8373-cdcf-ceb4-a3a7-ccd68816a9a4">
      <Execution id="0253c321-63d2-4f2a-9e81-d6073c2e668e" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserEmailExistsAsyncFalse" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="4145f44e-b4b1-a618-09e8-c631496e6f1a">
      <Execution id="e82fa37b-222e-40b9-a5ca-37a8cbc4582c" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 98)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="3585dbc8-8571-595a-b608-b04b7eaa1e3f">
      <Execution id="a83d684f-8337-423a-b1b9-ca4d031619d1" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 99, LiftID = 20, SlopeID = 139 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="faa4bebd-33e4-8909-c377-b5b3b614f955">
      <Execution id="bc03a08d-eb76-4427-9cee-3a0987013628" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftSlopeByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 170)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="7089e092-36b2-b763-8468-78d9ee374a9c">
      <Execution id="5c8b57da-8678-4604-8ba1-7645dea2720d" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestDeleteUserByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 241, SlopeName = slopeName99bfd0b1-f1c4-4fac-9380-7703e403f25c, IsOpen = True, DifficultyLevel = 46, ConnectedLifts =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="5d38c1df-c33b-14b6-e14d-b2bc26f8eb8a">
      <Execution id="7cb38c78-88bd-4f38-ba9e-be87731be7b9" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestUpdateSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 217, LiftID = 131, SlopeID = 123 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="30095e6b-1aac-9cb8-05c8-71797ae4b06b">
      <Execution id="aa9789a6-b90d-405e-babe-5a0c68838322" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 219, CardID = 227, UserEmail = UserEmail3d0a3dde-bcce-499d-94c2-353d61fb1e86, Password = passworde29ed26a-5855-4aee-b513-8704240e0f70, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="df85e9d8-4ce7-bb6a-cd03-75ed7263cfd0">
      <Execution id="6db43ead-37c7-475b-a668-7edd24ae1881" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAsyncFailsWhenUserIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="9bbefb83-8311-6e03-307f-415e3495e223">
      <Execution id="4bb90ce6-6f9f-4817-b6d7-1e35c5d66f21" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestGetSlopesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: &quot;liftName216473e4-a349-481b-a004-e1782251b8f0&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="7b112fc7-6de3-e6d3-ba89-2149340ba068">
      <Execution id="da35ba74-3129-4df4-a854-6ac7bb47a159" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByNameAsyncFailsWhenNameNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="ec229f70-485a-f91b-53ed-bce655f6cd58">
      <Execution id="50806044-3e53-4695-b154-850c77b2f295" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 81, LiftName = liftNamef7a14320-6948-47d0-9f1b-95cdb7beba52, IsOpen = True, SeatsAmount = 230, LiftingTime = 38, QueueTime = 40, ConnectedSlopes =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="e1e8c799-3dc1-6416-713d-e10b7a15472f">
      <Execution id="9c539c8c-486f-44b6-8c10-69620abe6a8b" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="3c521313-4ed6-6bce-b4f9-c359411028e7">
      <Execution id="b815ab35-e6b9-494c-81a1-4503c1918baa" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="30f8e924-9784-0a43-e807-094f70e06567">
      <Execution id="daffef4e-00e0-4206-956b-06be270180b1" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestAddLiftSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 73, CardID = 69, UserEmail = UserEmail57cc6eec-be9d-4da5-ae1e-dea79e2ae738, Password = password1e666710-d958-49f2-8506-30944cbaff03, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="eed465eb-7999-88a4-64e5-4716ee411881">
      <Execution id="f93de089-cf15-4bf4-9886-d88540f09ac2" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestUpdateUserByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: &quot;email4bd6d7c6-c0eb-49a6-b0ae-fb03d7a918f1&quot;)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="44c6cef8-8699-460d-6475-19da209d97d4">
      <Execution id="5ccede4f-98ad-4434-96c0-91b5f0be25a6" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByEmailAsyncFailsWhenEmailNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 63, CardID = 54, UserEmail = UserEmaila3f81e58-3594-47fe-95ea-58751c1a877f, Password = passworda25ee2f5-6f46-4804-b23f-d4e263440d09, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="881d064b-a5c2-eda8-4f9a-0a06de71135c">
      <Execution id="9ecdc18e-028c-4c67-ba62-bd41fafd732e" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestCheckUserIdExistsAsyncTrue" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 160, CardID = 224, UserEmail = UserEmaile9618603-1cdc-41fd-aaaf-38c4936b795d, Password = passwordfe021a55-7d0a-4a97-850a-f86a568a4ced, Permissions = UNAUTHORIZED })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="a647a564-373c-d218-eceb-5f1dfddeab9a">
      <Execution id="aa1fe93d-b121-4f26-a01e-556cce816005" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestGetUserByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e">
      <Execution id="0ea8904b-59ac-43aa-a675-d63840430aeb" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.UsersRepositoryTests" name="TestAddUserAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 133)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="63f88348-2e93-e702-a98b-11993f226528">
      <Execution id="4749f75a-e9dc-4173-88b5-c111b6912d29" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="8f7ba917-f771-0dc5-f9b9-465c34344b12">
      <Execution id="262c1470-3036-48f1-a113-8807c2456ff0" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAutoIncrementAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 49, LiftID = 78, IsOpen = True })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="7ddfa7d3-7bb6-7463-5b90-53e5731a18a7">
      <Execution id="b648917f-8780-4873-9264-1fd25cbe2a20" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstileByIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 166, LiftName = liftName8702ad60-3b90-4dfe-9e06-11cd9c2059b7, IsOpen = True, SeatsAmount = 68, LiftingTime = 32, QueueTime = 239, ConnectedSlopes =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="6f3d713e-798a-a648-38ae-f4e1693da0df">
      <Execution id="ad0a45a7-b8d9-4892-959b-e9dfe9b833f9" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestUpdateLiftByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 57, LiftID = 30, SlopeID = 34 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="eefe43db-66b6-6fb7-4bb4-c88e073bb9f1">
      <Execution id="0958fd65-17f5-47a1-b5cc-91c17fbf3ef3" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestDeleteLiftSlopesByIDsAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 48, LiftID = 180, SlopeID = 220 })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="4f61eaa4-8035-dd56-93b8-3a4389ec0484">
      <Execution id="042fbaf7-6275-458e-a330-3f3b67281033" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestUpdateLiftSlopeByIDAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 76, LiftID = 22, IsOpen = True })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="9b14f32a-85c6-683a-fabb-ea3ad247a334">
      <Execution id="bdfe18ef-110c-4842-9570-ddeeed2bddb9" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="607e8298-f113-be33-300e-15a343893443">
      <Execution id="f05118cc-0148-4d83-b8da-51ebd3c1cab9" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestGetLiftsAsyncEmpty" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 196)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="023f97fb-edd9-a456-5ba2-82206cbc8079">
      <Execution id="f6329e57-10e7-4826-900c-7e3868efd8c5" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestDeleteLiftByIDAsyncFailsWhenIDNotExists" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 111)" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="86591471-d7da-2c56-2f26-676b14136efb">
      <Execution id="c4acae4e-4295-4483-a4e6-3be89b6b6d36" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.TurnstilesRepositoryTests" name="TestGetTurnstilesByLiftIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 203, SlopeName = slopeName40ab5677-c545-404e-b5ca-93bf3a1c2e64, IsOpen = True, DifficultyLevel = 103, ConnectedLifts =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="f0ecc513-d945-be0d-1b5d-ca8cb1b97d0f">
      <Execution id="6df54df7-d75b-4f38-8880-034906c71afa" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.SlopesRepositoryTests" name="TestAddSlopeAsyncFailsWhenSlopeIdRepeats" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 38, SlopeName = slopeNamed72d5c9f-529f-43f5-acb9-9ebfe6099521, IsOpen = True, DifficultyLevel = 141, ConnectedLifts =  }, slope2: Slope { SlopeID = 33, SlopeName = slopeName205c815e-044a-4c56-9203-4a0149cd8ec7, IsOpen = False, DifficultyLevel = 42, ConnectedLifts =  }, lift1: Lift { LiftID = 126, LiftName = liftName77bc2e47-d992-481b-ab8a-350f..." storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="0a7bd4e3-231a-19c6-2ce4-1b235948bc8d">
      <Execution id="08c7836d-6eaa-4e75-a69d-a62be51407b9" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsSlopesRepositoryTests" name="TestGetLiftsBySlopeIdAsyncOk" />
    </UnitTest>
    <UnitTest name="AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 215, LiftName = liftNamea7e310f6-4c98-441f-b057-b10bf13511ef, IsOpen = True, SeatsAmount = 94, LiftingTime = 51, QueueTime = 8, ConnectedSlopes =  })" storage="/mnt/c/users/alena/desktop/7_sem/testing_and_debugging/skiresort/accesstodb.tests/bin/debug/net6.0/accesstodb.tests.dll" id="30331529-5fba-6c4c-b082-c73b41820b04">
      <Execution id="a9093083-4d75-4986-a789-b62bbd1e4e0c" />
      <TestMethod codeBase="/mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/bin/Debug/net6.0/AccessToDB.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="AccessToDB.Tests.LiftsRepositoryTests" name="TestAddLiftAsyncFailsWhenLiftIdRepeats" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="2d4f4c38-7712-5cbb-f2bd-0daec8ec27e3" executionId="0fdbdf88-beec-43b2-9e82-8891e165aedb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="023f97fb-edd9-a456-5ba2-82206cbc8079" executionId="f6329e57-10e7-4826-900c-7e3868efd8c5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f0ecc513-d945-be0d-1b5d-ca8cb1b97d0f" executionId="6df54df7-d75b-4f38-8880-034906c71afa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="eed465eb-7999-88a4-64e5-4716ee411881" executionId="f93de089-cf15-4bf4-9886-d88540f09ac2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="607e8298-f113-be33-300e-15a343893443" executionId="f05118cc-0148-4d83-b8da-51ebd3c1cab9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0a7bd4e3-231a-19c6-2ce4-1b235948bc8d" executionId="08c7836d-6eaa-4e75-a69d-a62be51407b9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3c521313-4ed6-6bce-b4f9-c359411028e7" executionId="b815ab35-e6b9-494c-81a1-4503c1918baa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30331529-5fba-6c4c-b082-c73b41820b04" executionId="a9093083-4d75-4986-a789-b62bbd1e4e0c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30f8e924-9784-0a43-e807-094f70e06567" executionId="daffef4e-00e0-4206-956b-06be270180b1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7b112fc7-6de3-e6d3-ba89-2149340ba068" executionId="da35ba74-3129-4df4-a854-6ac7bb47a159" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="faa4bebd-33e4-8909-c377-b5b3b614f955" executionId="bc03a08d-eb76-4427-9cee-3a0987013628" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f9435956-2e34-e52b-c34e-dce53665cf8e" executionId="eab8e692-d2db-44a5-836d-f944c45e4ad3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ef817a91-2730-b493-c17f-f39f02e564ca" executionId="6934e37f-5854-4faa-92aa-54c26d07258a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7089e092-36b2-b763-8468-78d9ee374a9c" executionId="5c8b57da-8678-4604-8ba1-7645dea2720d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="881d064b-a5c2-eda8-4f9a-0a06de71135c" executionId="9ecdc18e-028c-4c67-ba62-bd41fafd732e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="df85e9d8-4ce7-bb6a-cd03-75ed7263cfd0" executionId="6db43ead-37c7-475b-a668-7edd24ae1881" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="eefe43db-66b6-6fb7-4bb4-c88e073bb9f1" executionId="0958fd65-17f5-47a1-b5cc-91c17fbf3ef3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8f7ba917-f771-0dc5-f9b9-465c34344b12" executionId="262c1470-3036-48f1-a113-8807c2456ff0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a647a564-373c-d218-eceb-5f1dfddeab9a" executionId="aa1fe93d-b121-4f26-a01e-556cce816005" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3741b26d-6ee0-6246-29e4-92009bff37b0" executionId="80094f71-2711-494e-a074-180b71120a5b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5d38c1df-c33b-14b6-e14d-b2bc26f8eb8a" executionId="7cb38c78-88bd-4f38-ba9e-be87731be7b9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="119c8373-cdcf-ceb4-a3a7-ccd68816a9a4" executionId="0253c321-63d2-4f2a-9e81-d6073c2e668e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30095e6b-1aac-9cb8-05c8-71797ae4b06b" executionId="aa9789a6-b90d-405e-babe-5a0c68838322" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4145f44e-b4b1-a618-09e8-c631496e6f1a" executionId="e82fa37b-222e-40b9-a5ca-37a8cbc4582c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9bbefb83-8311-6e03-307f-415e3495e223" executionId="4bb90ce6-6f9f-4817-b6d7-1e35c5d66f21" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="63f88348-2e93-e702-a98b-11993f226528" executionId="4749f75a-e9dc-4173-88b5-c111b6912d29" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4f61eaa4-8035-dd56-93b8-3a4389ec0484" executionId="042fbaf7-6275-458e-a330-3f3b67281033" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="86591471-d7da-2c56-2f26-676b14136efb" executionId="c4acae4e-4295-4483-a4e6-3be89b6b6d36" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e75bb6e2-88d9-af2a-a444-c4a9d67f0f0e" executionId="0ea8904b-59ac-43aa-a675-d63840430aeb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ee3cbb6d-49ca-ee71-dd68-a973050365b5" executionId="76243d84-d8c0-4b3e-b737-e9d989816dde" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ca15c78c-15f5-c2f4-dcba-784cda612d3b" executionId="1f375f1d-f98f-4ce8-add2-488b49147eb6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ec229f70-485a-f91b-53ed-bce655f6cd58" executionId="50806044-3e53-4695-b154-850c77b2f295" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3585dbc8-8571-595a-b608-b04b7eaa1e3f" executionId="a83d684f-8337-423a-b1b9-ca4d031619d1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9b14f32a-85c6-683a-fabb-ea3ad247a334" executionId="bdfe18ef-110c-4842-9570-ddeeed2bddb9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e1e8c799-3dc1-6416-713d-e10b7a15472f" executionId="9c539c8c-486f-44b6-8c10-69620abe6a8b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="44c6cef8-8699-460d-6475-19da209d97d4" executionId="5ccede4f-98ad-4434-96c0-91b5f0be25a6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7ddfa7d3-7bb6-7463-5b90-53e5731a18a7" executionId="b648917f-8780-4873-9264-1fd25cbe2a20" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b17f8b58-c556-2ddd-976b-44502db34397" executionId="8bf9280a-22c9-4d6e-8b9d-8f7b5f283e91" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6f3d713e-798a-a648-38ae-f4e1693da0df" executionId="ad0a45a7-b8d9-4892-959b-e9dfe9b833f9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="39" executed="39" passed="0" failed="39" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.5+1caef2f33e (64-bit .NET 6.0.10)
[xUnit.net 00:00:01.06]   Discovering: AccessToDB.Tests
[xUnit.net 00:00:01.19]   Discovered:  AccessToDB.Tests
[xUnit.net 00:00:01.20]   Starting:    AccessToDB.Tests
[xUnit.net 00:00:01.39]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.39]       Stack Trace:
[xUnit.net 00:00:01.39]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.39]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.39]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.39]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.39]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.39]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.40]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.40]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.40]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.40]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.40]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.40]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.40]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.40]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.40]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.40]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.40]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.40]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.43]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.43]       Stack Trace:
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.43]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.43]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.43]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.43]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.43]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.43]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.45]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.45]       Stack Trace:
[xUnit.net 00:00:01.45]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.45]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.45]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.45]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.45]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.45]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.45]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.45]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.45]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.45]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.45]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.45]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.45]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.46]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.46]       Stack Trace:
[xUnit.net 00:00:01.46]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.46]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.46]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.46]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.46]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.46]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.46]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.46]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.46]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.46]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.46]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.46]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.46]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.46]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.46]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.46]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.46]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.46]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.47]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.47]       Stack Trace:
[xUnit.net 00:00:01.47]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.47]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.47]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.47]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.47]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.47]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.47]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.47]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.47]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.47]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.47]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.47]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.47]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.47]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.47]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.47]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.47]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.47]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.48]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.48]       Stack Trace:
[xUnit.net 00:00:01.48]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.48]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.48]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.48]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.48]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.49]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.49]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.49]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.49]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.49]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.49]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.49]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.49]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.49]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.49]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.49]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.49]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.49]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.50]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.50]       Stack Trace:
[xUnit.net 00:00:01.50]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.50]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.50]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.50]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.50]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.50]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.50]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.50]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.50]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.50]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.50]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.50]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.50]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.51]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.51]       Stack Trace:
[xUnit.net 00:00:01.51]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.51]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.51]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.51]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.51]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.51]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.51]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.51]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.51]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.51]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.51]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.51]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.51]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.52]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.52]       Stack Trace:
[xUnit.net 00:00:01.52]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.52]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.52]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.52]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.52]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.52]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.52]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.52]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.52]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.52]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.52]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.52]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.52]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.52]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.52]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.52]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.52]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsSlopesRepositoryTests.cs(34,0): at AccessToDB.Tests.LiftsSlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.52]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.55]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.55]       Stack Trace:
[xUnit.net 00:00:01.55]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.55]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.55]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.55]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.55]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.55]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.55]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.55]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.55]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.55]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.55]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.55]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.55]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.55]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.55]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.55]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.55]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.55]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.56]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.56]       Stack Trace:
[xUnit.net 00:00:01.56]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.56]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.56]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.56]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.56]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.56]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.56]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.56]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.56]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.56]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.56]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.56]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.56]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.57]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.57]       Stack Trace:
[xUnit.net 00:00:01.57]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.57]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.57]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.57]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.57]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.57]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.57]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.57]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.57]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.57]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.57]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.57]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.57]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.59]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.59]       Stack Trace:
[xUnit.net 00:00:01.59]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.59]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.59]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.59]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.59]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.59]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.59]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.59]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.59]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.59]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.59]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.59]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.59]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.60]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.60]       Stack Trace:
[xUnit.net 00:00:01.60]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.60]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.60]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.60]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.60]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.60]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.60]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.60]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.60]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.60]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.60]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.60]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.60]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.62]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.62]       Stack Trace:
[xUnit.net 00:00:01.62]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.62]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.62]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.62]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.62]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.62]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.62]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.62]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.62]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.62]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.62]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.62]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.62]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.63]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.63]       Stack Trace:
[xUnit.net 00:00:01.63]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.63]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.63]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.63]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.63]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.63]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.63]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.63]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.63]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.63]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.63]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.63]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.63]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.63]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.63]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.63]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.63]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/LiftsRepositoryTests.cs(28,0): at AccessToDB.Tests.LiftsRepositoryTests..ctor()
[xUnit.net 00:00:01.63]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.64]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.64]       Stack Trace:
[xUnit.net 00:00:01.65]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.65]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.65]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.65]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.65]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.65]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.65]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.65]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.65]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.65]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.65]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.65]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.65]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.65]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.65]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.65]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.65]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.65]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.66]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.66]       Stack Trace:
[xUnit.net 00:00:01.66]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.66]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.66]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.66]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.66]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.66]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.66]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.66]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.66]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.66]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.66]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.66]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.66]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.67]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.67]       Stack Trace:
[xUnit.net 00:00:01.67]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.67]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.67]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.67]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.67]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.67]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.67]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.67]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.67]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.67]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.67]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.67]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.67]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.67]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.67]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.67]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.67]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.67]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.69]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.69]       Stack Trace:
[xUnit.net 00:00:01.69]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.69]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.69]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.69]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.69]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.69]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.69]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.69]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.69]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.69]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.69]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.69]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.69]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.70]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.70]       Stack Trace:
[xUnit.net 00:00:01.70]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.70]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.70]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.70]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.70]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.70]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.70]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.70]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.70]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.70]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.70]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.70]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.70]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.71]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.71]       Stack Trace:
[xUnit.net 00:00:01.71]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.71]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.71]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.71]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.71]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.71]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.71]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.71]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.71]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.71]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.71]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.71]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.71]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.73]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.73]       Stack Trace:
[xUnit.net 00:00:01.73]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.73]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.73]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.73]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.73]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.73]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.73]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.73]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.73]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.73]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.73]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.73]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/TurnstilesRepositoryTests.cs(29,0): at AccessToDB.Tests.TurnstilesRepositoryTests..ctor()
[xUnit.net 00:00:01.73]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.74]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.74]       Stack Trace:
[xUnit.net 00:00:01.74]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.74]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.74]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.74]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.74]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.74]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.74]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.74]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.74]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.74]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.74]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.74]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.74]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.75]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.75]       Stack Trace:
[xUnit.net 00:00:01.75]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.75]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.75]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.75]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.75]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.75]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.75]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.75]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.75]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.75]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.75]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.75]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.75]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.77]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.77]       Stack Trace:
[xUnit.net 00:00:01.77]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.77]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.77]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.77]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.77]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.77]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.77]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.77]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.77]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.77]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.77]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.77]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.77]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.77]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.77]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.77]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.77]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.77]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.78]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.78]       Stack Trace:
[xUnit.net 00:00:01.78]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.78]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.78]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.78]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.78]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.78]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.78]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.78]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.78]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.78]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.78]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.78]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.78]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.80]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.80]       Stack Trace:
[xUnit.net 00:00:01.80]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.80]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.80]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.80]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.80]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.80]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.80]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.80]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.80]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.80]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.80]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.80]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.80]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.80]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.80]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.80]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.80]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.80]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.81]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.81]       Stack Trace:
[xUnit.net 00:00:01.81]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.81]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.81]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.81]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.81]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.81]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.81]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.81]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.81]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.81]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.81]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.81]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.81]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.83]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.83]       Stack Trace:
[xUnit.net 00:00:01.83]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.83]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.83]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.83]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.83]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.83]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.83]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.83]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.83]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.83]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.83]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.83]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.83]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.84]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.84]       Stack Trace:
[xUnit.net 00:00:01.84]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.84]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.84]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.85]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.85]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.85]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.85]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.85]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.85]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.85]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.85]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.85]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.85]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.85]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.85]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.85]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.85]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.85]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.86]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.86]       Stack Trace:
[xUnit.net 00:00:01.86]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.86]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.86]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.86]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.86]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.86]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.86]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.86]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.86]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.86]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.86]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.86]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/UsersRepositoryTests.cs(28,0): at AccessToDB.Tests.UsersRepositoryTests..ctor()
[xUnit.net 00:00:01.86]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.87]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.87]       Stack Trace:
[xUnit.net 00:00:01.87]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.87]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.87]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.87]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.87]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.87]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.87]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.87]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.87]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.87]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.87]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.87]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.87]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.88]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.88]       Stack Trace:
[xUnit.net 00:00:01.89]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.89]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.89]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.89]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.89]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.89]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.89]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.89]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.89]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.89]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.89]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.89]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.89]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.90]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.90]       Stack Trace:
[xUnit.net 00:00:01.90]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.90]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.90]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.90]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.90]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.90]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.90]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.90]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.90]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.90]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.90]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.90]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.90]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.90]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.90]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.90]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.90]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.90]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.91]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.91]       Stack Trace:
[xUnit.net 00:00:01.91]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.91]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.91]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.91]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.91]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.91]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.91]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.91]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.91]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.91]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.91]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.91]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.91]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.91]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.91]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.91]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.91]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.91]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.92]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.92]       Stack Trace:
[xUnit.net 00:00:01.92]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.92]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.92]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.92]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.92]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.92]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.92]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.92]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.92]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.92]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.92]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.92]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.92]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.94]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.94]       Stack Trace:
[xUnit.net 00:00:01.94]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.94]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.94]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.94]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.94]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.94]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.94]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.94]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.94]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.94]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.94]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.94]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.94]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.95]       System.Net.Sockets.SocketException : Connection refused
[xUnit.net 00:00:01.95]       Stack Trace:
[xUnit.net 00:00:01.95]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
[xUnit.net 00:00:01.95]            at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
[xUnit.net 00:00:01.95]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)
[xUnit.net 00:00:01.95]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.95]            at System.Threading.Tasks.TaskToApm.End(IAsyncResult asyncResult)
[xUnit.net 00:00:01.95]            at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
[xUnit.net 00:00:01.95]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.&lt;&gt;c.&lt;ConnectAsync&gt;b__8_1(IAsyncResult asyncResult)
[xUnit.net 00:00:01.95]            at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
[xUnit.net 00:00:01.95]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.95]            at ProGaudi.Tarantool.Client.NetworkStreamPhysicalConnection.Connect(ClientOptions options)
[xUnit.net 00:00:01.95]            at ProGaudi.Tarantool.Client.LogicalConnection.Connect()
[xUnit.net 00:00:01.95]            at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()
[xUnit.net 00:00:01.95]            at ProGaudi.Tarantool.Client.Box.Connect()
[xUnit.net 00:00:01.95]            at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)
[xUnit.net 00:00:01.95]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(51,0): at AccessToDB.TarantoolContext.Initialize(String connection_string)
[xUnit.net 00:00:01.95]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB/TarantoolContext.cs(32,0): at AccessToDB.TarantoolContext..ctor(String connection_string)
[xUnit.net 00:00:01.95]         /mnt/c/Users/alena/Desktop/7_sem/testing_and_debugging/SkiResort/AccessToDB.Tests/SlopesRepositoryTests.cs(28,0): at AccessToDB.Tests.SlopesRepositoryTests..ctor()
[xUnit.net 00:00:01.95]            at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
[xUnit.net 00:00:01.96]   Finished:    AccessToDB.Tests
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.4444583+03:00">
        <Text>[xUnit.net 00:00:01.39]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopeByIdAsyncOk(liftSlope: LiftSlope { RecordID = 99, LiftID = 20, SlopeID = 139 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.4920844+03:00">
        <Text>[xUnit.net 00:00:01.43]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopesByIDsAsyncOk(liftSlope: LiftSlope { RecordID = 57, LiftID = 30, SlopeID = 34 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.4991149+03:00">
        <Text>[xUnit.net 00:00:01.45]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftsBySlopeIdAsyncOk(slope1: Slope { SlopeID = 38, SlopeName = slopeNamed72d5c9f-529f-43f5-acb9-9ebfe6099521, IsOpen = True, DifficultyLevel = 141, ConnectedLifts =  }, slope2: Slope { SlopeID = 33, SlopeName = slopeName205c815e-044a-4c56-9203-4a0149cd8ec7, IsOpen = False, DifficultyLevel = 42, ConnectedLifts =  }, lift1: Lift { LiftID = 126, LiftName = liftName77bc2e47-d992-481b-ab8a-350f5ec3e70e, IsOpen = True, SeatsAmount = 251, LiftingTime = 43, QueueTime = 162, ConnectedSlopes =  }, lift2: Lift { LiftID = 209, LiftName = liftName9f7c9c9f-b32a-4bab-a386-a78a65a1210a, IsOpen = False, SeatsAmount = 101, LiftingTime = 152, QueueTime = 112, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.5127577+03:00">
        <Text>[xUnit.net 00:00:01.46]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestUpdateLiftSlopeByIDAsyncOk(liftSlope: LiftSlope { RecordID = 48, LiftID = 180, SlopeID = 220 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.5258722+03:00">
        <Text>[xUnit.net 00:00:01.47]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.5386030+03:00">
        <Text>[xUnit.net 00:00:01.48]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetLiftSlopesAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.5504446+03:00">
        <Text>[xUnit.net 00:00:01.50]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestGetSlopesByLiftIdAsyncFailsWhenSlopeNotExists(liftSlope: LiftSlope { RecordID = 217, LiftID = 131, SlopeID = 123 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.5635381+03:00">
        <Text>[xUnit.net 00:00:01.51]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestAddLiftSlopeAsyncFailsWhenLiftSlopeIdRepeats(liftSlope: LiftSlope { RecordID = 35, LiftID = 223, SlopeID = 250 }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.5776040+03:00">
        <Text>[xUnit.net 00:00:01.52]     AccessToDB.Tests.LiftsSlopesRepositoryTests.TestDeleteLiftSlopeByIDAsyncFailsWhenIDNotExists(liftSlopeID: 133) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.6480806+03:00">
        <Text>[xUnit.net 00:00:01.55]     AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.6482639+03:00">
        <Text>[xUnit.net 00:00:01.56]     AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByNameAsyncFailsWhenNameNotExists(liftName: "liftName216473e4-a349-481b-a004-e1782251b8f0") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.6483646+03:00">
        <Text>[xUnit.net 00:00:01.57]     AccessToDB.Tests.LiftsRepositoryTests.TestUpdateLiftByIDAsyncOk(lift: Lift { LiftID = 166, LiftName = liftName8702ad60-3b90-4dfe-9e06-11cd9c2059b7, IsOpen = True, SeatsAmount = 68, LiftingTime = 32, QueueTime = 239, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.6484819+03:00">
        <Text>[xUnit.net 00:00:01.59]     AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftsAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.6558058+03:00">
        <Text>[xUnit.net 00:00:01.60]     AccessToDB.Tests.LiftsRepositoryTests.TestAddLiftAsyncFailsWhenLiftIdRepeats(lift: Lift { LiftID = 215, LiftName = liftNamea7e310f6-4c98-441f-b057-b10bf13511ef, IsOpen = True, SeatsAmount = 94, LiftingTime = 51, QueueTime = 8, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.6717414+03:00">
        <Text>[xUnit.net 00:00:01.62]     AccessToDB.Tests.LiftsRepositoryTests.TestGetLiftByIdAsyncOk(lift: Lift { LiftID = 81, LiftName = liftNamef7a14320-6948-47d0-9f1b-95cdb7beba52, IsOpen = True, SeatsAmount = 230, LiftingTime = 38, QueueTime = 40, ConnectedSlopes =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.6845332+03:00">
        <Text>[xUnit.net 00:00:01.63]     AccessToDB.Tests.LiftsRepositoryTests.TestDeleteLiftByIDAsyncFailsWhenIDNotExists(liftID: 196) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.6988756+03:00">
        <Text>[xUnit.net 00:00:01.64]     AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 111) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.7122362+03:00">
        <Text>[xUnit.net 00:00:01.66]     AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAsyncFailsWhenTurnstileIdRepeats(turnstile: Turnstile { TurnstileID = 76, LiftID = 22, IsOpen = True }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.7320201+03:00">
        <Text>[xUnit.net 00:00:01.67]     AccessToDB.Tests.TurnstilesRepositoryTests.TestUpdateTurnstileByIDAsyncOk(turnstile: Turnstile { TurnstileID = 141, LiftID = 66, IsOpen = True }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.7402942+03:00">
        <Text>[xUnit.net 00:00:01.69]     AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.7546977+03:00">
        <Text>[xUnit.net 00:00:01.70]     AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstileByIdAsyncOk(turnstile: Turnstile { TurnstileID = 49, LiftID = 78, IsOpen = True }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.7680512+03:00">
        <Text>[xUnit.net 00:00:01.71]     AccessToDB.Tests.TurnstilesRepositoryTests.TestDeleteTurnstileByIDAsyncFailsWhenIDNotExists(turnstileID: 98) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.7813135+03:00">
        <Text>[xUnit.net 00:00:01.73]     AccessToDB.Tests.TurnstilesRepositoryTests.TestAddTurnstileAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.7935285+03:00">
        <Text>[xUnit.net 00:00:01.74]     AccessToDB.Tests.UsersRepositoryTests.TestUpdateUserByIDAsyncOk(user: User { UserID = 73, CardID = 69, UserEmail = UserEmail57cc6eec-be9d-4da5-ae1e-dea79e2ae738, Password = password1e666710-d958-49f2-8506-30944cbaff03, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.8080852+03:00">
        <Text>[xUnit.net 00:00:01.75]     AccessToDB.Tests.UsersRepositoryTests.TestGetUsersAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.8229239+03:00">
        <Text>[xUnit.net 00:00:01.77]     AccessToDB.Tests.UsersRepositoryTests.TestDeleteUserByIDAsyncFailsWhenIDNotExists(userID: 170) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.8356774+03:00">
        <Text>[xUnit.net 00:00:01.78]     AccessToDB.Tests.UsersRepositoryTests.TestCheckUserIdExistsAsyncTrue(user: User { UserID = 63, CardID = 54, UserEmail = UserEmaila3f81e58-3594-47fe-95ea-58751c1a877f, Password = passworda25ee2f5-6f46-4804-b23f-d4e263440d09, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.8534821+03:00">
        <Text>[xUnit.net 00:00:01.80]     AccessToDB.Tests.UsersRepositoryTests.TestGetUserByIdAsyncOk(user: User { UserID = 160, CardID = 224, UserEmail = UserEmaile9618603-1cdc-41fd-aaaf-38c4936b795d, Password = passwordfe021a55-7d0a-4a97-850a-f86a568a4ced, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.8677471+03:00">
        <Text>[xUnit.net 00:00:01.81]     AccessToDB.Tests.UsersRepositoryTests.TestCheckUserEmailExistsAsyncFalse(userEmail: "userEmail231ed12a-0049-431b-a8bd-b371949e6505") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.8858576+03:00">
        <Text>[xUnit.net 00:00:01.83]     AccessToDB.Tests.UsersRepositoryTests.TestGetUserByEmailAsyncFailsWhenEmailNotExists(email: "email4bd6d7c6-c0eb-49a6-b0ae-fb03d7a918f1") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.8987629+03:00">
        <Text>[xUnit.net 00:00:01.84]     AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 219, CardID = 227, UserEmail = UserEmail3d0a3dde-bcce-499d-94c2-353d61fb1e86, Password = passworde29ed26a-5855-4aee-b513-8704240e0f70, Permissions = UNAUTHORIZED }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.9132839+03:00">
        <Text>[xUnit.net 00:00:01.86]     AccessToDB.Tests.UsersRepositoryTests.TestAddUserAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.9257928+03:00">
        <Text>[xUnit.net 00:00:01.87]     AccessToDB.Tests.SlopesRepositoryTests.TestDeleteSlopeByIDAsyncFailsWhenIDNotExists(slopeID: 190) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.9388862+03:00">
        <Text>[xUnit.net 00:00:01.88]     AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByIdAsyncOk(slope: Slope { SlopeID = 173, SlopeName = slopeName5f2c6be6-aaa0-413f-a0f2-1fb04e207ae3, IsOpen = True, DifficultyLevel = 254, ConnectedLifts =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.9502290+03:00">
        <Text>[xUnit.net 00:00:01.90]     AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 241, SlopeName = slopeName99bfd0b1-f1c4-4fac-9380-7703e403f25c, IsOpen = True, DifficultyLevel = 46, ConnectedLifts =  }) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.9650837+03:00">
        <Text>[xUnit.net 00:00:01.91]     AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAutoIncrementAsyncOk [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.9847058+03:00">
        <Text>[xUnit.net 00:00:01.92]     AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopeByNameAsyncFailsWhenNameNotExists(slopeName: "slopeName15337547-9372-42d6-9a27-0a1ad6b089bd") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:48.9932380+03:00">
        <Text>[xUnit.net 00:00:01.94]     AccessToDB.Tests.SlopesRepositoryTests.TestGetSlopesAsyncEmpty [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DESKTOP-TJ9D65N" outcome="Error" timestamp="2022-11-03T20:25:49.0044543+03:00">
        <Text>[xUnit.net 00:00:01.95]     AccessToDB.Tests.SlopesRepositoryTests.TestAddSlopeAsyncFailsWhenSlopeIdRepeats(slope: Slope { SlopeID = 203, SlopeName = slopeName40ab5677-c545-404e-b5ca-93bf3a1c2e64, IsOpen = True, DifficultyLevel = 103, ConnectedLifts =  }) [FAIL]</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>