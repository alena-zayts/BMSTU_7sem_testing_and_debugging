{
  "uuid": "5667637a-a2ea-4d7d-8acc-6371e02ed3a7-AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 51, SlopeName = slopeNamec9202c85-7cba-47d3-9adb-30269d97d1be, IsOpen = True, DifficultyLevel = 80, ConnectedLifts =  })",
  "historyId": "AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 51, SlopeName = slopeNamec9202c85-7cba-47d3-9adb-30269d97d1be, IsOpen = True, DifficultyLevel = 80, ConnectedLifts =  })",
  "fullName": "AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 51, SlopeName = slopeNamec9202c85-7cba-47d3-9adb-30269d97d1be, IsOpen = True, DifficultyLevel = 80, ConnectedLifts =  })",
  "labels": [
    {
      "name": "thread",
      "value": ".NET Long Running Task"
    },
    {
      "name": "host",
      "value": "DESKTOP-TJ9D65N"
    },
    {
      "name": "testClass",
      "value": "AccessToDB.Tests.SlopesRepositoryTests"
    },
    {
      "name": "testMethod",
      "value": "AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 51, SlopeName = slopeNamec9202c85-7cba-47d3-9adb-30269d97d1be, IsOpen = True, DifficultyLevel = 80, ConnectedLifts =  })"
    },
    {
      "name": "package",
      "value": "AccessToDB.Tests.SlopesRepositoryTests"
    },
    {
      "name": "suite",
      "value": "SlopesRepositorySuite"
    }
  ],
  "links": [],
  "name": "AccessToDB.Tests.SlopesRepositoryTests.TestUpdateSlopeByIDAsyncOk(slope: Slope { SlopeID = 51, SlopeName = slopeNamec9202c85-7cba-47d3-9adb-30269d97d1be, IsOpen = True, DifficultyLevel = 80, ConnectedLifts =  })",
  "status": "failed",
  "statusDetails": {
    "known": false,
    "muted": false,
    "flaky": false,
    "message": "Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.",
    "trace": "   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)\r\n   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue& value)\r\n   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)\r\n   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadList(IMsgPackReader reader, UInt32 length)\r\n   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadArray(IMsgPackReader reader, UInt32 length)\r\n   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.Read(IMsgPackReader reader)\r\n   at ProGaudi.Tarantool.Client.Converters.SpaceConverter.Read(IMsgPackReader reader)\r\n   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.ReadArray(IMsgPackReader reader, UInt32 length)\r\n   at ProGaudi.MsgPack.Light.Converters.ArrayConverter`2.Read(IMsgPackReader reader)\r\n   at ProGaudi.Tarantool.Client.Converters.ResponsePacketConverter`1.ProGaudi.MsgPack.Light.IMsgPackConverter<ProGaudi.Tarantool.Client.Model.Responses.DataResponse<T>>.Read(IMsgPackReader reader)\r\n   at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)\r\n   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)\r\n   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)\r\n   at ProGaudi.Tarantool.Client.Schema.Select[T](UInt32 spaceId, Iterator iterator, UInt32 id)\r\n   at ProGaudi.Tarantool.Client.Schema.Reload()\r\n   at ProGaudi.Tarantool.Client.Box.Connect()\r\n   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)\r\n   at AccessToDB.TarantoolContext.Initialize(String connection_string) in C:\\Users\\alena\\Desktop\\7_sem\\testing_and_debugging\\SkiResort\\AccessToDB\\TarantoolContext.cs:line 52\r\n   at AccessToDB.TarantoolContext..ctor(String connection_string) in C:\\Users\\alena\\Desktop\\7_sem\\testing_and_debugging\\SkiResort\\AccessToDB\\TarantoolContext.cs:line 32\r\n   at AccessToDB.Tests.SlopesRepositoryTests..ctor() in C:\\Users\\alena\\Desktop\\7_sem\\testing_and_debugging\\SkiResort\\AccessToDB.Tests\\SlopesRepositoryTests.cs:line 28\r\n   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)"
  },
  "stage": "finished",
  "steps": [],
  "attachments": [],
  "parameters": [],
  "start": 1665504097473,
  "stop": 1665504097539
}