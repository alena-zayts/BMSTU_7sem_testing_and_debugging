{
  "uuid": "51c38621-a474-461e-9355-198ec752a844-AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 74)",
  "historyId": "AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 74)",
  "fullName": "AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 74)",
  "labels": [
    {
      "name": "thread",
      "value": ".NET Long Running Task"
    },
    {
      "name": "host",
      "value": "DESKTOP-TJ9D65N"
    },
    {
      "name": "testClass",
      "value": "AccessToDB.Tests.TurnstilesRepositoryTests"
    },
    {
      "name": "testMethod",
      "value": "AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 74)"
    },
    {
      "name": "package",
      "value": "AccessToDB.Tests.TurnstilesRepositoryTests"
    },
    {
      "name": "suite",
      "value": "TurnstilesRepositorySuite"
    }
  ],
  "links": [],
  "name": "AccessToDB.Tests.TurnstilesRepositoryTests.TestGetTurnstilesByLiftIdAsyncOk(liftID: 74)",
  "status": "failed",
  "statusDetails": {
    "known": false,
    "muted": false,
    "flaky": false,
    "message": "Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.",
    "trace": "   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)\r\n   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue& value)\r\n   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)\r\n   at ProGaudi.MsgPack.Light.MsgPackContext.<>c__DisplayClass24_0.<TryGenerateConverterFromGenericConverter>b__0(Type x)\r\n   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)\r\n   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()\r\n   at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)\r\n   at ProGaudi.MsgPack.Light.MsgPackSerializer.Deserialize[T](MemoryStream stream, MsgPackContext context)\r\n   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)\r\n   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)\r\n   at ProGaudi.Tarantool.Client.Schema.Select[T](UInt32 spaceId, Iterator iterator, UInt32 id)\r\n   at ProGaudi.Tarantool.Client.Schema.Reload()\r\n   at ProGaudi.Tarantool.Client.Box.Connect()\r\n   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)\r\n   at AccessToDB.TarantoolContext.Initialize(String connection_string) in C:\\Users\\alena\\Desktop\\7_sem\\testing_and_debugging\\SkiResort\\AccessToDB\\TarantoolContext.cs:line 52\r\n   at AccessToDB.TarantoolContext..ctor(String connection_string) in C:\\Users\\alena\\Desktop\\7_sem\\testing_and_debugging\\SkiResort\\AccessToDB\\TarantoolContext.cs:line 32\r\n   at AccessToDB.Tests.TurnstilesRepositoryTests..ctor() in C:\\Users\\alena\\Desktop\\7_sem\\testing_and_debugging\\SkiResort\\AccessToDB.Tests\\TurnstilesRepositoryTests.cs:line 29\r\n   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)"
  },
  "stage": "finished",
  "steps": [],
  "attachments": [],
  "parameters": [],
  "start": 1665856561376,
  "stop": 1665856561417
}