{
  "uuid": "d6503623-1970-4fc7-9ff5-6706a5d12aa0-BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 73, lift: Lift { LiftID = 137, LiftName = liftName5900cb3f-4c5e-4cec-953a-a2f337a7e05a, IsOpen = True, SeatsAmount = 58, LiftingTime = 138, QueueTime = 136, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryMock: Mock<ILiftsRepository:1>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })",
  "historyId": "BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 73, lift: Lift { LiftID = 137, LiftName = liftName5900cb3f-4c5e-4cec-953a-a2f337a7e05a, IsOpen = True, SeatsAmount = 58, LiftingTime = 138, QueueTime = 136, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryMock: Mock<ILiftsRepository:1>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })",
  "fullName": "BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 73, lift: Lift { LiftID = 137, LiftName = liftName5900cb3f-4c5e-4cec-953a-a2f337a7e05a, IsOpen = True, SeatsAmount = 58, LiftingTime = 138, QueueTime = 136, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryMock: Mock<ILiftsRepository:1>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })",
  "labels": [
    {
      "name": "thread",
      "value": ".NET Long Running Task"
    },
    {
      "name": "host",
      "value": "DESKTOP-TJ9D65N"
    },
    {
      "name": "testClass",
      "value": "BL.Tests.LiftsServiceTest"
    },
    {
      "name": "testMethod",
      "value": "BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 73, lift: Lift { LiftID = 137, LiftName = liftName5900cb3f-4c5e-4cec-953a-a2f337a7e05a, IsOpen = True, SeatsAmount = 58, LiftingTime = 138, QueueTime = 136, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryMock: Mock<ILiftsRepository:1>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })"
    },
    {
      "name": "package",
      "value": "BL.Tests.LiftsServiceTest"
    },
    {
      "name": "suite",
      "value": "LiftsServiceSuite"
    }
  ],
  "links": [],
  "name": "BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 73, lift: Lift { LiftID = 137, LiftName = liftName5900cb3f-4c5e-4cec-953a-a2f337a7e05a, IsOpen = True, SeatsAmount = 58, LiftingTime = 138, QueueTime = 136, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryMock: Mock<ILiftsRepository:1>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })",
  "status": "passed",
  "statusDetails": {
    "known": false,
    "muted": false,
    "flaky": false,
    "message": ""
  },
  "stage": "finished",
  "steps": [],
  "attachments": [],
  "parameters": [],
  "start": 1665411596631,
  "stop": 1665411596636
}