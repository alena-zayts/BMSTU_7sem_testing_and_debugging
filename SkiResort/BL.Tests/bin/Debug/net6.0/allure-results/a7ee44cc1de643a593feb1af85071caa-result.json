{
  "uuid": "d933b427-2e33-4239-a8ec-069e6ef1df01-BL.Tests.LiftsServiceTest.TestAdminDeleteLiftAsync(userID: 182, lift: Lift { LiftID = 106, LiftName = liftNamea6d46695-c33a-46e2-83f7-4944417a8f80, IsOpen = True, SeatsAmount = 46, LiftingTime = 163, QueueTime = 23, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:4>, liftsRepositoryMock: Mock<ILiftsRepository:4>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:4>, sut: LiftsService { })",
  "historyId": "BL.Tests.LiftsServiceTest.TestAdminDeleteLiftAsync(userID: 182, lift: Lift { LiftID = 106, LiftName = liftNamea6d46695-c33a-46e2-83f7-4944417a8f80, IsOpen = True, SeatsAmount = 46, LiftingTime = 163, QueueTime = 23, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:4>, liftsRepositoryMock: Mock<ILiftsRepository:4>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:4>, sut: LiftsService { })",
  "fullName": "BL.Tests.LiftsServiceTest.TestAdminDeleteLiftAsync(userID: 182, lift: Lift { LiftID = 106, LiftName = liftNamea6d46695-c33a-46e2-83f7-4944417a8f80, IsOpen = True, SeatsAmount = 46, LiftingTime = 163, QueueTime = 23, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:4>, liftsRepositoryMock: Mock<ILiftsRepository:4>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:4>, sut: LiftsService { })",
  "labels": [
    {
      "name": "thread",
      "value": ".NET Long Running Task"
    },
    {
      "name": "host",
      "value": "DESKTOP-TJ9D65N"
    },
    {
      "name": "testClass",
      "value": "BL.Tests.LiftsServiceTest"
    },
    {
      "name": "testMethod",
      "value": "BL.Tests.LiftsServiceTest.TestAdminDeleteLiftAsync(userID: 182, lift: Lift { LiftID = 106, LiftName = liftNamea6d46695-c33a-46e2-83f7-4944417a8f80, IsOpen = True, SeatsAmount = 46, LiftingTime = 163, QueueTime = 23, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:4>, liftsRepositoryMock: Mock<ILiftsRepository:4>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:4>, sut: LiftsService { })"
    },
    {
      "name": "package",
      "value": "BL.Tests.LiftsServiceTest"
    },
    {
      "name": "suite",
      "value": "LiftsServiceSuite"
    }
  ],
  "links": [],
  "name": "BL.Tests.LiftsServiceTest.TestAdminDeleteLiftAsync(userID: 182, lift: Lift { LiftID = 106, LiftName = liftNamea6d46695-c33a-46e2-83f7-4944417a8f80, IsOpen = True, SeatsAmount = 46, LiftingTime = 163, QueueTime = 23, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:4>, liftsRepositoryMock: Mock<ILiftsRepository:4>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:4>, sut: LiftsService { })",
  "status": "passed",
  "statusDetails": {
    "known": false,
    "muted": false,
    "flaky": false,
    "message": ""
  },
  "stage": "finished",
  "steps": [],
  "attachments": [],
  "parameters": [],
  "start": 1665413546165,
  "stop": 1665413546174
}