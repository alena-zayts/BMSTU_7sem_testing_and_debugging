{
  "uuid": "d013fe43-e9cd-41ba-924f-e2c205fa3c20-BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 28, lift: Lift { LiftID = 141, LiftName = liftNameea83b641-b3f5-4445-b874-02d48f6d996b, IsOpen = True, SeatsAmount = 123, LiftingTime = 124, QueueTime = 29, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryMock: Mock<ILiftsRepository:1>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })",
  "historyId": "BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 28, lift: Lift { LiftID = 141, LiftName = liftNameea83b641-b3f5-4445-b874-02d48f6d996b, IsOpen = True, SeatsAmount = 123, LiftingTime = 124, QueueTime = 29, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryMock: Mock<ILiftsRepository:1>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })",
  "fullName": "BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 28, lift: Lift { LiftID = 141, LiftName = liftNameea83b641-b3f5-4445-b874-02d48f6d996b, IsOpen = True, SeatsAmount = 123, LiftingTime = 124, QueueTime = 29, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryMock: Mock<ILiftsRepository:1>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })",
  "labels": [
    {
      "name": "thread",
      "value": ".NET Long Running Task"
    },
    {
      "name": "host",
      "value": "DESKTOP-TJ9D65N"
    },
    {
      "name": "testClass",
      "value": "BL.Tests.LiftsServiceTest"
    },
    {
      "name": "testMethod",
      "value": "BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 28, lift: Lift { LiftID = 141, LiftName = liftNameea83b641-b3f5-4445-b874-02d48f6d996b, IsOpen = True, SeatsAmount = 123, LiftingTime = 124, QueueTime = 29, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryMock: Mock<ILiftsRepository:1>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })"
    },
    {
      "name": "package",
      "value": "BL.Tests.LiftsServiceTest"
    }
  ],
  "links": [],
  "name": "BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 28, lift: Lift { LiftID = 141, LiftName = liftNameea83b641-b3f5-4445-b874-02d48f6d996b, IsOpen = True, SeatsAmount = 123, LiftingTime = 124, QueueTime = 29, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryMock: Mock<ILiftsRepository:1>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })",
  "status": "passed",
  "statusDetails": {
    "known": false,
    "muted": false,
    "flaky": false,
    "message": ""
  },
  "stage": "finished",
  "steps": [],
  "attachments": [],
  "parameters": [],
  "start": 1665409586414,
  "stop": 1665409586460
}