{"uid":"77f3285dd3e26571","name":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 242, initialSlopes: [Slope { SlopeID = 14, SlopeName = slopeName519a380c-c7ce-42a9-9372-72a4b67b84b8, IsOpen = True, DifficultyLevel = 216, ConnectedLifts =  }, Slope { SlopeID = 57, SlopeName = slopeNameb7623e6d-44ef-4de2-94d5-accc8d51dc6d, IsOpen = False, DifficultyLevel = 9, ConnectedLifts =  }, Slope { SlopeID = 16, SlopeName = slopeName643724a8-be91-40e5-b1e9-bc8aeaf7f199, IsOpen = True, DifficultyLevel = 183, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:2>, slopesRepositoryMock: Mock<ISlopesRepository:2>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:2>, sut: SlopesService { })","fullName":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 242, initialSlopes: [Slope { SlopeID = 14, SlopeName = slopeName519a380c-c7ce-42a9-9372-72a4b67b84b8, IsOpen = True, DifficultyLevel = 216, ConnectedLifts =  }, Slope { SlopeID = 57, SlopeName = slopeNameb7623e6d-44ef-4de2-94d5-accc8d51dc6d, IsOpen = False, DifficultyLevel = 9, ConnectedLifts =  }, Slope { SlopeID = 16, SlopeName = slopeName643724a8-be91-40e5-b1e9-bc8aeaf7f199, IsOpen = True, DifficultyLevel = 183, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:2>, slopesRepositoryMock: Mock<ISlopesRepository:2>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:2>, sut: SlopesService { })","historyId":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 242, initialSlopes: [Slope { SlopeID = 14, SlopeName = slopeName519a380c-c7ce-42a9-9372-72a4b67b84b8, IsOpen = True, DifficultyLevel = 216, ConnectedLifts =  }, Slope { SlopeID = 57, SlopeName = slopeNameb7623e6d-44ef-4de2-94d5-accc8d51dc6d, IsOpen = False, DifficultyLevel = 9, ConnectedLifts =  }, Slope { SlopeID = 16, SlopeName = slopeName643724a8-be91-40e5-b1e9-bc8aeaf7f199, IsOpen = True, DifficultyLevel = 183, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:2>, slopesRepositoryMock: Mock<ISlopesRepository:2>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:2>, sut: SlopesService { })","time":{"start":1665408695076,"stop":1665408695104,"duration":28},"status":"passed","statusMessage":"","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"thread","value":".NET Long Running Task"},{"name":"host","value":"DESKTOP-TJ9D65N"},{"name":"testClass","value":"BL.Tests.SlopesServiceTest"},{"name":"testMethod","value":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 242, initialSlopes: [Slope { SlopeID = 14, SlopeName = slopeName519a380c-c7ce-42a9-9372-72a4b67b84b8, IsOpen = True, DifficultyLevel = 216, ConnectedLifts =  }, Slope { SlopeID = 57, SlopeName = slopeNameb7623e6d-44ef-4de2-94d5-accc8d51dc6d, IsOpen = False, DifficultyLevel = 9, ConnectedLifts =  }, Slope { SlopeID = 16, SlopeName = slopeName643724a8-be91-40e5-b1e9-bc8aeaf7f199, IsOpen = True, DifficultyLevel = 183, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:2>, slopesRepositoryMock: Mock<ISlopesRepository:2>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:2>, sut: SlopesService { })"},{"name":"package","value":"BL.Tests.SlopesServiceTest"},{"name":"suite","value":"Suite for SlopesService class"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"77f3285dd3e26571.json","parameterValues":[]}