{"uid":"5dea5ba796323e4b","name":"BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 28, lift: Lift { LiftID = 141, LiftName = liftNameea83b641-b3f5-4445-b874-02d48f6d996b, IsOpen = True, SeatsAmount = 123, LiftingTime = 124, QueueTime = 29, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryMock: Mock<ILiftsRepository:1>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })","fullName":"BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 28, lift: Lift { LiftID = 141, LiftName = liftNameea83b641-b3f5-4445-b874-02d48f6d996b, IsOpen = True, SeatsAmount = 123, LiftingTime = 124, QueueTime = 29, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryMock: Mock<ILiftsRepository:1>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })","historyId":"BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 28, lift: Lift { LiftID = 141, LiftName = liftNameea83b641-b3f5-4445-b874-02d48f6d996b, IsOpen = True, SeatsAmount = 123, LiftingTime = 124, QueueTime = 29, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryMock: Mock<ILiftsRepository:1>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })","time":{"start":1665409586414,"stop":1665409586460,"duration":46},"status":"passed","statusMessage":"","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"thread","value":".NET Long Running Task"},{"name":"host","value":"DESKTOP-TJ9D65N"},{"name":"testClass","value":"BL.Tests.LiftsServiceTest"},{"name":"testMethod","value":"BL.Tests.LiftsServiceTest.TestGetLiftInfoAsync(userID: 28, lift: Lift { LiftID = 141, LiftName = liftNameea83b641-b3f5-4445-b874-02d48f6d996b, IsOpen = True, SeatsAmount = 123, LiftingTime = 124, QueueTime = 29, ConnectedSlopes =  }, checkPermissionServiceMock: Mock<ICheckPermissionService:1>, liftsRepositoryMock: Mock<ILiftsRepository:1>, liftsSlopesRepositoryMock: Mock<ILiftsSlopesRepository:1>, sut: LiftsService { })"},{"name":"package","value":"BL.Tests.LiftsServiceTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"5dea5ba796323e4b.json","parameterValues":[]}