{"uid":"7d649f6c58553ea7","name":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 110, initialSlopes: [Slope { SlopeID = 199, SlopeName = slopeNamea9abc54f-844f-4eb0-beb2-89626e2e218a, IsOpen = True, DifficultyLevel = 102, ConnectedLifts =  }, Slope { SlopeID = 204, SlopeName = slopeName951a6b09-e431-4168-8855-efcd0fd1c59d, IsOpen = False, DifficultyLevel = 44, ConnectedLifts =  }, Slope { SlopeID = 90, SlopeName = slopeName9772d706-919d-46d9-bd4b-3e8c80eb034d, IsOpen = True, DifficultyLevel = 53, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","fullName":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 110, initialSlopes: [Slope { SlopeID = 199, SlopeName = slopeNamea9abc54f-844f-4eb0-beb2-89626e2e218a, IsOpen = True, DifficultyLevel = 102, ConnectedLifts =  }, Slope { SlopeID = 204, SlopeName = slopeName951a6b09-e431-4168-8855-efcd0fd1c59d, IsOpen = False, DifficultyLevel = 44, ConnectedLifts =  }, Slope { SlopeID = 90, SlopeName = slopeName9772d706-919d-46d9-bd4b-3e8c80eb034d, IsOpen = True, DifficultyLevel = 53, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","historyId":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 110, initialSlopes: [Slope { SlopeID = 199, SlopeName = slopeNamea9abc54f-844f-4eb0-beb2-89626e2e218a, IsOpen = True, DifficultyLevel = 102, ConnectedLifts =  }, Slope { SlopeID = 204, SlopeName = slopeName951a6b09-e431-4168-8855-efcd0fd1c59d, IsOpen = False, DifficultyLevel = 44, ConnectedLifts =  }, Slope { SlopeID = 90, SlopeName = slopeName9772d706-919d-46d9-bd4b-3e8c80eb034d, IsOpen = True, DifficultyLevel = 53, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","time":{"start":1665436736837,"stop":1665436736847,"duration":10},"status":"passed","statusMessage":"","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"thread","value":".NET Long Running Task"},{"name":"host","value":"DESKTOP-TJ9D65N"},{"name":"testClass","value":"BL.Tests.SlopesServiceTest"},{"name":"testMethod","value":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 110, initialSlopes: [Slope { SlopeID = 199, SlopeName = slopeNamea9abc54f-844f-4eb0-beb2-89626e2e218a, IsOpen = True, DifficultyLevel = 102, ConnectedLifts =  }, Slope { SlopeID = 204, SlopeName = slopeName951a6b09-e431-4168-8855-efcd0fd1c59d, IsOpen = False, DifficultyLevel = 44, ConnectedLifts =  }, Slope { SlopeID = 90, SlopeName = slopeName9772d706-919d-46d9-bd4b-3e8c80eb034d, IsOpen = True, DifficultyLevel = 53, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })"},{"name":"package","value":"BL.Tests.SlopesServiceTest"},{"name":"suite","value":"SlopesServiceSuite"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"7d649f6c58553ea7.json","parameterValues":[]}