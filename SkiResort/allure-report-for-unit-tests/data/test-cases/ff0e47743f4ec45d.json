{"uid":"ff0e47743f4ec45d","name":"AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 162, CardID = 242, UserEmail = UserEmail7eb98fd9-adb5-4df9-bbe8-28087e87f36a, Password = password4064515f-015e-4890-a1e2-7655204c8141, Permissions = UNAUTHORIZED })","fullName":"AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 162, CardID = 242, UserEmail = UserEmail7eb98fd9-adb5-4df9-bbe8-28087e87f36a, Password = password4064515f-015e-4890-a1e2-7655204c8141, Permissions = UNAUTHORIZED })","historyId":"AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 162, CardID = 242, UserEmail = UserEmail7eb98fd9-adb5-4df9-bbe8-28087e87f36a, Password = password4064515f-015e-4890-a1e2-7655204c8141, Permissions = UNAUTHORIZED })","time":{"start":1665502663101,"stop":1665502663107,"duration":6},"status":"failed","statusMessage":"Tarantool returns an error for request with id: 1, code: 0x0000802D  and message: User 'ski_admin' is not found. ","statusTrace":"   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequestImpl[TRequest](TRequest request, Nullable`1 timeout)\r\n   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequestWithEmptyResponse[TRequest](TRequest request, Nullable`1 timeout)\r\n   at ProGaudi.Tarantool.Client.LogicalConnection.LoginIfNotGuest(GreetingsResponse greetings)\r\n   at ProGaudi.Tarantool.Client.LogicalConnection.Connect()\r\n   at ProGaudi.Tarantool.Client.LogicalConnectionManager.Connect()\r\n   at ProGaudi.Tarantool.Client.Box.Connect()\r\n   at ProGaudi.Tarantool.Client.Box.Connect(String replicationSource)\r\n   at AccessToDB.TarantoolContext.Initialize(String connection_string) in C:\\Users\\alena\\Desktop\\7_sem\\testing_and_debugging\\SkiResort\\AccessToDB\\TarantoolContext.cs:line 52\r\n   at AccessToDB.TarantoolContext..ctor(String connection_string) in C:\\Users\\alena\\Desktop\\7_sem\\testing_and_debugging\\SkiResort\\AccessToDB\\TarantoolContext.cs:line 32\r\n   at AccessToDB.Tests.UsersRepositoryTests..ctor() in C:\\Users\\alena\\Desktop\\7_sem\\testing_and_debugging\\SkiResort\\AccessToDB.Tests\\UsersRepositoryTests.cs:line 28\r\n   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"thread","value":".NET Long Running Task"},{"name":"host","value":"DESKTOP-TJ9D65N"},{"name":"testClass","value":"AccessToDB.Tests.UsersRepositoryTests"},{"name":"testMethod","value":"AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 162, CardID = 242, UserEmail = UserEmail7eb98fd9-adb5-4df9-bbe8-28087e87f36a, Password = password4064515f-015e-4890-a1e2-7655204c8141, Permissions = UNAUTHORIZED })"},{"name":"package","value":"AccessToDB.Tests.UsersRepositoryTests"},{"name":"suite","value":"UsersRepositorySuite"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ff0e47743f4ec45d.json","parameterValues":[]}