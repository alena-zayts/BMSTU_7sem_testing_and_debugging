{"uid":"52e855f209e571f7","name":"AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 220, CardID = 129, UserEmail = UserEmail12594289-1868-4a9e-ad2d-07fa49c35188, Password = passwordfc0bbde0-75dc-4437-9bda-89cfa17e3c38, Permissions = UNAUTHORIZED })","fullName":"AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 220, CardID = 129, UserEmail = UserEmail12594289-1868-4a9e-ad2d-07fa49c35188, Password = passwordfc0bbde0-75dc-4437-9bda-89cfa17e3c38, Permissions = UNAUTHORIZED })","historyId":"AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 220, CardID = 129, UserEmail = UserEmail12594289-1868-4a9e-ad2d-07fa49c35188, Password = passwordfc0bbde0-75dc-4437-9bda-89cfa17e3c38, Permissions = UNAUTHORIZED })","time":{"start":1665512994631,"stop":1665512995330,"duration":699},"status":"failed","statusMessage":"Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.","statusTrace":"   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)\r\n   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue& value)\r\n   at ProGaudi.MsgPack.Light.MsgPackContext.GetObjectActivator(Type type)\r\n   at ProGaudi.MsgPack.Light.MsgPackContext.<>c__DisplayClass24_0.<TryGenerateConverterFromGenericConverter>b__0(Type x)\r\n   at ProGaudi.MsgPack.Light.MsgPackContext.TryGenerateConverterFromGenericConverter(Type type)\r\n   at ProGaudi.MsgPack.Light.MsgPackContext.GetConverter[T]()\r\n   at ProGaudi.MsgPack.Light.MsgPackSerializer.GetConverter[T](MsgPackContext context)\r\n   at ProGaudi.MsgPack.Light.MsgPackSerializer.Serialize[T](T data, MemoryStream stream, MsgPackContext context)\r\n   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequestImpl[TRequest](TRequest request, Nullable`1 timeout)\r\n   at ProGaudi.Tarantool.Client.LogicalConnection.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)\r\n   at ProGaudi.Tarantool.Client.LogicalConnectionManager.SendRequest[TRequest,TResponse](TRequest request, Nullable`1 timeout)\r\n   at ProGaudi.Tarantool.Client.Index.Delete[TKey,TTuple](TKey key)\r\n   at AccessToDB.RepositoriesTarantool.TarantoolUsersRepository.DeleteUserByIDAsync(UInt32 userID) in C:\\Users\\alena\\Desktop\\7_sem\\testing_and_debugging\\SkiResort\\AccessToDB\\TarantoolRepositories\\TarantoolUsersRepository.cs:line 110\r\n   at AccessToDB.Tests.UsersRepositoryTests.CleanUsersTable() in C:\\Users\\alena\\Desktop\\7_sem\\testing_and_debugging\\SkiResort\\AccessToDB.Tests\\UsersRepositoryTests.cs:line 42\r\n   at AccessToDB.Tests.UsersRepositoryTests.Dispose() in C:\\Users\\alena\\Desktop\\7_sem\\testing_and_debugging\\SkiResort\\AccessToDB.Tests\\UsersRepositoryTests.cs:line 34\r\n   at Xunit.Sdk.ExecutionTimer.Aggregate(Action action) in /_/src/xunit.execution/Sdk/Frameworks/ExecutionTimer.cs:line 31\r\n   at ReflectionAbstractionExtensions.DisposeTestClass(ITest test, Object testClass, IMessageBus messageBus, ExecutionTimer timer, CancellationTokenSource cancellationTokenSource) in /_/src/xunit.execution/Extensions/ReflectionAbstractionExtensions.cs:line 79\r\n   at Xunit.Sdk.TestInvoker`1.<>c__DisplayClass47_0.<RunAsync>b__1() in /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs:line 216\r\n   at Xunit.Sdk.ExceptionAggregator.Run(Action code) in /_/src/xunit.core/Sdk/ExceptionAggregator.cs:line 73","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"thread","value":".NET Long Running Task"},{"name":"host","value":"DESKTOP-TJ9D65N"},{"name":"testClass","value":"AccessToDB.Tests.UsersRepositoryTests"},{"name":"testMethod","value":"AccessToDB.Tests.UsersRepositoryTests.TestAddUserAsyncFailsWhenUserIdRepeats(user: User { UserID = 220, CardID = 129, UserEmail = UserEmail12594289-1868-4a9e-ad2d-07fa49c35188, Password = passwordfc0bbde0-75dc-4437-9bda-89cfa17e3c38, Permissions = UNAUTHORIZED })"},{"name":"package","value":"AccessToDB.Tests.UsersRepositoryTests"},{"name":"suite","value":"UsersRepositorySuite"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"52e855f209e571f7.json","parameterValues":[]}