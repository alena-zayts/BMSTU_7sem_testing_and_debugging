{"uid":"618edd9b7b3a16c7","name":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 171, initialSlopes: [Slope { SlopeID = 192, SlopeName = slopeName40c05038-f63b-4e8c-9dea-f8645ece65c4, IsOpen = True, DifficultyLevel = 237, ConnectedLifts =  }, Slope { SlopeID = 1, SlopeName = slopeNamea63c0374-262b-4de7-9e4a-fe4c46140661, IsOpen = False, DifficultyLevel = 129, ConnectedLifts =  }, Slope { SlopeID = 152, SlopeName = slopeName263276d9-6cea-4963-8bbb-b59f6ad9fc66, IsOpen = True, DifficultyLevel = 8, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","fullName":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 171, initialSlopes: [Slope { SlopeID = 192, SlopeName = slopeName40c05038-f63b-4e8c-9dea-f8645ece65c4, IsOpen = True, DifficultyLevel = 237, ConnectedLifts =  }, Slope { SlopeID = 1, SlopeName = slopeNamea63c0374-262b-4de7-9e4a-fe4c46140661, IsOpen = False, DifficultyLevel = 129, ConnectedLifts =  }, Slope { SlopeID = 152, SlopeName = slopeName263276d9-6cea-4963-8bbb-b59f6ad9fc66, IsOpen = True, DifficultyLevel = 8, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","historyId":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 171, initialSlopes: [Slope { SlopeID = 192, SlopeName = slopeName40c05038-f63b-4e8c-9dea-f8645ece65c4, IsOpen = True, DifficultyLevel = 237, ConnectedLifts =  }, Slope { SlopeID = 1, SlopeName = slopeNamea63c0374-262b-4de7-9e4a-fe4c46140661, IsOpen = False, DifficultyLevel = 129, ConnectedLifts =  }, Slope { SlopeID = 152, SlopeName = slopeName263276d9-6cea-4963-8bbb-b59f6ad9fc66, IsOpen = True, DifficultyLevel = 8, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })","time":{"start":1665436817224,"stop":1665436817328,"duration":104},"status":"passed","statusMessage":"","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"thread","value":".NET Long Running Task"},{"name":"host","value":"DESKTOP-TJ9D65N"},{"name":"testClass","value":"BL.Tests.SlopesServiceTest"},{"name":"testMethod","value":"BL.Tests.SlopesServiceTest.TestGetSlopesInfoAsync(userID: 171, initialSlopes: [Slope { SlopeID = 192, SlopeName = slopeName40c05038-f63b-4e8c-9dea-f8645ece65c4, IsOpen = True, DifficultyLevel = 237, ConnectedLifts =  }, Slope { SlopeID = 1, SlopeName = slopeNamea63c0374-262b-4de7-9e4a-fe4c46140661, IsOpen = False, DifficultyLevel = 129, ConnectedLifts =  }, Slope { SlopeID = 152, SlopeName = slopeName263276d9-6cea-4963-8bbb-b59f6ad9fc66, IsOpen = True, DifficultyLevel = 8, ConnectedLifts =  }], checkPermissionServiceMock: Mock<ICheckPermissionService:7>, slopesRepositoryStub: Mock<ISlopesRepository:5>, liftsSlopesRepositoryStub: Mock<ILiftsSlopesRepository:10>, sut: SlopesService { })"},{"name":"package","value":"BL.Tests.SlopesServiceTest"},{"name":"suite","value":"SlopesServiceSuite"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"618edd9b7b3a16c7.json","parameterValues":[]}