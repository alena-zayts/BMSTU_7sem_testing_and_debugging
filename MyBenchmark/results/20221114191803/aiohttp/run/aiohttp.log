aiohttp: [2022-11-14 19:19:06 +0000] [8] [INFO] Starting gunicorn 20.1.0
aiohttp: [2022-11-14 19:19:06 +0000] [8] [INFO] Listening at: http://0.0.0.0:8080 (8)
aiohttp: [2022-11-14 19:19:06 +0000] [8] [INFO] Using worker: aiohttp.worker.GunicornUVLoopWebWorker
aiohttp: [2022-11-14 19:19:06 +0000] [10] [INFO] Booting worker with pid: 10
aiohttp: [2022-11-14 19:19:06 +0000] [11] [INFO] Booting worker with pid: 11
aiohttp: [2022-11-14 19:19:06 +0000] [12] [INFO] Booting worker with pid: 12
aiohttp: [2022-11-14 19:19:06 +0000] [13] [INFO] Booting worker with pid: 13
aiohttp: [2022-11-14 19:19:06 +0000] [14] [INFO] Booting worker with pid: 14
aiohttp: [2022-11-14 19:19:06 +0000] [15] [INFO] Booting worker with pid: 15
aiohttp: [2022-11-14 19:19:06 +0000] [16] [INFO] Booting worker with pid: 16
aiohttp: [2022-11-14 19:19:06 +0000] [17] [INFO] Booting worker with pid: 17
aiohttp: [2022-11-14 19:19:16 +0000] [17] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (129,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:19 +0000] [17] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (2896,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:19 +0000] [17] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (6358,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:22 +0000] [17] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (4991,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:22 +0000] [17] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (6342,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:25 +0000] [17] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (283,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:25 +0000] [17] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (3900,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:28 +0000] [17] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (2910,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:28 +0000] [17] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (843,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [17] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (2925,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [17] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (6054,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [17] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (3654,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [12] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (2797,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [13] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (2562,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [17] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (7401,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [14] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (3696,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [11] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (964,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [14] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (5127,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [15] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (7285,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [16] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (4886,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [14] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (6216,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [11] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (9575,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [15] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (683,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [14] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (1491,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [16] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (8143,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
aiohttp: [2022-11-14 19:19:31 +0000] [14] [ERROR] Error handling request
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 396, in _prepare_and_execute
aiohttp:     prepared_stmt, attributes = await adapt_connection._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 638, in _prepare
aiohttp:     prepared_stmt = await self._connection.prepare(operation)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 566, in prepare
aiohttp:     return await self._prepare(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 584, in _prepare
aiohttp:     stmt = await self._get_statement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/asyncpg/connection.py", line 398, in _get_statement
aiohttp:     statement = await self._protocol.prepare(
aiohttp:   File "asyncpg/protocol/protocol.pyx", line 168, in prepare
aiohttp: asyncpg.exceptions.UndefinedTableError: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: The above exception was the direct cause of the following exception:
aiohttp: Traceback (most recent call last):
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_protocol.py", line 435, in _handle_request
aiohttp:     resp = await request_handler(request)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/aiohttp/web_app.py", line 504, in _handle
aiohttp:     resp = await handler(request)
aiohttp:   File "/aiohttp/hello/views.py", line 53, in multiple_database_queries
aiohttp:     num = await sess.scalar(READ_SELECT_ORM.filter_by(id=id_))
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 236, in scalar
aiohttp:     result = await self.execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/ext/asyncio/session.py", line 211, in execute
aiohttp:     return await greenlet_spawn(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 134, in greenlet_spawn
aiohttp:     result = context.throw(*sys.exc_info())
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1692, in execute
aiohttp:     result = conn._execute_20(statement, params or {}, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1614, in _execute_20
aiohttp:     return meth(self, args_10style, kwargs_10style, execution_options)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
aiohttp:     return connection._execute_clauseelement(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1481, in _execute_clauseelement
aiohttp:     ret = self._execute_context(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1845, in _execute_context
aiohttp:     self._handle_dbapi_exception(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2026, in _handle_dbapi_exception
aiohttp:     util.raise_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
aiohttp:     raise exception
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1802, in _execute_context
aiohttp:     self.dialect.do_execute(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
aiohttp:     cursor.execute(statement, parameters)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 457, in execute
aiohttp:     self._adapt_connection.await_(
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 76, in await_only
aiohttp:     return current.driver.switch(awaitable)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 129, in greenlet_spawn
aiohttp:     value = await result
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 432, in _prepare_and_execute
aiohttp:     self._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 367, in _handle_exception
aiohttp:     self._adapt_connection._handle_exception(error)
aiohttp:   File "/usr/local/lib/python3.8/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 660, in _handle_exception
aiohttp:     raise translated_error from error
aiohttp: sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "world" does not exist
aiohttp: [SQL: SELECT world.randomnumber 
aiohttp: FROM world 
aiohttp: WHERE world.id = %s]
aiohttp: [parameters: (9152,)]
aiohttp: (Background on this error at: https://sqlalche.me/e/14/f405)
